{"version":3,"file":"static/webpack/static/development/pages/Main.js.4be0e864e81c7f3e20ca.hot-update.js","sources":["webpack:///./pages/Trade.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Tab, Tabs, Typography } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nimport DataTable from '../components/DataTable';\n\n\nconst columns= [\n    {\n        width: 400,\n        label: 'Dessert',\n        dataKey: 'dessert',\n    },\n    {\n        width: 240,\n        label: 'Calories\\u00A0(g)',\n        dataKey: 'calories',\n        numeric: true,\n    },\n    {\n        width: 240,\n        label: 'Fat\\u00A0(g)',\n        dataKey: 'fat',\n        numeric: true,\n    },\n    {\n        width: 240,\n        label: 'Carbs\\u00A0(g)',\n        dataKey: 'carbs',\n        numeric: true,\n    },\n    {\n        width: 240,\n        label: 'Protein\\u00A0(g)',\n        dataKey: 'protein',\n        numeric: true,\n    },\n];\n\nconst sample = [\n    ['Frozen yoghurt', 159, 6.0, 24, 4.0],\n    ['Ice cream sandwich', 237, 9.0, 37, 4.3],\n    ['Eclair', 262, 16.0, 24, 6.0],\n    ['Cupcake', 305, 3.7, 67, 4.3],\n    ['Gingerbread', 356, 16.0, 49, 3.9],\n];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n    return { id, dessert, calories, fat, carbs, protein };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n    const randomSelection = sample[Math.floor(Math.random() * sample.length)];\n    rows.push(createData(i, ...randomSelection));\n}\n\n/**\n * @class TabContainer\n * @param props\n * @return {*}\n * @constructor\n */\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default function Trade(props) {\n    const [value, setValue] = useState(0);\n    const [data, setData] = useState({ rows: [], columns: []});\n\n    /**\n     * @function tabChange\n     * @param e\n     * @param newValue\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n     */\n\n    function tabChange(e, newValue) {\n        setValue(newValue);\n    }\n\n    console.log(props.data);\n    return (\n        <div>\n            <div>\n                <Tabs\n                    value={value}\n                    onChange={tabChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab label=\"Fields\"/>\n                    <Tab label=\"Autofill\"/>\n                    <Tab label=\"CashFlow Schedule\"/>\n                    <Tab label=\"Confirmation\"/>\n                    <Tab label=\"Best Match Score\"/>\n                </Tabs>\n                {\n                    value === 0 &&\n                    (\n                        <TabContainer>\n                            <DataTable data={ props.data } onRowClick={() => window.alert('row clicked')}/>\n                        </TabContainer>\n                    )\n                }\n                {\n                    value === 1 &&\n                    (\n                        <TabContainer>\n                            <DataTable data={{columns: columns, rows: rows}} onRowClick={() => window.alert('row clicked')}/>\n                        </TabContainer>\n                    )\n                }\n                {\n                    value === 2 &&\n                    (\n                        <h1> CashFlow Schedule </h1>\n                    )\n                }\n                {\n                    value === 3 &&\n                    (\n                        <h1> Confirmation </h1>\n                    )\n                }\n                {\n                    value === 4 &&\n                    (\n                        <h1> Best Match Score </h1>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAFA;AAAA;AAAA;AAIA;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;;;;A","sourceRoot":""}