{"version":3,"file":"static/webpack/static/development/pages/Main.js.c653e5b5aa4b609fc7c2.hot-update.js","sources":["webpack:///./pages/NewTrade.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, makeStyles, Tabs, Tab, Typography } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\n\n\nimport NewTradeForm from '../components/newtrade/NewTradeForm';\nimport CustomiseFields from '../components/newtrade/CustomiseFields';\nimport DataTable from '../components/DataTable';\n\n/**\n * @class TabContainer\n * @param props\n * @return {*}\n * @constructor\n */\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\n/**\n * @constant useStyles\n * hook used for styling\n */\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    customise: {\n        marginTop: 20\n    }\n}));\n\n/**\n * @class NewTrade\n * Contains the forms for creating a NewTrade\n * Dependencies used:\n * @material-ui for Grid, makeStyles, Tabs, Tab, Typography\n * Custom Components used:\n * @class NewTradeForm\n * @class CustomiseFields\n */\n\nexport default function NewTrade(props) {\n    const classes = useStyles();\n    const FIELDS = useSelector(state => state.NewTradeReducer.NEW_TRADE_FIELDS);\n    const trades_length = useSelector(state => state.TradeReducer.tradeStates).length;\n    const dispatch = useDispatch();\n    const [value, setValue] = useState(0);\n\n    /**\n     * @function handleSubmit\n     * @param fields\n     * takes fields passed in from NewTradeForm and appends to 'tradeStates' piece of state\n     */\n    function handleSubmit(fields) {\n        console.log(fields);\n        const nameRemoved = fields.filter((value, index) => {\n            return index !== fields.length - 1;\n        });\n        const payload = { id: trades_length, value: nameRemoved };\n        dispatch({ type: 'NEW_TRADE', payload: payload });\n        props.addNewTrade(fields[fields.length - 1], FIELDS, nameRemoved);\n    }\n\n    /**\n     * @function addFields\n     * @param addFields\n     * takes the custom fields created in CustomiseFields component and appends to NEW_TRADE_FIELDS piece of state\n     */\n    function addFields(addFields) {\n        dispatch({ type: 'APPEND_FIELDS', payload: addFields });\n    }\n\n    /**\n     * @function tabChange\n     * @param e\n     * @param newValue\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n     */\n\n    function tabChange(e, newValue) {\n        setValue(newValue);\n    }\n\n    /**\n     * @return\n     * @type Grid\n     * @type TabContainer\n     * @type Tab\n     * @type Tabs\n     * @type NewTradeForm\n     * @type CustomiseFields\n     */\n\n    return (\n        <div className={ classes.root }>\n            <div>\n                <Tabs\n                    value={ value }\n                    onChange={ tabChange }\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab label=\"Edit\" />\n                    <Tab label=\"Autofill\" />\n                </Tabs>\n\n                {\n                    value === 0 &&\n                    <TabContainer>\n                        <Grid container spacing={ 2 }>\n                            <Grid item xs={ 6 }>\n                                <NewTradeForm fieldList={ FIELDS } onSubmit={ handleSubmit.bind(this) } isDisabled={ false }/>\n                            </Grid>\n                            <Grid item xs={ 6 } >\n                                <CustomiseFields className={ classes.customise } addFields={ addFields.bind(this) }/>\n                            </Grid>\n                        </Grid>\n                    </TabContainer>\n                }\n\n                {\n                    value === 1\n                    &&\n                    <TabContainer>\n                        <h1> Stuff </h1>\n                    </TabContainer>\n                }\n            </div>\n        </div>\n    );\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AADA;AAIA;;;;;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAAA;AAUA;;;;;;;;;;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAOA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;;;;;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAOA;AACA;AACA;AAEA;;;;;;;;;;;AAUA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAgBA;;;;A","sourceRoot":""}