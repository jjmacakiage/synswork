{"version":3,"file":"static/webpack/static/development/pages/Main.js.96b0f671042e04bcb2c6.hot-update.js","sources":["webpack:///./components/newtrade/NewTradeContent.js","webpack:///./js/new_trade_fields.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {Button, Grid, makeStyles, Tabs, Tab, Select, TextField, InputLabel, Divider, OutlinedInput } from '@material-ui/core';\nimport {Eclipse} from \"react-loading-io\";\nimport {ErrorMessage, Field, Formik, Form} from \"formik\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\n\n\nimport { TabContainer } from \"../../utils/tradehelpers\";\nimport { extractByKey } from \"../../js/new_trade_fields\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\n/**\n * @constant useStyles\n * hook used for styling\n */\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    customise: {\n        marginTop: 20\n    }\n}));\n\n/**\n * @class NewTradeContent\n * Contains the forms for creating a NewTrade\n * Dependencies used:\n * @material-ui for Grid, makeStyles, Tabs, Tab, Typography\n * Custom Components used:\n * @class NewTradeContent\n */\n\nexport default function NewTradeContent(props) {\n    const classes = useStyles();\n    const { fields, counterpartyList, trades_length, schema, validationFunctions } = props;\n    const [isLoading, changeLoading] = useState(false);\n    const [counterparty, changeCounterparty] = useState('');\n    const dispatch = useDispatch();\n    const [value, setValue] = useState(0);\n\n\n    /**\n     * @function handleSubmit\n     * @param result\n     * takes fields passed in from the form and appends to 'tradeStates' piece of state\n     */\n    function handleSubmit(result) {\n        const nameRemoved = result.filter((value, index) => {\n            return index !== result.length - 1;\n        });\n        const payload = { id: trades_length, value: nameRemoved };\n        dispatch({ type: 'NEW_TRADE', payload: payload });\n    }\n\n\n    /**\n     * @function addFields\n     * @param addFields\n     * takes the custom fields created in component and appends to NEW_TRADE_FIELDS piece of state\n     */\n    function addFields(addFields) {\n        dispatch({ type: 'APPEND_FIELDS', payload: addFields });\n    }\n\n    /**\n     * @function tabChange\n     * @param e\n     * @param newValue\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n     */\n\n    function tabChange(e, newValue) {\n        setValue(newValue);\n    }\n\n    /**\n     * @return\n     * @type Grid\n     * @type TabContainer\n     * @type div\n     */\n\n    function handleCounterpartyChange(e) {\n        changeCounterparty(e.target.value);\n    }\n    function createFormColumns(array) {\n        return (\n            <>\n            {\n                array.map((field, index) => {\n                    if (field[1] !== 'select') {\n                        return (\n                            <Grid item xs={ 4 }>\n                                <Field name={field[0]}\n                                       key={field[0]}\n                                       render={() => (\n                                           <TextField label={ (field[1] === 'date') ? '' : field[0]}\n                                                      disabled={counterparty === ''}\n                                                      variant=\"outlined\" type={ field[1] }\n                                           />\n                                       )}\n                                />\n                                <ErrorMessage name={field[0]} />\n                            </Grid>\n                        );\n                    }\n                    else {\n                        return (\n                            <Grid item xs={ 4 }>\n                                <Field name={field[0]}\n                                       key={field[0]}\n                                       render={() => (\n                                           <div>\n                                               <InputLabel\n                                                   htmlFor={field[0]}> {field[0]} </InputLabel>\n                                               <Select\n                                                   input={<OutlinedInput name={field[0]} />}\n                                               >\n                                                   <option value=\"DEFAULT\"> Default</option>\n                                               </Select>\n                                               <ErrorMessage name={field[0]}/>\n                                           </div>\n                                       )}\n                                />\n                            </Grid>\n                        )\n                    }\n                })\n            }\n            </>\n        )\n    }\n\n    function createGrid(items, divider) {\n        return (\n            <Grid container spacing={ 2 }>\n                {\n                    items.map()\n                }\n            </Grid>\n        )\n    }\n    function extendedFields() {\n        const extended = fields.filter((field) => {\n            return field[2] === '1';\n        });\n        const returnExtended = i => {\n            return extended[i];\n        };\n        return (\n            <Grid container spacing={ 2 }>\n                {\n                    [[0], [1,2,3], [4], [5,6], [7,8,9], [10,11,12], [13,14,15], [16,17], [18,19,20], [21,22,23]].map((value, index) => {\n                        const temp = [];\n                        for (let i = 0; i < value.length; i++) {\n                            temp.push(returnExtended(value[i]));\n                        }\n                        return (\n                            <Grid item xs={ 12 }>\n                                <Grid container spacing={ 2 }>\n                                    { createFormColumns(temp) }\n                                </Grid>\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        );\n    }\n\n    return (\n        <div className={ classes.root }>\n            <div>\n                <Typography variant=\"overline\"> New Trade </Typography>\n                <LoadingOverlay\n                    active={ isLoading }\n                    spinner={ <Eclipse />}\n                    styles={{\n                        overlay: (base) => ({\n                            ...base,\n                            background: 'rgba(255, 255, 255, 0.1)'\n                        })\n                    }}\n                >\n                    <Formik\n                        initialValues={ fields }\n                        enableReinitialize={ true }\n                        onSubmit={(values, actions) => {\n                            const extractByKey = validationFunctions[0];\n                            console.log(values);\n                        }}\n                        validateOnBlur={ true }\n                    >\n                        {({ errors, touched, isValidating, isSubmitting }) => (\n                            <Form>\n                                <Select value={ counterparty } onChange={ e => handleCounterpartyChange(e) } >\n                                    <option value=\"\"> Select Counterparty </option>\n                                    { counterpartyList.map((value, index) => {\n                                        return (\n                                            <option key={ value + index } value={ value }>\n                                                {value}\n                                            </option>\n                                        );\n                                    })}\n                                </Select>\n                                <Grid container spacing={ 2 }>\n                                {\n                                    fields.map((field, index) => {\n                                        if (field[2] === '0') {\n                                            return (\n                                                <Grid item xs={ 6 } style={{ marginTop: 2, marginBottom: 2 }}>\n                                                    {createFormColumns([field])}\n                                                </Grid>\n                                            )\n                                        }\n                                    })\n                                }\n                                </Grid>\n                                <div style={{ marginTop: 20, marginBottom: 20 }}>\n                                    <Divider />\n                                </div>\n                                { extendedFields() }\n                                <Button variant=\"contained\" type=\"submit\" disabled={ isValidating || isSubmitting }> Submit </Button>\n                            </Form>\n                        )}\n                    </Formik>\n                </LoadingOverlay>\n            </div>\n        </div>\n    );\n}\n\n\n","export const json = {\n    \"contractIdentifier\" : [ {\n        \"assignedIdentifier\" : [ {\n            \"identifier\" : {\n                \"value\" : \"SW2000\",\n                \"meta\" : {\n                    \"scheme\" : \"http://www.barclays.com/swaps/trade-id\"\n                }\n            },\n            \"version\" : 1\n        } ],\n        \"issuerReference\" : {\n            \"globalReference\" : \"c6416b25\",\n            \"externalReference\" : \"party2\"\n        },\n        \"meta\" : {\n            \"globalKey\" : \"b05803d\"\n        }\n    } ],\n    \"contractualProduct\" : {\n        \"economicTerms\" : {\n            \"payout\" : {\n                \"interestRatePayout\" : [ {\n                    \"calculationPeriodDates\" : {\n                        \"calculationPeriodDatesAdjustments\" : {\n                            \"businessCenters\" : {\n                                \"businessCentersReference\" : {\n                                    \"globalReference\" : \"3deac93\",\n                                    \"externalReference\" : \"primaryBusinessCenters\"\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"0\"\n                                }\n                            },\n                            \"businessDayConvention\" : \"MODFOLLOWING\",\n                            \"meta\" : {\n                                \"globalKey\" : \"9125764f\"\n                            }\n                        },\n                        \"calculationPeriodFrequency\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"2481db\"\n                            },\n                            \"period\" : \"M\",\n                            \"periodMultiplier\" : 6,\n                            \"rollConvention\" : \"14\"\n                        },\n                        \"effectiveDate\" : {\n                            \"adjustableDate\" : {\n                                \"dateAdjustments\" : {\n                                    \"businessDayConvention\" : \"NONE\",\n                                    \"meta\" : {\n                                        \"globalKey\" : \"4703fc8\"\n                                    }\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"593369fa\"\n                                },\n                                \"unadjustedDate\" : \"1994-12-14\"\n                            },\n                            \"meta\" : {\n                                \"globalKey\" : \"593369fa\"\n                            }\n                        },\n                        \"meta\" : {\n                            \"globalKey\" : \"1bc89b9c\",\n                            \"externalKey\" : \"floatingCalcPeriodDates\"\n                        },\n                        \"terminationDate\" : {\n                            \"adjustableDate\" : {\n                                \"dateAdjustments\" : {\n                                    \"businessCenters\" : {\n                                        \"businessCenter\" : [ {\n                                            \"value\" : \"DEFR\"\n                                        } ],\n                                        \"meta\" : {\n                                            \"globalKey\" : \"3deac93\",\n                                            \"externalKey\" : \"primaryBusinessCenters\"\n                                        }\n                                    },\n                                    \"businessDayConvention\" : \"MODFOLLOWING\",\n                                    \"meta\" : {\n                                        \"globalKey\" : \"b80395e\"\n                                    }\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"c861d290\"\n                                },\n                                \"unadjustedDate\" : \"1999-12-14\"\n                            },\n                            \"meta\" : {\n                                \"globalKey\" : \"c861d290\"\n                            }\n                        }\n                    },\n                    \"dayCountFraction\" : {\n                        \"value\" : \"ACT/360\"\n                    },\n                    \"meta\" : {\n                        \"globalKey\" : \"b90d6478\"\n                    },\n                    \"payerReceiver\" : {\n                        \"payerPartyReference\" : {\n                            \"globalReference\" : \"468059e0\",\n                            \"externalReference\" : \"party1\"\n                        },\n                        \"receiverPartyReference\" : {\n                            \"globalReference\" : \"c6416b25\",\n                            \"externalReference\" : \"party2\"\n                        }\n                    },\n                    \"paymentDates\" : {\n                        \"meta\" : {\n                            \"globalKey\" : \"4340854e\"\n                        },\n                        \"payRelativeTo\" : \"CALCULATION_PERIOD_END_DATE\",\n                        \"paymentDatesAdjustments\" : {\n                            \"businessCenters\" : {\n                                \"businessCentersReference\" : {\n                                    \"globalReference\" : \"3deac93\",\n                                    \"externalReference\" : \"primaryBusinessCenters\"\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"0\"\n                                }\n                            },\n                            \"businessDayConvention\" : \"MODFOLLOWING\",\n                            \"meta\" : {\n                                \"globalKey\" : \"9125764f\"\n                            }\n                        },\n                        \"paymentFrequency\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"121c7\"\n                            },\n                            \"period\" : \"M\",\n                            \"periodMultiplier\" : 6\n                        }\n                    },\n                    \"quantity\" : {\n                        \"notionalSchedule\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"1a115b3d\"\n                            },\n                            \"notionalStepSchedule\" : {\n                                \"initialValue\" : 50000000.00,\n                                \"meta\" : {\n                                    \"globalKey\" : \"27fa7367\"\n                                },\n                                \"currency\" : {\n                                    \"value\" : \"EUR\",\n                                    \"meta\" : {\n                                        \"scheme\" : \"http://www.fpml.org/coding-scheme/external/iso4217\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"rateSpecification\" : {\n                        \"floatingRate\" : {\n                            \"floatingRateIndex\" : {\n                                \"value\" : \"EUR-LIBOR-BBA\"\n                            },\n                            \"indexTenor\" : {\n                                \"meta\" : {\n                                    \"globalKey\" : \"121c7\"\n                                },\n                                \"period\" : \"M\",\n                                \"periodMultiplier\" : 6\n                            },\n                            \"meta\" : {\n                                \"globalKey\" : \"2506df34\"\n                            }\n                        }\n                    },\n                    \"resetDates\" : {\n                        \"calculationPeriodDatesReference\" : {\n                            \"globalReference\" : \"1bc89b9c\",\n                            \"externalReference\" : \"floatingCalcPeriodDates\"\n                        },\n                        \"fixingDates\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"f4ae4220\"\n                            },\n                            \"period\" : \"D\",\n                            \"periodMultiplier\" : -2,\n                            \"dayType\" : \"BUSINESS\",\n                            \"businessCenters\" : {\n                                \"businessCenter\" : [ {\n                                    \"value\" : \"GBLO\"\n                                } ],\n                                \"meta\" : {\n                                    \"globalKey\" : \"407ac22\"\n                                }\n                            },\n                            \"businessDayConvention\" : \"NONE\",\n                            \"dateRelativeTo\" : {\n                                \"globalReference\" : \"e0326547\",\n                                \"externalReference\" : \"resetDates\"\n                            }\n                        },\n                        \"meta\" : {\n                            \"globalKey\" : \"e0326547\",\n                            \"externalKey\" : \"resetDates\"\n                        },\n                        \"resetDatesAdjustments\" : {\n                            \"businessCenters\" : {\n                                \"businessCentersReference\" : {\n                                    \"globalReference\" : \"3deac93\",\n                                    \"externalReference\" : \"primaryBusinessCenters\"\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"0\"\n                                }\n                            },\n                            \"businessDayConvention\" : \"MODFOLLOWING\",\n                            \"meta\" : {\n                                \"globalKey\" : \"9125764f\"\n                            }\n                        },\n                        \"resetFrequency\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"121c7\"\n                            },\n                            \"period\" : \"M\",\n                            \"periodMultiplier\" : 6\n                        },\n                        \"resetRelativeTo\" : \"CALCULATION_PERIOD_START_DATE\"\n                    }\n                }, {\n                    \"calculationPeriodDates\" : {\n                        \"calculationPeriodDatesAdjustments\" : {\n                            \"businessCenters\" : {\n                                \"businessCentersReference\" : {\n                                    \"globalReference\" : \"3deac93\",\n                                    \"externalReference\" : \"primaryBusinessCenters\"\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"0\"\n                                }\n                            },\n                            \"businessDayConvention\" : \"MODFOLLOWING\",\n                            \"meta\" : {\n                                \"globalKey\" : \"9125764f\"\n                            }\n                        },\n                        \"calculationPeriodFrequency\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"29e38a\"\n                            },\n                            \"period\" : \"Y\",\n                            \"periodMultiplier\" : 1,\n                            \"rollConvention\" : \"14\"\n                        },\n                        \"effectiveDate\" : {\n                            \"adjustableDate\" : {\n                                \"dateAdjustments\" : {\n                                    \"businessDayConvention\" : \"NONE\",\n                                    \"meta\" : {\n                                        \"globalKey\" : \"4703fc8\"\n                                    }\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"593369fa\"\n                                },\n                                \"unadjustedDate\" : \"1994-12-14\"\n                            },\n                            \"meta\" : {\n                                \"globalKey\" : \"593369fa\"\n                            }\n                        },\n                        \"meta\" : {\n                            \"globalKey\" : \"69249e88\",\n                            \"externalKey\" : \"fixedCalcPeriodDates\"\n                        },\n                        \"terminationDate\" : {\n                            \"adjustableDate\" : {\n                                \"dateAdjustments\" : {\n                                    \"businessCenters\" : {\n                                        \"businessCentersReference\" : {\n                                            \"globalReference\" : \"3deac93\",\n                                            \"externalReference\" : \"primaryBusinessCenters\"\n                                        },\n                                        \"meta\" : {\n                                            \"globalKey\" : \"0\"\n                                        }\n                                    },\n                                    \"businessDayConvention\" : \"MODFOLLOWING\",\n                                    \"meta\" : {\n                                        \"globalKey\" : \"9125764f\"\n                                    }\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"6df2eedd\"\n                                },\n                                \"unadjustedDate\" : \"1999-12-14\"\n                            },\n                            \"meta\" : {\n                                \"globalKey\" : \"6df2eedd\"\n                            }\n                        }\n                    },\n                    \"dayCountFraction\" : {\n                        \"value\" : \"30E/360\"\n                    },\n                    \"meta\" : {\n                        \"globalKey\" : \"1e9b3eb7\"\n                    },\n                    \"payerReceiver\" : {\n                        \"payerPartyReference\" : {\n                            \"globalReference\" : \"c6416b25\",\n                            \"externalReference\" : \"party2\"\n                        },\n                        \"receiverPartyReference\" : {\n                            \"globalReference\" : \"468059e0\",\n                            \"externalReference\" : \"party1\"\n                        }\n                    },\n                    \"paymentDates\" : {\n                        \"meta\" : {\n                            \"globalKey\" : \"434086bd\"\n                        },\n                        \"payRelativeTo\" : \"CALCULATION_PERIOD_END_DATE\",\n                        \"paymentDatesAdjustments\" : {\n                            \"businessCenters\" : {\n                                \"businessCentersReference\" : {\n                                    \"globalReference\" : \"3deac93\",\n                                    \"externalReference\" : \"primaryBusinessCenters\"\n                                },\n                                \"meta\" : {\n                                    \"globalKey\" : \"0\"\n                                }\n                            },\n                            \"businessDayConvention\" : \"MODFOLLOWING\",\n                            \"meta\" : {\n                                \"globalKey\" : \"9125764f\"\n                            }\n                        },\n                        \"paymentFrequency\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"14e38\"\n                            },\n                            \"period\" : \"Y\",\n                            \"periodMultiplier\" : 1\n                        }\n                    },\n                    \"quantity\" : {\n                        \"notionalSchedule\" : {\n                            \"meta\" : {\n                                \"globalKey\" : \"1a115b3d\"\n                            },\n                            \"notionalStepSchedule\" : {\n                                \"initialValue\" : 50000000.00,\n                                \"meta\" : {\n                                    \"globalKey\" : \"27fa7367\"\n                                },\n                                \"currency\" : {\n                                    \"value\" : \"EUR\",\n                                    \"meta\" : {\n                                        \"scheme\" : \"http://www.fpml.org/coding-scheme/external/iso4217\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"rateSpecification\" : {\n                        \"fixedRate\" : {\n                            \"initialValue\" : 0.06,\n                            \"meta\" : {\n                                \"globalKey\" : \"2ba0bfc\"\n                            }\n                        }\n                    }\n                } ]\n            },\n            \"rosettaKeyValue\" : \"15fd01cb\"\n        },\n        \"productIdentification\" : {\n            \"productQualifier\" : \"InterestRate_IRSwap_FixedFloat_PlainVanilla\"\n        }\n    },\n    \"meta\" : {\n        \"globalKey\" : \"2bc99229\"\n    },\n    \"party\" : [ {\n        \"meta\" : {\n            \"globalKey\" : \"468059e0\",\n            \"externalKey\" : \"party1\"\n        },\n        \"name\" : {\n            \"value\" : \"Party A\"\n        },\n        \"partyId\" : [ {\n            \"value\" : \"PARTYAUS33\",\n            \"meta\" : {\n                \"scheme\" : \"http://www.fpml.org/coding-scheme/external/iso9362\"\n            }\n        } ]\n    }, {\n        \"meta\" : {\n            \"globalKey\" : \"c6416b25\",\n            \"externalKey\" : \"party2\"\n        },\n        \"partyId\" : [ {\n            \"value\" : \"BARCGB2L\",\n            \"meta\" : {\n                \"scheme\" : \"http://www.fpml.org/coding-scheme/external/iso9362\"\n            }\n        } ]\n    } ],\n    \"tradeDate\" : {\n        \"date\" : \"1994-12-12\",\n        \"meta\" : {\n            \"globalKey\" : \"78c0e74\"\n        }\n    }\n};\n\nexport function extractByKey(obj, key) {     //Pull all values of specified key from nested JSON\n    const arr = [];\n    function extract(obj, arr, key) {\n        //Recursively search for values of key in JSON tree\n        if (obj instanceof Object) {\n            let values = obj.values();\n            for (let i = 0; i < keys.length; i++) {\n                if (values[i] instanceof Object || values[i] instanceof Array) {\n                    extract(values[i], arr, key);\n                }\n                else if (values[i] === key) {\n                    arr.append(values[i]);\n                }\n            }\n        }\n        else if (obj instanceof Array) {\n            for (let i = 0; i < obj.length; i++) {\n                extract(obj[i], arr, key);\n            }\n        }\n        return arr\n    }\n    return extract(obj, arr, key);\n}\nconst base_fields = [\n    ['Trade ID', 'text'],\n    ['Trade Date', 'date'],\n    ['Trade Type', 'select'],\n    ['Counterparty', 'select'],\n    ['Direction', 'select'],\n    ['Amount', 'number'],\n    ['Currency', 'select'],\n    ['Fixed Rate', 'number'],\n    ['Duration', 'select']\n];\n\nconst extended_fields = [\n    ['Counterparty Trade ID', 'text'],\n    ['Termination Date (Fixed Leg)', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Rate Reference', 'select'],\n    ['Period', 'select'],\n    ['Day Count Fraction', 'select'],\n    ['Fixing Date Offset', 'select'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Effective Date', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Termination Date', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Period (Fixed Leg)', 'select'],\n    ['Day Count Fraction (Fixed Leg)', 'select'],\n    ['Effective Date (Fixed Leg)', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Termination Date (Fixed Leg)', 'date'],\n    ['Bus Day Convention (Fixed Leg)', 'select'],\n    ['Business Centre(Fixed Leg)', 'select'],\n];\n\nexport const new_trade_fields = () => {\n    const base = () => {\n        for (let i = 0; i < base_fields.length; i++) {\n            base_fields[i].push('0');\n        }\n        return base_fields;\n    };\n\n    const extended = () => {\n        for (let i = 0; i < extended_fields.length; i++) {\n            extended_fields[i].push('1');\n        }\n        return extended_fields;\n    };\n\n    return base().concat(extended());\n};\nexport const IRS = {\n    \"tradeDate\": \"2019-08-02\",\n    \"tradeType\": \"IRS\",\n    \"direction\": \"PayFixed\",\n    \"amount\": 100000,\n    \"currency\": \"GBP\",\n    \"fixedRate\": 0.1,\n    \"duration\": \"5Y\",\n    \"counterPartyId\": 2,\n    \"terminationDate\": {\"date\": \"2020-08-02\",\n        \"busDayConvention\": \"ModFollowing\",\n        \"businessCentre\": \"GBLO\"},\n    \"floatingLeg\": {\"rateReference\": \"EURIBOR\",\n        \"effectiveDate\": {\"date\": \"2019-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"terminationDate\": {\"date\": \"2020-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"paymentTerms\": {\"period\": \"6M\", \"dayCountFraction\": \"ACT/360\"},\n        \"fixingDateOffset\": {\"offset\": \"-2D\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"}},\n    \"fixedLeg\": {\n        \"effectiveDate\": {\"date\": \"2019-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"terminationDate\": {\"date\": \"2019-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"paymentTerms\": {\"period\": \"6M\", \"dayCountFraction\": \"ACT/360\"}}\n}\n\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;;;;;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAAA;AAUA;;;;;;;;;AASA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AANA;AAAA;AAAA;AAAA;AASA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAOA;AACA;AACA;AAEA;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAFA;AADA;AAFA;AASA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AADA;AAGA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AAAA;AATA;AAFA;AAiBA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AADA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AA7BA;AAqCA;;;;;;;;;;;;AC3OA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAdA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AAVA;AAYA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAGA;AAnBA;AAqBA;AACA;AADA;AAtBA;AA7CA;AAwEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AALA;AApBA;AA4BA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AALA;AAJA;AADA;AAmBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AACA;AADA;AAXA;AADA;AAiBA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AAFA;AAhBA;AAqBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AApDA;AAzJA;AAgNA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AAVA;AAYA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AADA;AAXA;AAeA;AACA;AADA;AAGA;AAnBA;AAqBA;AACA;AADA;AAtBA;AA7CA;AAwEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AALA;AApBA;AA4BA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AALA;AAJA;AADA;AAmBA;AACA;AACA;AACA;AACA;AADA;AAFA;AADA;AAxIA;AAhNA;AAkWA;AAnWA;AAqWA;AACA;AADA;AAtWA;AA0WA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AARA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AALA;AAYA;AACA;AACA;AACA;AADA;AAFA;AA1ZA;AAkaA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAYA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AARA;AAWA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAPA;AAvBA;;;;A","sourceRoot":""}