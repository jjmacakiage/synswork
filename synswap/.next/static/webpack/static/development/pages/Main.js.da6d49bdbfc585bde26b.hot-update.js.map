{"version":3,"file":"static/webpack/static/development/pages/Main.js.da6d49bdbfc585bde26b.hot-update.js","sources":["webpack:///./pages/Blotter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Grid } from '@material-ui/core';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport DataTable from '../components/DataTable';\nimport Header from '../components/main/Header';\n\nexport default function Blotter() {\n    const [data, setData] = useState({ rows: [['f']], columns: ['a'] });\n    const trades = useSelector(state => state.TradeReducer.tradeStates);\n    const dispatch = useDispatch();\n\n    useEffect( () => {\n        //ADD AJAX REQUEST TO FETCH TRADE DATA HERE\n        const fetchData = async () => {\n            const url = 'http://localhost:4000/api/parties/1/trades';\n            try {\n                axios.get(url)\n                    .then(function (response) {\n                        console.log(response.data.trades);\n                        setData(response.data.trades);\n                    });\n            } catch (error) {\n                console.error(\n                    'You have an error in your code or there are Network issues.',\n                    error\n                );\n                return error;\n            }\n        };\n        fetchData();\n    }, [trades]);\n\n    function exportToCSV() {\n        let csv = '';\n        for (let i = 0; i < data.columns.length; i++) {\n            csv += data.columns[i] + ',';\n        }\n        csv += '\\n';\n        for (let i = 0; i < data.rows.length; i++) {\n            let row = data.rows[i];\n            csv += row.join(',');\n            csv += \"\\n\";\n        };\n\n        let hiddenElement = document.createElement('a');\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n        hiddenElement.target = '_blank';\n        let date = new Date();\n        let month = date.getUTCMonth();\n        let day = date.getUTCDate();\n        let year = date.getUTCFullYear();\n        let name = year + '-' + month + '-' + day;\n        hiddenElement.download = name + '.csv';\n        hiddenElement.click();\n    }\n\n    return (\n      <div>\n          <Grid container spacing={ 2 }>\n              <Grid item xs={ 12 }>\n                  <Button color=\"primary\" onClick={ exportToCSV.bind(this) }>\n                      Export to CSV\n                  </Button>\n              </Grid>\n              <Grid item xs={ 12 }>\n                  <DataTable data={ data }/>\n              </Grid>\n          </Grid>\n\n      </div>\n    );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AATA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAMA;;;;A","sourceRoot":""}