{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _isomorphicUnfetch = _interopRequireDefault(require(\"isomorphic-unfetch\"));\n\nvar login =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(req, res) {\n    var _ref2, username, url, response, _ref3, id, error, _response;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return req.body;\n\n          case 2:\n            _ref2 = _context.sent;\n            username = _ref2.username;\n            console.log('username', username);\n            url = \"https://api.github.com/users/\".concat(username);\n            _context.prev = 6;\n            _context.next = 9;\n            return (0, _isomorphicUnfetch[\"default\"])(url);\n\n          case 9:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 13;\n            return response.json();\n\n          case 13:\n            _ref3 = _context.sent;\n            id = _ref3.id;\n            return _context.abrupt(\"return\", res.status(200).json({\n              token: id\n            }));\n\n          case 18:\n            // https://github.com/developit/unfetch#caveats\n            error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n\n          case 21:\n            _context.next = 27;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t0 = _context[\"catch\"](6);\n            _response = _context.t0.response;\n            return _context.abrupt(\"return\", _response ? res.status(_response.status).json({\n              message: _response.statusText\n            }) : res.status(400).json({\n              message: _context.t0.message\n            }));\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 23]]);\n  }));\n\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = function (req, res) {\n  return run(req, res, login);\n};","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/pages/api/login.js"],"names":["login","req","res","body","username","console","log","url","response","ok","json","id","status","token","error","Error","statusText","message","module","exports","run"],"mappings":";;;;;;;;AAAA;;AAEA,IAAMA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeD,GAAG,CAACE,IADnB;;AAAA;AAAA;AACJC,YAAAA,QADI,SACJA,QADI;AAEZC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACMG,YAAAA,GAHM,0CAGgCH,QAHhC;AAAA;AAAA;AAAA,mBAMa,mCAAMG,GAAN,CANb;;AAAA;AAMJC,YAAAA,QANI;;AAAA,iBAONA,QAAQ,CAACC,EAPH;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQaD,QAAQ,CAACE,IAAT,EARb;;AAAA;AAAA;AAQAC,YAAAA,EARA,SAQAA,EARA;AAAA,6CASDT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,cAAAA,KAAK,EAAEF;AAAT,aAArB,CATC;;AAAA;AAWR;AACMG,YAAAA,KAZE,GAYM,IAAIC,KAAJ,CAAUP,QAAQ,CAACQ,UAAnB,CAZN;AAaRF,YAAAA,KAAK,CAACN,QAAN,GAAiBA,QAAjB;AAbQ,kBAcFM,KAdE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBFN,YAAAA,SAjBE,eAiBFA,QAjBE;AAAA,6CAkBHA,SAAQ,GACXN,GAAG,CAACU,MAAJ,CAAWJ,SAAQ,CAACI,MAApB,EAA4BF,IAA5B,CAAiC;AAAEO,cAAAA,OAAO,EAAET,SAAQ,CAACQ;AAApB,aAAjC,CADW,GAEXd,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEO,cAAAA,OAAO,EAAE,YAAMA;AAAjB,aAArB,CApBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALjB,KAAK;AAAA;AAAA;AAAA,GAAX;;AAwBAkB,MAAM,CAACC,OAAP,GAAiB,UAAClB,GAAD,EAAMC,GAAN;AAAA,SAAckB,GAAG,CAACnB,GAAD,EAAMC,GAAN,EAAWF,KAAX,CAAjB;AAAA,CAAjB","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst login = async (req, res) => {\n  const { username } = await req.body\n  console.log('username', username);\n  const url = `https://api.github.com/users/${username}`;\n\n  try {\n    const response = await fetch(url)\n    if (response.ok) {\n      const { id } = await response.json()\n      return res.status(200).json({ token: id })\n    } else {\n      // https://github.com/developit/unfetch#caveats\n      const error = new Error(response.statusText);\n      error.response = response\n      throw error\n    }\n  } catch (error) {\n    const { response } = error\n    return response\n      ? res.status(response.status).json({ message: response.statusText })\n      : res.status(400).json({ message: error.message })\n  }\n}\n\nmodule.exports = (req, res) => run(req, res, login);\n"]},"metadata":{},"sourceType":"script"}