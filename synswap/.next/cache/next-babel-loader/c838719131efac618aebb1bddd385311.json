{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport { AddBox, ArrowUpward, Check, ChevronLeft, ChevronRight, Clear, DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt, Search, ViewColumn } from \"@material-ui/icons\";\n\nvar TableTwo = function TableTwo(props) {\n  var tableIcons = {\n    Add: forwardRef(function (props, ref) {\n      return React.createElement(AddBox, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Check: forwardRef(function (props, ref) {\n      return React.createElement(Check, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Clear: forwardRef(function (props, ref) {\n      return React.createElement(Clear, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Delete: forwardRef(function (props, ref) {\n      return React.createElement(DeleteOutline, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    DetailPanel: forwardRef(function (props, ref) {\n      return React.createElement(ChevronRight, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Edit: forwardRef(function (props, ref) {\n      return React.createElement(Edit, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Export: forwardRef(function (props, ref) {\n      return React.createElement(SaveAlt, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Filter: forwardRef(function (props, ref) {\n      return React.createElement(FilterList, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    FirstPage: forwardRef(function (props, ref) {\n      return React.createElement(FirstPage, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    LastPage: forwardRef(function (props, ref) {\n      return React.createElement(LastPage, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    NextPage: forwardRef(function (props, ref) {\n      return React.createElement(ChevronRight, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    PreviousPage: forwardRef(function (props, ref) {\n      return React.createElement(ChevronLeft, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    ResetSearch: forwardRef(function (props, ref) {\n      return React.createElement(Clear, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Search: forwardRef(function (props, ref) {\n      return React.createElement(Search, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    SortArrow: forwardRef(function (props, ref) {\n      return React.createElement(ArrowUpward, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    ThirdStateCheck: forwardRef(function (props, ref) {\n      return React.createElement(Remove, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    ViewColumn: forwardRef(function (props, ref) {\n      return React.createElement(ViewColumn, _extends({}, props, {\n        ref: ref\n      }));\n    })\n  };\n\n  function formatColumns(columns) {\n    if (columns.length === 0 || columns[0].width) {\n      return columns;\n    }\n\n    var result = [];\n    var width = 1800 / columns.length;\n\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[i];\n      var object = {\n        title: column,\n        field: column.toString().toLowerCase().replace(\"\\s\", \"\")\n      };\n      result.push(object);\n    }\n\n    return result;\n  }\n\n  function formatRows(rows) {\n    var result = [];\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      var temp = pullStuff(row, 'values');\n      console.log(temp);\n      result.push(temp);\n    }\n\n    return result;\n  }\n\n  function pullStuff(obj, param) {\n    var getKeys = function getKeys(obj) {\n      if (typeof obj !== 'object') {\n        throw new Error('Invalid JSON');\n      }\n\n      var result = [];\n\n      var topKeys = _Object$keys(obj);\n\n      for (var i = 0; i < topKeys.length; i++) {\n        var topKey = topKeys[i];\n        var topEntry = obj[topKey];\n\n        if (typeof topEntry === 'string' || typeof topEntry === 'number') {\n          result.push(topKey);\n        } else if (_Array$isArray(topEntry)) {\n          var arrayEntry = void 0;\n\n          for (arrayEntry in topEntry) {\n            result.push(getKeys(arrayEntry, true));\n          }\n        } else {\n          result.push(getKeys(topEntry));\n        }\n      }\n\n      return result.flat(Infinity);\n    };\n\n    var getValues = function getValues(obj) {\n      if (typeof obj !== 'object') {\n        throw new Error('Invalid JSON');\n      }\n\n      var result = [];\n\n      var topValues = _Object$values(obj);\n\n      for (var i = 0; i < topValues.length; i++) {\n        var topValue = topValues[i];\n\n        if (typeof topValue === 'string' || typeof topValue === 'number') {\n          result.push(topValue);\n        } else if (_Array$isArray(topValue)) {\n          var arrayEntry = void 0;\n\n          for (arrayEntry in topValue) {\n            result.push(getValues(arrayEntry, true));\n          }\n        } else {\n          result.push(getValues(topValue));\n        }\n      }\n\n      return result.flat(Infinity);\n    };\n\n    switch (param) {\n      case 'keys':\n        return getKeys(obj, false);\n\n      case 'values':\n        return getValues(obj, false);\n\n      default:\n        return;\n    }\n  }\n\n  var data = props.data;\n  var columns = !data.rows ? pullStuff(data[0], 'keys') : data.columns;\n  return React.createElement(MaterialTable, {\n    columns: formatColumns(columns),\n    icons: tableIcons,\n    data: formatRows(data),\n    options: {\n      filtering: true\n    }\n  });\n};\n\nexport default TableTwo;","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/components/TableTwo.js"],"names":["React","useState","useEffect","MaterialTable","forwardRef","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","TableTwo","props","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","formatColumns","columns","length","width","result","i","column","object","title","field","toString","toLowerCase","replace","push","formatRows","rows","row","temp","pullStuff","console","log","obj","param","getKeys","Error","topKeys","topKey","topEntry","arrayEntry","flat","Infinity","getValues","topValues","topValue","data","filtering"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\n\nimport {\n    AddBox, ArrowUpward,\n    Check, ChevronLeft,\n    ChevronRight, Clear,\n    DeleteOutline, Edit,\n    FilterList, FirstPage,\n    LastPage, Remove,\n    SaveAlt, Search,\n    ViewColumn\n} from \"@material-ui/icons\";\n\nconst TableTwo = props => {\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    function formatColumns(columns) {\n        if (columns.length === 0 || columns[0].width) {\n            return columns;\n        }\n        let result = [];\n        let width = 1800 / columns.length;\n        for (let i = 0; i < columns.length; i++) {\n            const column = columns[i];\n            const object = {\n                title: column,\n                field: column.toString().toLowerCase().replace(\"\\s\",\"\"),\n            };\n            result.push(object);\n        }\n        return result;\n    }\n    function formatRows(rows) {\n        let result = [];\n        for (let i = 0; i < rows.length; i++) {\n            let row = rows[i];\n            let temp = pullStuff(row, 'values');\n            console.log(temp);\n            result.push(temp);\n        }\n        return result;\n    }\n    function pullStuff(obj, param) {\n        const getKeys = obj => {\n            if (typeof obj !== 'object') {\n                throw new Error('Invalid JSON');\n            }\n            let result = [];\n            const topKeys = Object.keys(obj);\n            for (let i = 0; i < topKeys.length; i++) {\n                let topKey = topKeys[i];\n                let topEntry = obj[topKey];\n                if (typeof topEntry === 'string' || typeof topEntry === 'number') {\n                    result.push(topKey);\n                }\n                else if (Array.isArray(topEntry)) {\n                    let arrayEntry;\n                    for (arrayEntry in topEntry) {\n                        result.push(getKeys(arrayEntry, true));\n                    }\n                }\n                else {\n                    result.push(getKeys(topEntry))\n                }\n            }\n            return result.flat(Infinity);\n        };\n\n        const getValues = obj => {\n            if (typeof obj !== 'object') {\n                throw new Error('Invalid JSON');\n            }\n            let result = [];\n            let topValues = Object.values(obj);\n            for (let i = 0; i < topValues.length; i++) {\n                let topValue = topValues[i];\n                if (typeof topValue === 'string' || typeof topValue === 'number') {\n                    result.push(topValue);\n                }\n                else if (Array.isArray(topValue)) {\n                    let arrayEntry;\n                    for (arrayEntry in topValue) {\n                        result.push(getValues(arrayEntry, true));\n                    }\n                }\n                else {\n                    result.push(getValues(topValue))\n                }\n            }\n            return result.flat(Infinity);\n        };\n        switch (param) {\n            case 'keys':\n                return getKeys(obj, false);\n            case 'values':\n                return getValues(obj, false);\n            default:\n                return;\n        }\n    }\n    const { data } = props;\n    const columns = (!data.rows) ? pullStuff(data[0], 'keys') : data.columns;\n\n    return (\n        <MaterialTable\n            columns={ formatColumns(columns) }\n            icons={ tableIcons }\n            data={ formatRows(data) }\n            options={{\n                filtering: true\n            }}\n        />\n    )\n};\n\nexport default TableTwo;\n\n"]},"metadata":{},"sourceType":"module"}