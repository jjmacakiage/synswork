{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nvar styles = function styles(theme) {\n  return {\n    flexContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box'\n    },\n    tableRow: {\n      cursor: 'pointer'\n    },\n    tableRowHover: {\n      '&:hover': {\n        backgroundColor: theme.palette.grey[200]\n      }\n    },\n    tableCell: {\n      flex: 1\n    },\n    noClick: {\n      cursor: 'initial'\n    }\n  };\n};\n\nvar MuiVirtualizedTable =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MuiVirtualizedTable, _PureComponent);\n\n  function MuiVirtualizedTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MuiVirtualizedTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MuiVirtualizedTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getRowClassName\", function (_ref) {\n      var index = _ref.index;\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          onRowClick = _this$props.onRowClick;\n      return clsx(classes.tableRow, classes.flexContainer, _defineProperty({}, classes.tableRowHover, index !== -1 && onRowClick != null));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cellRenderer\", function (_ref2) {\n      var cellData = _ref2.cellData,\n          columnIndex = _ref2.columnIndex;\n      var _this$props2 = _this.props,\n          columns = _this$props2.columns,\n          classes = _this$props2.classes,\n          rowHeight = _this$props2.rowHeight,\n          onRowClick = _this$props2.onRowClick;\n      return React.createElement(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, _defineProperty({}, classes.noClick, onRowClick == null)),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? 'right' : 'left'\n      }, cellData);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"headerRenderer\", function (_ref3) {\n      var label = _ref3.label,\n          columnIndex = _ref3.columnIndex;\n      var _this$props3 = _this.props,\n          headerHeight = _this$props3.headerHeight,\n          columns = _this$props3.columns,\n          classes = _this$props3.classes;\n      return React.createElement(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight,\n          justifyContent: \"center\"\n        },\n        align: columns[columnIndex].numeric || false ? 'right' : 'left'\n      }, React.createElement(\"span\", null, label));\n    });\n\n    return _this;\n  }\n\n  _createClass(MuiVirtualizedTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          classes = _this$props4.classes,\n          columns = _this$props4.columns,\n          tableProps = _objectWithoutProperties(_this$props4, [\"classes\", \"columns\"]);\n\n      return React.createElement(AutoSizer, null, function (_ref4) {\n        var height = _ref4.height,\n            width = _ref4.width;\n        return React.createElement(Table, _extends({\n          height: height,\n          width: width\n        }, tableProps, {\n          rowClassName: _this2.getRowClassName\n        }), columns.map(function (_ref5, index) {\n          var dataKey = _ref5.dataKey,\n              other = _objectWithoutProperties(_ref5, [\"dataKey\"]);\n\n          return React.createElement(Column, _extends({\n            key: dataKey,\n            headerRenderer: function headerRenderer(headerProps) {\n              return _this2.headerRenderer(_objectSpread({}, headerProps, {\n                columnIndex: index\n              }));\n            },\n            className: classes.flexContainer,\n            cellRenderer: _this2.cellRenderer,\n            dataKey: dataKey\n          }, other));\n        }));\n      });\n    }\n  }]);\n\n  return MuiVirtualizedTable;\n}(PureComponent);\n\n_defineProperty(MuiVirtualizedTable, \"defaultProps\", {\n  headerHeight: 48,\n  rowHeight: 48\n});\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\nvar VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nfunction formatColumns(columns) {\n  if (columns.length === 0 || columns[0].width) {\n    return columns;\n  }\n\n  var result = [];\n  var width = 1800 / columns.length;\n\n  for (var i = 0; i < columns.length; i++) {\n    var column = columns[i];\n    var object = {\n      width: width,\n      label: column,\n      dataKey: column.toString().toLowerCase().replace(\"\\s\", \"\"),\n      numeric: !isNaN(column)\n    };\n    result.push(object);\n  }\n\n  return result;\n}\n\nfunction formatRows(rows, columns) {\n  if (rows.length === 0 || typeof rows[0] === 'object') {\n    return rows;\n  }\n\n  var result = [];\n\n  for (var i = 0; i < rows.length; i++) {\n    var row = rows[i];\n    var temp = [];\n\n    for (var j = 0; j < row.length; j++) {\n      var dataKey = columns[j].toString().toLowerCase().replace(\"\\s\", \"\");\n      temp.push(_defineProperty({}, dataKey, row[j]));\n    }\n\n    var objectList = temp.reduce(function (result, item) {\n      var key = _Object$keys(item)[0];\n\n      result[key] = item[key];\n      return result;\n    }, {});\n    result.push(objectList);\n  }\n\n  return result;\n}\n\nexport default function ReactVirtualizedTable(props) {\n  return React.createElement(Paper, {\n    style: {\n      height: 400,\n      width: '100%'\n    }\n  }, React.createElement(VirtualizedTable, {\n    rowCount: props.data.rows.length,\n    rowGetter: function rowGetter(_ref6) {\n      var index = _ref6.index;\n      return formatRows(props.data.rows, props.data.columns)[index];\n    },\n    columns: formatColumns(props.data.columns),\n    onRowClick: props.onRowClick\n  }));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/components/DataTable.js"],"names":["React","PureComponent","PropTypes","clsx","withStyles","TableCell","Paper","AutoSizer","Column","Table","styles","theme","flexContainer","display","alignItems","boxSizing","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","index","props","classes","onRowClick","cellData","columnIndex","columns","rowHeight","height","numeric","label","headerHeight","justifyContent","tableProps","width","getRowClassName","map","dataKey","other","headerProps","headerRenderer","cellRenderer","propTypes","object","isRequired","arrayOf","number","func","VirtualizedTable","formatColumns","length","result","i","column","toString","toLowerCase","replace","isNaN","push","formatRows","rows","row","temp","j","objectList","reduce","item","key","ReactVirtualizedTable","data"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n    flexContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n    },\n    tableRow: {\n        cursor: 'pointer',\n    },\n    tableRowHover: {\n        '&:hover': {\n            backgroundColor: theme.palette.grey[200],\n        },\n    },\n    tableCell: {\n        flex: 1,\n    },\n    noClick: {\n        cursor: 'initial',\n    },\n});\n\nclass MuiVirtualizedTable extends PureComponent {\n    static defaultProps = {\n        headerHeight: 48,\n        rowHeight: 48,\n    };\n\n    getRowClassName = ({ index }) => {\n        const { classes, onRowClick } = this.props;\n\n        return clsx(classes.tableRow, classes.flexContainer, {\n            [classes.tableRowHover]: index !== -1 && onRowClick != null,\n        });\n    };\n\n    cellRenderer = ({ cellData, columnIndex }) => {\n        const { columns, classes, rowHeight, onRowClick } = this.props;\n        return (\n            <TableCell\n                component=\"div\"\n                className={clsx(classes.tableCell, classes.flexContainer, {\n                    [classes.noClick]: onRowClick == null,\n                })}\n                variant=\"body\"\n                style={{ height: rowHeight }}\n                align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n            >\n                {cellData}\n            </TableCell>\n        );\n    };\n\n    headerRenderer = ({ label, columnIndex }) => {\n        const { headerHeight, columns, classes } = this.props;\n\n        return (\n            <TableCell\n                component=\"div\"\n                className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n                variant=\"head\"\n                style={{ height: headerHeight, justifyContent: \"center\" }}\n                align={ columns[columnIndex].numeric || false ? 'right' : 'left' }\n            >\n                <span>{label}</span>\n            </TableCell>\n        );\n    };\n\n    render() {\n        const { classes, columns, ...tableProps } = this.props;\n        return (\n            <AutoSizer>\n                {({ height, width }) => (\n                    <Table height={height} width={width} {...tableProps} rowClassName={this.getRowClassName}>\n                        {columns.map(({ dataKey, ...other }, index) => {\n                            return (\n                                <Column\n                                    key={dataKey}\n                                    headerRenderer={headerProps =>\n                                        this.headerRenderer({\n                                            ...headerProps,\n                                            columnIndex: index,\n                                        })\n                                    }\n                                    className={classes.flexContainer}\n                                    cellRenderer={this.cellRenderer}\n                                    dataKey={dataKey}\n                                    {...other}\n                                />\n                            );\n                        })}\n                    </Table>\n                )}\n            </AutoSizer>\n        );\n    }\n}\n\nMuiVirtualizedTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n    headerHeight: PropTypes.number,\n    onRowClick: PropTypes.func,\n    rowHeight: PropTypes.number,\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nfunction formatColumns(columns) {\n    if (columns.length === 0 || columns[0].width) {\n        return columns;\n    }\n    let result = [];\n    let width = 1800 / columns.length;\n    for (let i = 0; i < columns.length; i++) {\n        const column = columns[i];\n        const object = {\n            width: width,\n            label: column,\n            dataKey: column.toString().toLowerCase().replace(\"\\s\",\"\"),\n            numeric: !isNaN(column)\n        };\n        result.push(object);\n    }\n    return result;\n}\n\nfunction formatRows(rows, columns) {\n    if (rows.length === 0 || typeof rows[0] === 'object'){\n        return rows;\n    }\n    let result = [];\n    for (let i = 0; i < rows.length; i++) {\n        let row = rows[i];\n        let temp = [];\n        for (let j = 0; j < row.length; j++) {\n            let dataKey = columns[j].toString().toLowerCase().replace(\"\\s\", \"\");\n            temp.push({ [dataKey]: row[j] });\n        }\n        let objectList = temp.reduce((result, item) => {\n            let key = Object.keys(item)[0];\n            result[key] = item[key];\n            return result;\n        }, {});\n        result.push(objectList);\n    }\n    return result;\n}\nexport default function ReactVirtualizedTable(props) {\n    return (\n        <Paper style={{ height: 400, width: '100%' }}>\n            <VirtualizedTable\n                rowCount={ props.data.rows.length }\n                rowGetter={({ index }) => formatRows(props.data.rows, props.data.columns)[index]}\n                columns={ formatColumns(props.data.columns) }\n                onRowClick={ props.onRowClick }\n            />\n        </Paper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}