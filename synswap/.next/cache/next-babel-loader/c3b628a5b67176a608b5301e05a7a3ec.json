{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from \"../../pages/Login\";\nimport { login } from \"./auth\";\nexport default function doLogin(_x) {\n  return _doLogin.apply(this, arguments);\n}\n\nfunction _doLogin() {\n  _doLogin = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(userData) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", 'test');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _doLogin.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/utils/Auth/login.js"],"names":["fetch","login","doLogin","userData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;AAEA,wBAA8BC,OAA9B;AAAA;AAAA;;;;;2BAAe,iBAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,6CA6BJ,MA7BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import fetch from \"../../pages/Login\";\nimport {login} from \"./auth\";\n\nexport default async function doLogin(userData) {\n    /*\n        const username = userData.username;\n    const url = '../../pages/api/login';\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username })\n        });\n        if (response.status === 200) {\n            const { token } = await response.json();\n            await login({ token });\n            return { token: token, status: 'success' };\n        } else {\n            console.log('Login failed.');\n            // https://github.com/developit/unfetch#caveats\n            let error = new Error(response.statusText);\n            error.response = response;\n            throw error\n        }\n    } catch (error) {\n        console.error(\n            'You have an error in your code or there are Network issues.',\n            error\n        );\n        return error;\n    }\n     */\n    return 'test';\n}\n"]},"metadata":{},"sourceType":"module"}