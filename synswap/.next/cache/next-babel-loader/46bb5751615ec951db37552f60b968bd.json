{"ast":null,"code":"export function extractByKey(obj, key) {\n  //Pull all values of specified key from nested JSON\n  var arr = [];\n\n  function extract(obj, arr, key) {\n    //Recursively search for values of key in JSON tree\n    if (obj instanceof Object) {\n      var values = obj.values();\n\n      for (var i = 0; i < keys.length; i++) {\n        if (values[i] instanceof Object || values[i] instanceof Array) {\n          extract(values[i], arr, key);\n        } else if (values[i] === key) {\n          arr.append(values[i]);\n        }\n      }\n    } else if (obj instanceof Array) {\n      for (var _i = 0; _i < obj.length; _i++) {\n        extract(obj[_i], arr, key);\n      }\n    }\n\n    return arr;\n  }\n\n  return extract(obj, arr, key);\n}\nvar base_fields = [['Trade ID', 'text'], ['Trade Date', 'date'], ['Trade Type', 'select'], ['Counterparty', 'select'], ['Direction', 'select'], ['Amount', 'number'], ['Currency', 'select'], ['Fixed Rate', 'number'], ['Duration', 'select']];\nvar extended_fields = [['Counterparty Trade ID', 'text'], ['Termination Date (Fixed Leg)', 'date'], ['Bus Day Convention', 'select'], ['Business Centre', 'select'], ['Rate Reference', 'select'], ['Period', 'select'], ['Day Count Fraction', 'select'], ['Fixing Date Offset', 'select'], ['Bus Day Convention', 'select'], ['Business Centre', 'select'], ['Effective Date', 'date'], ['Bus Day Convention', 'select'], ['Business Centre', 'select'], ['Termination Date', 'date'], ['Bus Day Convention', 'select'], ['Business Centre', 'select'], ['Period (Fixed Leg)', 'select'], ['Day Count Fraction (Fixed Leg)', 'select'], ['Effective Date (Fixed Leg)', 'date'], ['Bus Day Convention', 'select'], ['Business Centre', 'select'], ['Termination Date (Fixed Leg)', 'date'], ['Bus Day Convention (Fixed Leg)', 'select'], ['Business Centre(Fixed Leg)', 'select']];\nexport var new_trade_fields = function new_trade_fields() {\n  var base = function base() {\n    for (var i = 0; i < base_fields.length; i++) {\n      base_fields[i].push('0');\n    }\n\n    return base_fields;\n  };\n\n  var extended = function extended() {\n    for (var i = 0; i < extended_fields.length; i++) {\n      extended_fields[i].push('1');\n    }\n\n    return extended_fields;\n  };\n\n  return base().concat(extended());\n};\nexport var IRS = {\n  \"tradeDate\": \"2019-08-02\",\n  \"tradeType\": \"IRS\",\n  \"direction\": \"PayFixed\",\n  \"amount\": 100000,\n  \"currency\": \"GBP\",\n  \"fixedRate\": 0.1,\n  \"duration\": \"5Y\",\n  \"counterPartyId\": 2,\n  \"terminationDate\": {\n    \"date\": \"2020-08-02\",\n    \"busDayConvention\": \"ModFollowing\",\n    \"businessCentre\": \"GBLO\"\n  },\n  \"floatingLeg\": {\n    \"rateReference\": \"EURIBOR\",\n    \"effectiveDate\": {\n      \"date\": \"2019-08-02\",\n      \"busDayConvention\": \"ModFollowing\",\n      \"businessCentre\": \"GBLO\"\n    },\n    \"terminationDate\": {\n      \"date\": \"2020-08-02\",\n      \"busDayConvention\": \"ModFollowing\",\n      \"businessCentre\": \"GBLO\"\n    },\n    \"paymentTerms\": {\n      \"period\": \"6M\",\n      \"dayCountFraction\": \"ACT/360\"\n    },\n    \"fixingDateOffset\": {\n      \"offset\": \"-2D\",\n      \"busDayConvention\": \"ModFollowing\",\n      \"businessCentre\": \"GBLO\"\n    }\n  },\n  \"fixedLeg\": {\n    \"effectiveDate\": {\n      \"date\": \"2019-08-02\",\n      \"busDayConvention\": \"ModFollowing\",\n      \"businessCentre\": \"GBLO\"\n    },\n    \"terminationDate\": {\n      \"date\": \"2019-08-02\",\n      \"busDayConvention\": \"ModFollowing\",\n      \"businessCentre\": \"GBLO\"\n    },\n    \"paymentTerms\": {\n      \"period\": \"6M\",\n      \"dayCountFraction\": \"ACT/360\"\n    }\n  }\n};","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/js/new_trade_fields.js"],"names":["extractByKey","obj","key","arr","extract","Object","values","i","keys","length","Array","append","base_fields","extended_fields","new_trade_fields","base","push","extended","concat","IRS"],"mappings":"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","sourcesContent":["export function extractByKey(obj, key) {     //Pull all values of specified key from nested JSON\n    const arr = [];\n    function extract(obj, arr, key) {\n        //Recursively search for values of key in JSON tree\n        if (obj instanceof Object) {\n            let values = obj.values();\n            for (let i = 0; i < keys.length; i++) {\n                if (values[i] instanceof Object || values[i] instanceof Array) {\n                    extract(values[i], arr, key);\n                }\n                else if (values[i] === key) {\n                    arr.append(values[i]);\n                }\n            }\n        }\n        else if (obj instanceof Array) {\n            for (let i = 0; i < obj.length; i++) {\n                extract(obj[i], arr, key);\n            }\n        }\n        return arr\n    }\n    return extract(obj, arr, key);\n}\nconst base_fields = [\n    ['Trade ID', 'text'],\n    ['Trade Date', 'date'],\n    ['Trade Type', 'select'],\n    ['Counterparty', 'select'],\n    ['Direction', 'select'],\n    ['Amount', 'number'],\n    ['Currency', 'select'],\n    ['Fixed Rate', 'number'],\n    ['Duration', 'select']\n];\n\nconst extended_fields = [\n    ['Counterparty Trade ID', 'text'],\n    ['Termination Date (Fixed Leg)', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Rate Reference', 'select'],\n    ['Period', 'select'],\n    ['Day Count Fraction', 'select'],\n    ['Fixing Date Offset', 'select'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Effective Date', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Termination Date', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Period (Fixed Leg)', 'select'],\n    ['Day Count Fraction (Fixed Leg)', 'select'],\n    ['Effective Date (Fixed Leg)', 'date'],\n    ['Bus Day Convention', 'select'],\n    ['Business Centre', 'select'],\n    ['Termination Date (Fixed Leg)', 'date'],\n    ['Bus Day Convention (Fixed Leg)', 'select'],\n    ['Business Centre(Fixed Leg)', 'select'],\n];\n\nexport const new_trade_fields = () => {\n    const base = () => {\n        for (let i = 0; i < base_fields.length; i++) {\n            base_fields[i].push('0');\n        }\n        return base_fields;\n    };\n\n    const extended = () => {\n        for (let i = 0; i < extended_fields.length; i++) {\n            extended_fields[i].push('1');\n        }\n        return extended_fields;\n    };\n\n    return base().concat(extended());\n};\nexport const IRS = {\n    \"tradeDate\": \"2019-08-02\",\n    \"tradeType\": \"IRS\",\n    \"direction\": \"PayFixed\",\n    \"amount\": 100000,\n    \"currency\": \"GBP\",\n    \"fixedRate\": 0.1,\n    \"duration\": \"5Y\",\n    \"counterPartyId\": 2,\n    \"terminationDate\": {\"date\": \"2020-08-02\",\n        \"busDayConvention\": \"ModFollowing\",\n        \"businessCentre\": \"GBLO\"},\n    \"floatingLeg\": {\"rateReference\": \"EURIBOR\",\n        \"effectiveDate\": {\"date\": \"2019-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"terminationDate\": {\"date\": \"2020-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"paymentTerms\": {\"period\": \"6M\", \"dayCountFraction\": \"ACT/360\"},\n        \"fixingDateOffset\": {\"offset\": \"-2D\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"}},\n    \"fixedLeg\": {\n        \"effectiveDate\": {\"date\": \"2019-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"terminationDate\": {\"date\": \"2019-08-02\",\n            \"busDayConvention\": \"ModFollowing\",\n            \"businessCentre\": \"GBLO\"},\n        \"paymentTerms\": {\"period\": \"6M\", \"dayCountFraction\": \"ACT/360\"}}\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}