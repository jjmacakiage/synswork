{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\nimport DataTable from '../components/DataTable';\nimport Header from '../components/main/Header';\nexport default function Blotter() {\n  var _useState = useState({\n    rows: [['f']],\n    columns: ['a']\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    //ADD AJAX REQUEST TO FETCH TRADE DATA HERE\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\");\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n\n  function exportToCSV() {\n    var csv = '';\n\n    for (var i = 0; i < data.columns.length; i++) {\n      csv += data.columns[i] + ',';\n    }\n\n    csv += '\\n';\n\n    for (var _i = 0; _i < data.rows.length; _i++) {\n      var row = data.rows[_i];\n      csv += row.join(',');\n      csv += \"\\n\";\n    }\n\n    ;\n    var hiddenElement = document.createElement('a');\n    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n    hiddenElement.target = '_blank';\n    var date = new Date();\n    var month = date.getUTCMonth();\n    var day = date.getUTCDate();\n    var year = date.getUTCFullYear();\n    var name = year + '-' + month + '-' + day;\n    hiddenElement.download = name + '.csv';\n    hiddenElement.click();\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: exportToCSV.bind(this)\n  }, \"Export to CSV\")), React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(DataTable, {\n    data: data\n  }))));\n}","map":{"version":3,"sources":["C:\\Users\\liams\\synswap-web-react\\synswap\\pages\\Blotter.js"],"names":["React","useEffect","useState","Button","Grid","useSelector","DataTable","Header","Blotter","rows","columns","data","setData","fetchData","exportToCSV","csv","i","length","row","join","hiddenElement","document","createElement","href","encodeURI","target","date","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","name","download","click","bind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA,kBACNN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,CAAC,CAAC,GAAD,CAAD,CAAR;AAAiBC,IAAAA,OAAO,EAAE,CAAC,GAAD;AAA1B,GAAD,CADF;AAAA;AAAA,MACvBC,IADuB;AAAA,MACjBC,OADiB;;AAE9BX,EAAAA,SAAS,CAAE,YAAM;AACb;AACA,QAAMY,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATA,SAAS;AAAA;AAAA;AAAA,OAAf;;AAKAA,IAAAA,SAAS;AACZ,GARQ,EAQN,EARM,CAAT;;AAUA,WAASC,WAAT,GAAuB;AACnB,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACD,OAAL,CAAaO,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1CD,MAAAA,GAAG,IAAIJ,IAAI,CAACD,OAAL,CAAaM,CAAb,IAAkB,GAAzB;AACH;;AACDD,IAAAA,GAAG,IAAI,IAAP;;AACA,SAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGL,IAAI,CAACF,IAAL,CAAUQ,MAA9B,EAAsCD,EAAC,EAAvC,EAA2C;AACvC,UAAIE,GAAG,GAAGP,IAAI,CAACF,IAAL,CAAUO,EAAV,CAAV;AACAD,MAAAA,GAAG,IAAIG,GAAG,CAACC,IAAJ,CAAS,GAAT,CAAP;AACAJ,MAAAA,GAAG,IAAI,IAAP;AACH;;AAAA;AAED,QAAIK,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAApB;AACAF,IAAAA,aAAa,CAACG,IAAd,GAAqB,iCAAiCC,SAAS,CAACT,GAAD,CAA/D;AACAK,IAAAA,aAAa,CAACK,MAAd,GAAuB,QAAvB;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACG,WAAL,EAAZ;AACA,QAAIC,GAAG,GAAGJ,IAAI,CAACK,UAAL,EAAV;AACA,QAAIC,IAAI,GAAGN,IAAI,CAACO,cAAL,EAAX;AACA,QAAIC,IAAI,GAAGF,IAAI,GAAG,GAAP,GAAaJ,KAAb,GAAqB,GAArB,GAA2BE,GAAtC;AACAV,IAAAA,aAAa,CAACe,QAAd,GAAyBD,IAAI,GAAG,MAAhC;AACAd,IAAAA,aAAa,CAACgB,KAAd;AACH;;AAED,SACE,iCACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAG;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG;AAAhB,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAGtB,WAAW,CAACuB,IAAZ,CAAiB,IAAjB;AAAlC,qBADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG;AAAhB,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAG1B;AAAlB,IADJ,CANJ,CADJ,CADF;AAeH","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { useSelector } from \"react-redux\";\r\nimport DataTable from '../components/DataTable';\r\nimport Header from '../components/main/Header';\r\n\r\nexport default function Blotter() {\r\n    const [data, setData] = useState({ rows: [['f']], columns: ['a'] });\r\n    useEffect( () => {\r\n        //ADD AJAX REQUEST TO FETCH TRADE DATA HERE\r\n        const fetchData = async () => {\r\n            //const result = await axios('');\r\n            //setData(result);\r\n            return;\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    function exportToCSV() {\r\n        let csv = '';\r\n        for (let i = 0; i < data.columns.length; i++) {\r\n            csv += data.columns[i] + ',';\r\n        }\r\n        csv += '\\n';\r\n        for (let i = 0; i < data.rows.length; i++) {\r\n            let row = data.rows[i];\r\n            csv += row.join(',');\r\n            csv += \"\\n\";\r\n        };\r\n\r\n        let hiddenElement = document.createElement('a');\r\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\r\n        hiddenElement.target = '_blank';\r\n        let date = new Date();\r\n        let month = date.getUTCMonth();\r\n        let day = date.getUTCDate();\r\n        let year = date.getUTCFullYear();\r\n        let name = year + '-' + month + '-' + day;\r\n        hiddenElement.download = name + '.csv';\r\n        hiddenElement.click();\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <Grid container spacing={ 2 }>\r\n              <Grid item xs={ 12 }>\r\n                  <Button color=\"primary\" onClick={ exportToCSV.bind(this) }>\r\n                      Export to CSV\r\n                  </Button>\r\n              </Grid>\r\n              <Grid item xs={ 12 }>\r\n                  <DataTable data={ data }/>\r\n              </Grid>\r\n          </Grid>\r\n\r\n      </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}