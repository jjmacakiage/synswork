{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Button, Grid } from '@material-ui/core';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataTable from '../components/DataTable';\nimport Table from \"../components/Table\";\nimport TableTwo from \"../components/TableTwo\";\nexport default function Blotter() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var trades = useSelector(function (state) {\n    return state.TradeReducer.trades;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    setData(trades);\n  }, [trades]);\n\n  function exportToCSV() {\n    var csv = '';\n\n    for (var i = 0; i < data.columns.length; i++) {\n      csv += data.columns[i] + ',';\n    }\n\n    csv += '\\n';\n\n    for (var _i = 0; _i < data.rows.length; _i++) {\n      var row = data.rows[_i];\n      csv += row.join(',');\n      csv += \"\\n\";\n    }\n\n    ;\n    var hiddenElement = document.createElement('a');\n    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n    hiddenElement.target = '_blank';\n    var date = new Date();\n    var month = date.getUTCMonth();\n    var day = date.getUTCDate();\n    var year = date.getUTCFullYear();\n    var name = year + '-' + month + '-' + day;\n    hiddenElement.download = name + '.csv';\n    hiddenElement.click();\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      padding: 50\n    }\n  }, React.createElement(TableTwo, {\n    data: data\n  }))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/pages/Blotter.js"],"names":["React","useEffect","useState","useRef","axios","Button","Grid","useDispatch","useSelector","DataTable","Table","TableTwo","Blotter","data","setData","trades","state","TradeReducer","dispatch","exportToCSV","csv","i","columns","length","rows","row","join","hiddenElement","document","createElement","href","encodeURI","target","date","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","name","download","click","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,eAAe,SAASC,OAAT,GAAmB;AAAA,kBACNV,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,MACvBW,IADuB;AAAA,MACjBC,OADiB;;AAE9B,MAAMC,MAAM,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,YAAN,CAAmBF,MAAvB;AAAA,GAAN,CAA1B;AACA,MAAMG,QAAQ,GAAGX,WAAW,EAA5B;AAGAN,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,OAAO,CAACC,MAAD,CAAP;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,WAASI,WAAT,GAAuB;AACnB,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,OAAL,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC1CD,MAAAA,GAAG,IAAIP,IAAI,CAACS,OAAL,CAAaD,CAAb,IAAkB,GAAzB;AACH;;AACDD,IAAAA,GAAG,IAAI,IAAP;;AACA,SAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGR,IAAI,CAACW,IAAL,CAAUD,MAA9B,EAAsCF,EAAC,EAAvC,EAA2C;AACvC,UAAII,GAAG,GAAGZ,IAAI,CAACW,IAAL,CAAUH,EAAV,CAAV;AACAD,MAAAA,GAAG,IAAIK,GAAG,CAACC,IAAJ,CAAS,GAAT,CAAP;AACAN,MAAAA,GAAG,IAAI,IAAP;AACH;;AAAA;AAED,QAAIO,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAApB;AACAF,IAAAA,aAAa,CAACG,IAAd,GAAqB,iCAAiCC,SAAS,CAACX,GAAD,CAA/D;AACAO,IAAAA,aAAa,CAACK,MAAd,GAAuB,QAAvB;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACG,WAAL,EAAZ;AACA,QAAIC,GAAG,GAAGJ,IAAI,CAACK,UAAL,EAAV;AACA,QAAIC,IAAI,GAAGN,IAAI,CAACO,cAAL,EAAX;AACA,QAAIC,IAAI,GAAGF,IAAI,GAAG,GAAP,GAAaJ,KAAb,GAAqB,GAArB,GAA2BE,GAAtC;AACAV,IAAAA,aAAa,CAACe,QAAd,GAAyBD,IAAI,GAAG,MAAhC;AACAd,IAAAA,aAAa,CAACgB,KAAd;AACH;;AAED,SACE,iCACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAG;AAA1B,KA8BQ,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAA5B,KACM,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAG/B;AAAjB,IADN,CA9BR,CADJ,CADF;AAwCH","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Button, Grid } from '@material-ui/core';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport DataTable from '../components/DataTable';\nimport Table from \"../components/Table\";\nimport TableTwo from \"../components/TableTwo\";\n\n\nexport default function Blotter() {\n    const [data, setData] = useState({});\n    const trades = useSelector(state => state.TradeReducer.trades);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        setData(trades);\n    }, [trades]);\n\n    function exportToCSV() {\n        let csv = '';\n        for (let i = 0; i < data.columns.length; i++) {\n            csv += data.columns[i] + ',';\n        }\n        csv += '\\n';\n        for (let i = 0; i < data.rows.length; i++) {\n            let row = data.rows[i];\n            csv += row.join(',');\n            csv += \"\\n\";\n        };\n\n        let hiddenElement = document.createElement('a');\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n        hiddenElement.target = '_blank';\n        let date = new Date();\n        let month = date.getUTCMonth();\n        let day = date.getUTCDate();\n        let year = date.getUTCFullYear();\n        let name = year + '-' + month + '-' + day;\n        hiddenElement.download = name + '.csv';\n        hiddenElement.click();\n    }\n\n    return (\n      <div>\n          <Grid container spacing={ 2 }>\n              {\n                  /*\n                  <Grid item xs={ 12 }>\n                      <Button color=\"primary\" onClick={ exportToCSV.bind(this) }>\n                          Export to CSV\n                      </Button>\n                  </Grid>\n                   */\n              }\n              {\n                  /*\n                  <Grid item xs={12}>\n                      <DataTable data={data}/>\n                  </Grid>\n                   */\n              }\n              { /*\n                  <Grid item xs={ 12 } style={{ padding: 50 }}>\n                        <Table data={ data } />\n                </Grid>\n                */\n              }\n              { /*\n                  <Grid item xs={ 12 } style={{ padding: 50 }}>\n                        <Table data={ data } />\n                </Grid>\n                */\n              }\n              {\n                  <Grid item xs={ 12 } style={{ padding: 50 }}>\n                        <TableTwo data={ data } />\n                  </Grid>\n              }\n          </Grid>\n\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}