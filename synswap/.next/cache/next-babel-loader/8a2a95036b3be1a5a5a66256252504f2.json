{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { InputBase } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}];\n\nfunction renderInput(inputProps) {\n  var InputProps = inputProps.InputProps,\n      classes = inputProps.classes,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"InputProps\", \"classes\", \"ref\"]);\n\n  return React.createElement(InputBase, _extends({\n    InputProps: _objectSpread({\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      }\n    }, InputProps)\n  }, other));\n}\n\nrenderInput.propTypes = {\n  classes: PropTypes.object.isRequired,\n  InputProps: PropTypes.object\n};\n\nfunction renderSuggestion(suggestionProps) {\n  var suggestion = suggestionProps.suggestion,\n      index = suggestionProps.index,\n      itemProps = suggestionProps.itemProps,\n      highlightedIndex = suggestionProps.highlightedIndex,\n      selectedItem = suggestionProps.selectedItem;\n  var isHighlighted = highlightedIndex === index;\n  var isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n  return React.createElement(MenuItem, _extends({}, itemProps, {\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400\n    }\n  }), suggestion.label);\n}\n\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n  index: PropTypes.number.isRequired,\n  itemProps: PropTypes.object.isRequired,\n  selectedItem: PropTypes.string.isRequired,\n  suggestion: PropTypes.shape({\n    label: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction getSuggestions(value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$showEmpty = _ref.showEmpty,\n      showEmpty = _ref$showEmpty === void 0 ? false : _ref$showEmpty;\n\n  var inputValue = deburr(value.trim()).toLowerCase();\n  var inputLength = inputValue.length;\n  var count = 0;\n  return inputLength === 0 && !showEmpty ? [] : suggestions.filter(function (suggestion) {\n    var keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      flexGrow: 1,\n      position: 'relative'\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing(1),\n      left: 0,\n      right: 0\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: _defineProperty({\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      width: 120,\n      '&:onFocus': {\n        width: 200\n      }\n    }),\n    divider: {\n      height: theme.spacing(2)\n    },\n    search: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginRight: theme.spacing(2),\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }),\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  };\n});\nexport default function SearchList() {\n  var classes = useStyles();\n  return React.createElement(Downshift, {\n    id: \"downshift-simple\"\n  }, function (_ref2) {\n    var getInputProps = _ref2.getInputProps,\n        getItemProps = _ref2.getItemProps,\n        getLabelProps = _ref2.getLabelProps,\n        getMenuProps = _ref2.getMenuProps,\n        highlightedIndex = _ref2.highlightedIndex,\n        inputValue = _ref2.inputValue,\n        isOpen = _ref2.isOpen,\n        selectedItem = _ref2.selectedItem;\n\n    var _getInputProps = getInputProps({\n      placeholder: 'Search...'\n    }),\n        onBlur = _getInputProps.onBlur,\n        onFocus = _getInputProps.onFocus,\n        inputProps = _objectWithoutProperties(_getInputProps, [\"onBlur\", \"onFocus\"]);\n\n    return React.createElement(\"div\", {\n      className: classes.container\n    }, renderInput({\n      fullWidth: true,\n      classes: classes,\n      label: 'Country',\n      InputLabelProps: getLabelProps({\n        shrink: true\n      }),\n      InputProps: {\n        onBlur: onBlur,\n        onFocus: onFocus\n      },\n      inputProps: inputProps\n    }), React.createElement(\"div\", getMenuProps(), isOpen ? React.createElement(Paper, {\n      className: classes.paper,\n      square: true\n    }, getSuggestions(inputValue).map(function (suggestion, index) {\n      return renderSuggestion({\n        suggestion: suggestion,\n        index: index,\n        itemProps: getItemProps({\n          item: suggestion.label\n        }),\n        highlightedIndex: highlightedIndex,\n        selectedItem: selectedItem\n      });\n    })) : null));\n  });\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/components/main/SearchList.js"],"names":["React","PropTypes","deburr","Downshift","fade","makeStyles","Paper","MenuItem","InputBase","SearchIcon","suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","inputRef","root","inputRoot","input","inputInput","propTypes","object","isRequired","renderSuggestion","suggestionProps","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","indexOf","fontWeight","oneOfType","oneOf","number","string","shape","getSuggestions","value","showEmpty","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","useStyles","theme","container","flexGrow","position","paper","zIndex","marginTop","spacing","left","right","color","padding","transition","transitions","create","width","breakpoints","up","divider","height","search","borderRadius","backgroundColor","palette","common","white","marginRight","marginLeft","searchIcon","pointerEvents","display","alignItems","justifyContent","SearchList","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","placeholder","onBlur","onFocus","fullWidth","InputLabelProps","shrink","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {InputBase} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\n\nconst suggestions = [\n    { label: 'Afghanistan' },\n    { label: 'Aland Islands' },\n    { label: 'Barbados' },\n    { label: 'Benin' },\n    { label: 'Bermuda' },\n];\n\nfunction renderInput(inputProps) {\n    const { InputProps, classes, ref, ...other } = inputProps;\n    return (\n        <InputBase\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    classes: PropTypes.object.isRequired,\n    InputProps: PropTypes.object,\n};\n\nfunction renderSuggestion(suggestionProps) {\n    const { suggestion, index, itemProps, highlightedIndex, selectedItem } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.label}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion.label}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.object.isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nfunction getSuggestions(value, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : suggestions.filter(suggestion => {\n            const keep =\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n            if (keep) {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\nconst useStyles = makeStyles(theme => ({\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:onFocus': {\n                width: 200,\n            },\n        },\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\nexport default function SearchList() {\n    const classes = useStyles();\n\n    return (\n        <Downshift id=\"downshift-simple\">\n            {({\n                  getInputProps,\n                  getItemProps,\n                  getLabelProps,\n                  getMenuProps,\n                  highlightedIndex,\n                  inputValue,\n                  isOpen,\n                  selectedItem,\n              }) => {\n                const {onBlur, onFocus, ...inputProps} = getInputProps({\n                    placeholder: 'Search...',\n                });\n\n                return (\n                    <div className={classes.container}>\n                        { renderInput({\n                            fullWidth: true,\n                            classes,\n                            label: 'Country',\n                            InputLabelProps: getLabelProps({shrink: true}),\n                            InputProps: {onBlur, onFocus},\n                            inputProps,\n                        }) }\n\n                        <div {...getMenuProps()}>\n                            {isOpen ? (\n                                <Paper className={classes.paper} square>\n                                    {getSuggestions(inputValue).map((suggestion, index) =>\n                                        renderSuggestion({\n                                            suggestion,\n                                            index,\n                                            itemProps: getItemProps({item: suggestion.label}),\n                                            highlightedIndex,\n                                            selectedItem,\n                                        }),\n                                    )}\n                                </Paper>\n                            ) : null}\n                        </div>\n                    </div>\n                );\n            }}\n        </Downshift>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}