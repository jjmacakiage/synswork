{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Grid } from '@material-ui/core';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataTable from '../components/DataTable';\nimport Table from \"../components/Table\";\nexport default function Blotter() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var trades = useSelector(function (state) {\n    return state.TradeReducer.trades;\n  });\n  var dispatch = useDispatch();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shouldRefresh = _useState4[0],\n      changeRefresh = _useState4[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      changeRefresh(!shouldRefresh);\n    }, 5000);\n  }, [trades]);\n  useEffect(function () {\n    //ADD AJAX REQUEST TO FETCH TRADE DATA HERE\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = 'http://localhost:4000/api/traders/1/trades';\n                _context.prev = 1;\n                axios.get(url).then(function (response) {\n                  console.log('Trades in Blotter');\n                  setData(response.data.trades);\n                });\n                _context.next = 9;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](1);\n                console.error('You have an error in your code or there are Network issues.', _context.t0);\n                return _context.abrupt(\"return\", _context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 5]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [shouldRefresh === true]);\n\n  function exportToCSV() {\n    var csv = '';\n\n    for (var i = 0; i < data.columns.length; i++) {\n      csv += data.columns[i] + ',';\n    }\n\n    csv += '\\n';\n\n    for (var _i = 0; _i < data.rows.length; _i++) {\n      var row = data.rows[_i];\n      csv += row.join(',');\n      csv += \"\\n\";\n    }\n\n    ;\n    var hiddenElement = document.createElement('a');\n    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n    hiddenElement.target = '_blank';\n    var date = new Date();\n    var month = date.getUTCMonth();\n    var day = date.getUTCDate();\n    var year = date.getUTCFullYear();\n    var name = year + '-' + month + '-' + day;\n    hiddenElement.download = name + '.csv';\n    hiddenElement.click();\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: exportToCSV.bind(this)\n  }, \"Export to CSV\")), React.createElement(Grid, null, React.createElement(Table, {\n    data: data\n  }))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/pages/Blotter.js"],"names":["React","useEffect","useState","axios","Button","Grid","useDispatch","useSelector","DataTable","Table","Blotter","data","setData","trades","state","TradeReducer","dispatch","shouldRefresh","changeRefresh","setInterval","fetchData","url","get","then","response","console","log","error","exportToCSV","csv","i","columns","length","rows","row","join","hiddenElement","document","createElement","href","encodeURI","target","date","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","name","download","click","bind"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Grid } from '@material-ui/core';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport DataTable from '../components/DataTable';\nimport Table from \"../components/Table\";\n\nexport default function Blotter() {\n    const [data, setData] = useState({});\n    const trades = useSelector(state => state.TradeReducer.trades);\n    const dispatch = useDispatch();\n    const [shouldRefresh, changeRefresh] = useState(false);\n\n    useEffect(() => {\n        setInterval(() => {\n            changeRefresh(!shouldRefresh);\n        }, 5000);\n    }, [trades]);\n\n    useEffect( () => {\n        //ADD AJAX REQUEST TO FETCH TRADE DATA HERE\n        const fetchData = async () => {\n            const url = 'http://localhost:4000/api/traders/1/trades';\n            try {\n                axios.get(url)\n                    .then(function (response) {\n                        console.log('Trades in Blotter');\n                        setData(response.data.trades);\n                    });\n            } catch (error) {\n                console.error(\n                    'You have an error in your code or there are Network issues.',\n                    error\n                );\n                return error;\n            }\n        };\n        fetchData();\n    }, [shouldRefresh === true]);\n\n    function exportToCSV() {\n        let csv = '';\n        for (let i = 0; i < data.columns.length; i++) {\n            csv += data.columns[i] + ',';\n        }\n        csv += '\\n';\n        for (let i = 0; i < data.rows.length; i++) {\n            let row = data.rows[i];\n            csv += row.join(',');\n            csv += \"\\n\";\n        };\n\n        let hiddenElement = document.createElement('a');\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n        hiddenElement.target = '_blank';\n        let date = new Date();\n        let month = date.getUTCMonth();\n        let day = date.getUTCDate();\n        let year = date.getUTCFullYear();\n        let name = year + '-' + month + '-' + day;\n        hiddenElement.download = name + '.csv';\n        hiddenElement.click();\n    }\n\n    return (\n      <div>\n          <Grid container spacing={ 2 }>\n              <Grid item xs={ 12 }>\n                  <Button color=\"primary\" onClick={ exportToCSV.bind(this) }>\n                      Export to CSV\n                  </Button>\n              </Grid>\n              {\n                  /*\n                  <Grid item xs={12}>\n                      <DataTable data={data}/>\n                  </Grid>\n                   */\n              }\n              <Grid>\n                  <Table data={ data } />\n              </Grid>\n          </Grid>\n\n      </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}