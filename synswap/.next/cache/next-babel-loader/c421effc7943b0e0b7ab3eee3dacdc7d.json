{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Button, Grid, makeStyles, Tabs, Tab, Select, TextField, MenuItem, Divider, Typography } from '@material-ui/core';\nimport { Eclipse } from \"react-loading-io\";\nimport { ErrorMessage, Field, Formik, Form } from \"formik\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { TabContainer } from \"../../utils/tradehelpers\";\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"simple-tabpanel-\".concat(index)\n  }, other), React.createElement(Box, {\n    p: 3\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: \"simple-tab-\".concat(index),\n    'aria-controls': \"simple-tabpanel-\".concat(index)\n  };\n}\n/**\n * @constant useStyles\n * hook used for styling\n */\n\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper\n    },\n    customise: {\n      marginTop: 20\n    }\n  };\n});\n/**\n * @class NewTradeContent\n * Contains the forms for creating a NewTrade\n * Dependencies used:\n * @material-ui for Grid, makeStyles, Tabs, Tab, Typography\n * Custom Components used:\n * @class NewTradeContent\n */\n\nexport default function NewTradeContent(props) {\n  var classes = useStyles();\n  var fields = props.fields,\n      counterpartyList = props.counterpartyList,\n      trades_length = props.trades_length,\n      schema = props.schema,\n      validationFunctions = props.validationFunctions;\n  var IRS = schema.IRS;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      changeLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      counterparty = _useState4[0],\n      changeCounterparty = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var tradeSchema = function tradeSchema(schema, values) {\n    var generateSchema = function generateSchema(object, values) {\n      var keys = _Object$keys(object);\n\n      var valueCount = 0;\n      var result = {};\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var obj = object[key];\n\n        if (typeof obj === 'string' || typeof obj === 'number') {\n          result = _objectSpread({}, result, _defineProperty({}, key, values[valueCount]));\n          valueCount++;\n        } else {\n          result = _objectSpread({}, result, _defineProperty({}, key, generateSchema(obj, values.slice(valueCount, valueCount + _Object$keys(object).length))));\n          valueCount = valueCount + _Object$keys(object).length;\n        }\n      }\n\n      return result;\n    };\n\n    return generateSchema(schema, values);\n  };\n  /**\n   * @function handleSubmit\n   * @param values\n   * takes fields passed in from the form and sends to api\n   */\n\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(values) {\n      var url, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = 'http://localhost:4000/api/traders/1/trades'; //console.log(values);\n\n              data = values; //tradeSchema(IRS, Object.values(values));\n\n              _context.prev = 2;\n              axios.post(url, {\n                data: data\n              }).then(function (response) {\n                if (response.status === 200) {\n                  console.log(response);\n                  dispatch({\n                    type: 'NEW_TRADE',\n                    payload: [response.data.data, values]\n                  });\n                  return response.data;\n                } else {\n                  console.log('Trade register failed.', response.status);\n                  var error = new Error(response.statusText);\n                  error.response = response;\n                  throw error;\n                }\n              });\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('You have an error in your code or there are Network issues.', _context.t0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 6]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * @function tabChange\n   * @param e\n   * @param newValue\n   * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n   */\n\n\n  function tabChange(e, newValue) {\n    setValue(newValue);\n  }\n\n  function generateInitial(array, values) {\n    var result = {};\n\n    for (var i = 0; i < array.length; i++) {\n      result = _objectSpread({}, result, _defineProperty({}, array[i][0], values[i]));\n    }\n\n    return result;\n  }\n\n  function handleCounterpartyChange(e) {\n    changeCounterparty(e.target.value);\n  }\n\n  function createFormColumns(array) {\n    return React.createElement(React.Fragment, null, array.map(function (value, index) {\n      if (value[1] !== 'select') {\n        return React.createElement(Grid, {\n          item: true,\n          xs: 4\n        }, React.createElement(Field, {\n          name: value[0],\n          key: value[0],\n          type: value[1],\n          render: function render(_ref2) {\n            var field = _ref2.field,\n                isSubmitting = _ref2.form.isSubmitting;\n            return React.createElement(TextField, _extends({}, field, {\n              label: value[1] === 'date' ? '' : value[0],\n              disabled: counterparty === '' || isSubmitting,\n              variant: \"outlined\",\n              type: value[1],\n              helperText: value[1] === 'date' ? value[0] : ''\n            }));\n          }\n        }), React.createElement(ErrorMessage, {\n          name: value[0],\n          component: \"div\"\n        }));\n      } else {\n        return React.createElement(Grid, {\n          item: true,\n          xs: 4\n        }, React.createElement(Field, {\n          name: value[0],\n          key: value[0],\n          render: function render(_ref3) {\n            var field = _ref3.field,\n                isSubmitting = _ref3.form.isSubmitting,\n                props = _objectWithoutProperties(_ref3, [\"field\", \"form\"]);\n\n            return React.createElement(TextField, _extends({\n              select: true,\n              disabled: counterparty === '' || isSubmitting,\n              variant: \"outlined\",\n              style: {\n                width: '100%'\n              },\n              SelectProps: {\n                \"native\": true\n              }\n            }, field, props), React.createElement(\"option\", null, \" \", value[0], \" \"), value[3].map(function (option) {\n              return React.createElement(\"option\", {\n                key: option,\n                value: option\n              }, option);\n            }));\n          }\n        }), React.createElement(ErrorMessage, {\n          name: value[0],\n          component: \"div\"\n        }));\n      }\n    }));\n  }\n\n  function extendedFields() {\n    var extended = fields.filter(function (field) {\n      return field[2] === '1';\n    });\n\n    var returnExtended = function returnExtended(i) {\n      return extended[i];\n    };\n\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2\n    }, [[0], [1, 2, 3], [4], [5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17], [18, 19, 20], [21, 22, 23]].map(function (value, index) {\n      var temp = [];\n\n      for (var i = 0; i < value.length; i++) {\n        temp.push(returnExtended(value[i]));\n      }\n\n      return React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        key: value + index\n      }, index === 2 || index === 7 ? React.createElement(\"div\", {\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        }\n      }, React.createElement(Typography, {\n        variant: \"overline\",\n        style: {\n          marginBottom: 20\n        }\n      }, index === 2 ? \"Floating Leg\" : \"Fixed Leg\"), React.createElement(Divider, {\n        dark: true\n      })) : null, React.createElement(Grid, {\n        container: true,\n        spacing: 2\n      }, createFormColumns(temp)));\n    }));\n  }\n  /**\n   * @return\n   * @type Grid\n   * @type TabContainer\n   * @type div\n   */\n\n\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(\"div\", null, React.createElement(Typography, {\n    variant: \"overline\",\n    style: {\n      marginBottom: 20\n    }\n  }, \" \", counterparty === '' ? 'New Trade' : counterparty), React.createElement(Tabs, {\n    value: value,\n    onChange: tabChange,\n    centered: true\n  }, React.createElement(Tab, _extends({\n    label: \"Main\"\n  }, a11yProps(0))), React.createElement(Tab, _extends({\n    label: \"Details\"\n  }, a11yProps(1)))), React.createElement(LoadingOverlay, {\n    active: isLoading,\n    spinner: React.createElement(Eclipse, null),\n    styles: {\n      overlay: function overlay(base) {\n        return _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.1)'\n        });\n      }\n    }\n  }, React.createElement(Formik, {\n    initialValues: generateInitial(fields, new Array(fields.length).fill('')),\n    enableReinitialize: true,\n    onSubmit: function onSubmit(values, actions) {\n      console.log(_Object$keys(values).length, tradeSchema(IRS, _Object$values(values)));\n      handleSubmit(IRS, values);\n      actions.setSubmitting(false);\n    },\n    validateOnBlur: true,\n    render: function render(_ref4) {\n      var errors = _ref4.errors,\n          status = _ref4.status,\n          touched = _ref4.touched,\n          isSubmitting = _ref4.isSubmitting,\n          isValidating = _ref4.isValidating;\n      return React.createElement(Form, null, React.createElement(TabPanel, {\n        value: value,\n        index: 0\n      }, React.createElement(TextField, {\n        select: true,\n        label: \"Select Counterparty\",\n        disabled: isSubmitting,\n        variant: \"outlined\",\n        type: value[1],\n        value: counterparty,\n        onChange: function onChange(e) {\n          return handleCounterpartyChange(e);\n        },\n        style: {\n          width: '100%',\n          marginBottom: 20\n        }\n      }, counterpartyList.map(function (value, index) {\n        return React.createElement(MenuItem, {\n          key: value + index,\n          value: value\n        }, value);\n      })), React.createElement(Grid, {\n        container: true,\n        spacing: 2\n      }, fields.map(function (field, index) {\n        if (field[2] === '0') {\n          return React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              marginTop: 2,\n              marginBottom: 2\n            },\n            key: field + index\n          }, createFormColumns([field]));\n        }\n      }))), React.createElement(TabPanel, {\n        index: 1,\n        value: value\n      }, extendedFields(), React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        disabled: isValidating || isSubmitting || counterparty === '',\n        style: {\n          marginTop: 20\n        }\n      }, \"Submit\")));\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/components/newtrade/NewTradeContent.js"],"names":["React","useState","useEffect","PropTypes","fetch","axios","useSelector","useDispatch","Box","Button","Grid","makeStyles","Tabs","Tab","Select","TextField","MenuItem","Divider","Typography","Eclipse","ErrorMessage","Field","Formik","Form","LoadingOverlay","TabContainer","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","customise","marginTop","NewTradeContent","classes","fields","counterpartyList","trades_length","schema","validationFunctions","IRS","isLoading","changeLoading","counterparty","changeCounterparty","dispatch","setValue","tradeSchema","values","generateSchema","object","keys","valueCount","result","i","length","key","obj","slice","handleSubmit","url","data","post","then","response","status","console","log","type","payload","error","Error","statusText","tabChange","e","newValue","generateInitial","array","handleCounterpartyChange","target","createFormColumns","map","field","isSubmitting","form","width","option","extendedFields","extended","filter","returnExtended","temp","push","marginBottom","overlay","base","Array","fill","actions","setSubmitting","errors","touched","isValidating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {Box, Button, Grid, makeStyles, Tabs, Tab, Select, TextField, MenuItem, Divider, Typography} from '@material-ui/core';\nimport {Eclipse} from \"react-loading-io\";\nimport {ErrorMessage, Field, Formik, Form} from \"formik\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nimport { TabContainer } from \"../../utils/tradehelpers\";\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n/**\n * @constant useStyles\n * hook used for styling\n */\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    customise: {\n        marginTop: 20\n    }\n}));\n\n/**\n * @class NewTradeContent\n * Contains the forms for creating a NewTrade\n * Dependencies used:\n * @material-ui for Grid, makeStyles, Tabs, Tab, Typography\n * Custom Components used:\n * @class NewTradeContent\n */\n\nexport default function NewTradeContent(props) {\n    const classes = useStyles();\n    const { fields, counterpartyList, trades_length, schema, validationFunctions } = props;\n    const { IRS } = schema;\n    const [isLoading, changeLoading] = useState(false);\n    const [counterparty, changeCounterparty] = useState('');\n    const dispatch = useDispatch();\n    const [value, setValue] = useState(0);\n\n    const tradeSchema = (schema, values) => {\n        const generateSchema = (object, values) => {\n            let keys = Object.keys(object);\n            let valueCount = 0;\n            let result = {};\n            for (let i = 0; i < keys.length; i++) {\n                let key = keys[i];\n                let obj = object[key];\n                if (typeof obj === 'string' || typeof obj === 'number') {\n                    result = { ...result, [key]: values[valueCount]};\n                    valueCount++;\n                }\n                else {\n                    result = { ...result, [key]: generateSchema(obj, values.slice(valueCount, valueCount + Object.keys(object).length))};\n                    valueCount = valueCount + Object.keys(object).length\n                }\n            }\n            return result;\n        };\n        return generateSchema(schema, values)\n    };\n\n    /**\n     * @function handleSubmit\n     * @param values\n     * takes fields passed in from the form and sends to api\n     */\n    const handleSubmit = async values => {\n        const url = 'http://localhost:4000/api/traders/1/trades';\n        //console.log(values);\n        const data = values; //tradeSchema(IRS, Object.values(values));\n        try {\n            axios.post(url, {\n                data\n            })\n                .then(function (response) {\n                    if (response.status === 200) {\n                        console.log(response);\n                        dispatch({ type: 'NEW_TRADE', payload: [response.data.data, values] });\n                        return response.data;\n                    } else {\n                        console.log('Trade register failed.', response.status);\n                        let error = new Error(response.statusText);\n                        error.response = response;\n                        throw error\n                    }\n                });\n        } catch (error) {\n            console.error(\n                'You have an error in your code or there are Network issues.',\n                error\n            );\n            return error;\n        }\n    };\n\n    /**\n     * @function tabChange\n     * @param e\n     * @param newValue\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n     */\n    function tabChange(e, newValue) {\n        setValue(newValue);\n    }\n\n    function generateInitial(array, values) {\n        let result = {};\n        for (let i = 0; i < array.length; i++) {\n            result = {...result, [array[i][0]]: values[i]};\n        }\n        return result;\n    }\n    function handleCounterpartyChange(e) {\n        changeCounterparty(e.target.value);\n    }\n    function createFormColumns(array) {\n        return (\n            <>\n            {\n                array.map((value, index) => {\n                    if (value[1] !== 'select') {\n                        return (\n                            <Grid item xs={ 4 }>\n                                <Field name={value[0]}\n                                       key={value[0]}\n                                       type={ value[1] }\n                                       render={({ field, form: { isSubmitting } }) => (\n                                           <TextField {...field} label={ (value[1] === 'date') ? '' : value[0]}\n                                                      disabled={counterparty === '' || isSubmitting}\n                                                      variant=\"outlined\" type={ value[1]}\n                                                      helperText={ (value[1] === 'date') ? value[0] : ''}\n                                           />\n                                       )}\n                                />\n                                <ErrorMessage name={value[0]} component=\"div\"/>\n                            </Grid>\n                        );\n                    }\n                    else {\n                        return (\n                            <Grid item xs={ 4 }>\n                                <Field name={value[0]}\n                                       key={value[0]}\n                                       render= {\n                                           ({ field, form: { isSubmitting }, ...props }) => {\n                                               return (\n                                                   <TextField\n                                                       select\n                                                       disabled={counterparty === '' || isSubmitting}\n                                                       variant=\"outlined\"\n                                                       style={{ width: '100%' }}\n                                                       SelectProps={{\n                                                           native: true,\n                                                       }}\n                                                       { ...field }\n                                                       { ...props }\n                                                   >\n                                                       <option> { value[0] } </option>\n                                                       {\n                                                           value[3].map(option => {\n                                                               return (\n                                                                   <option key={option} value={option}>\n                                                                       {option}\n                                                                   </option>\n                                                               )\n                                                           })\n                                                       }\n                                                   </TextField>\n                                               );\n                                           }\n                                       }\n                                />\n                                    <ErrorMessage name={value[0]} component=\"div\"/>\n                            </Grid>\n                        )\n                    }\n                })\n            }\n            </>\n        )\n    }\n    function extendedFields() {\n        const extended = fields.filter((field) => {\n            return field[2] === '1';\n        });\n        const returnExtended = i => {\n            return extended[i];\n        };\n        return (\n            <Grid container spacing={ 2 }>\n                {\n                    [[0], [1,2,3], [4], [5,6], [7,8,9], [10,11,12], [13,14,15], [16,17], [18,19,20], [21,22,23]].map((value, index) => {\n                        const temp = [];\n                        for (let i = 0; i < value.length; i++) {\n                            temp.push(returnExtended(value[i]));\n                        }\n                        return (\n                            <Grid item xs={ 12 } key={ value + index}>\n                                { (index === 2 || index === 7) ?\n                                    (\n                                        <div style={{ marginTop: 20, marginBottom: 20 }}>\n                                            <Typography variant=\"overline\" style={{ marginBottom: 20 }}>\n                                                {index === 2 ? \"Floating Leg\" : \"Fixed Leg\"}\n                                            </Typography>\n                                            <Divider dark />\n                                        </div>\n                                    )\n                                    : null\n                                }\n                                <Grid container spacing={ 2 }>\n                                    { createFormColumns(temp) }\n                                </Grid>\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        );\n    }\n\n\n    /**\n     * @return\n     * @type Grid\n     * @type TabContainer\n     * @type div\n     */\n    return (\n        <div className={ classes.root }>\n            <div>\n                <Typography variant=\"overline\" style={{ marginBottom: 20 }}> { (counterparty === '') ? 'New Trade' : counterparty }</Typography>\n                <Tabs value={value} onChange={tabChange} centered >\n                    <Tab label=\"Main\" {...a11yProps(0)} />\n                    <Tab label=\"Details\" {...a11yProps(1)} />\n                </Tabs>\n                <LoadingOverlay\n                    active={ isLoading }\n                    spinner={ <Eclipse />}\n                    styles={{\n                        overlay: (base) => ({\n                            ...base,\n                            background: 'rgba(255, 255, 255, 0.1)'\n                        })\n                    }}\n                >\n                    <Formik\n                        initialValues={ generateInitial(fields, new Array(fields.length).fill('')) }\n                        enableReinitialize={ true }\n                        onSubmit={(values, actions) => {\n                            console.log(Object.keys(values).length, tradeSchema(IRS, Object.values(values)));\n                            handleSubmit(IRS, values);\n                            actions.setSubmitting(false)\n                        }}\n                        validateOnBlur={ true }\n                        render={({ errors, status, touched, isSubmitting, isValidating }) => (\n                            <Form>\n                                <TabPanel value={value} index={0}>\n                                    <TextField\n                                        select\n                                        label=\"Select Counterparty\"\n                                        disabled={isSubmitting}\n                                        variant=\"outlined\" type={ value[1] }\n                                        value={ counterparty }\n                                        onChange={ e => handleCounterpartyChange(e) }\n                                        style={{ width: '100%', marginBottom: 20 }}\n                                    >\n                                        { counterpartyList.map((value, index) => {\n                                            return (\n                                                <MenuItem key={ value + index } value={ value }>\n                                                    {value}\n                                                </MenuItem>\n                                            );\n                                        })}\n                                    </TextField>\n                                    <Grid container spacing={ 2 }>\n                                        {\n                                            fields.map((field, index) => {\n                                                if (field[2] === '0') {\n                                                    return (\n                                                        <Grid item xs={ 6 } style={{ marginTop: 2, marginBottom: 2 }} key={ field + index}>\n                                                            {createFormColumns([field])}\n                                                        </Grid>\n                                                    )\n                                                }\n                                            })\n                                        }\n                                    </Grid>\n                                </TabPanel>\n                                <TabPanel index={1} value={value}>\n                                    { extendedFields() }\n                                    <Button\n                                        variant=\"contained\"\n                                        type=\"submit\"\n                                        disabled={ isValidating || isSubmitting || counterparty === ''}\n                                        style={{ marginTop: 20 }}\n                                    >\n                                        Submit\n                                    </Button>\n                                </TabPanel>\n                            </Form>\n                        )}\n                    />\n                </LoadingOverlay>\n            </div>\n        </div>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}