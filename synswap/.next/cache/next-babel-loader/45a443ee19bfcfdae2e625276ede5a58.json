{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(req, res) {\n    var auth, _JSON$parse, token, url, response, js, data, error, _response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if ('authorization' in req.headers) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(401).send('Authorization header missing'));\n\n          case 2:\n            _context.next = 4;\n            return req.headers.authorization;\n\n          case 4:\n            auth = _context.sent;\n            _context.prev = 5;\n            _JSON$parse = JSON.parse(auth), token = _JSON$parse.token;\n            url = \"https://api.github.com/user/\".concat(token);\n            _context.next = 10;\n            return fetch(url);\n\n          case 10:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 14;\n            return response.json();\n\n          case 14:\n            js = _context.sent;\n            // Need camelcase in the frontend\n            data = _Object$assign({}, {\n              avatarUrl: js.avatar_url\n            }, js);\n            return _context.abrupt(\"return\", res.status(200).json({\n              data: data\n            }));\n\n          case 19:\n            // https://github.com/developit/unfetch#caveats\n            error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n\n          case 22:\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](5);\n            _response = _context.t0.response;\n            return _context.abrupt(\"return\", _response ? res.status(_response.status).json({\n              message: _response.statusText\n            }) : res.status(400).json({\n              message: _context.t0.message\n            }));\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 24]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/pages/api/profile.js"],"names":["fetch","req","res","headers","status","send","authorization","auth","JSON","parse","token","url","response","ok","json","js","data","avatarUrl","avatar_url","error","Error","statusText","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACP,mBAAmBD,GAAG,CAACE,OADhB;AAAA;AAAA;AAAA;;AAAA,6CAEJD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAArB,CAFI;;AAAA;AAAA;AAAA,mBAKMJ,GAAG,CAACE,OAAJ,CAAYG,aALlB;;AAAA;AAKPC,YAAAA,IALO;AAAA;AAAA,0BAQOC,IAAI,CAACC,KAAL,CAAWF,IAAX,CARP,EAQHG,KARG,eAQHA,KARG;AASLC,YAAAA,GATK,yCASgCD,KAThC;AAAA;AAAA,mBAWYV,KAAK,CAACW,GAAD,CAXjB;;AAAA;AAWLC,YAAAA,QAXK;;AAAA,iBAaPA,QAAQ,CAACC,EAbF;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAcQD,QAAQ,CAACE,IAAT,EAdR;;AAAA;AAcHC,YAAAA,EAdG;AAeT;AACMC,YAAAA,IAhBG,GAgBI,eAAc,EAAd,EAAkB;AAAEC,cAAAA,SAAS,EAAEF,EAAE,CAACG;AAAhB,aAAlB,EAAgDH,EAAhD,CAhBJ;AAAA,6CAiBFb,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB;AAAEE,cAAAA,IAAI,EAAJA;AAAF,aAArB,CAjBE;;AAAA;AAmBT;AACMG,YAAAA,KApBG,GAoBK,IAAIC,KAAJ,CAAUR,QAAQ,CAACS,UAAnB,CApBL;AAqBTF,YAAAA,KAAK,CAACP,QAAN,GAAiBA,QAAjB;AArBS,kBAsBHO,KAtBG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBHP,YAAAA,SAzBG,eAyBHA,QAzBG;AAAA,6CA0BJA,SAAQ,GACXV,GAAG,CAACE,MAAJ,CAAWQ,SAAQ,CAACR,MAApB,EAA4BU,IAA5B,CAAiC;AAAEQ,cAAAA,OAAO,EAAEV,SAAQ,CAACS;AAApB,aAAjC,CADW,GAEXnB,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB;AAAEQ,cAAAA,OAAO,EAAE,YAAMA;AAAjB,aAArB,CA5BO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nexport default async (req, res) => {\n  if (!('authorization' in req.headers)) {\n    return res.status(401).send('Authorization header missing')\n  }\n\n  const auth = await req.headers.authorization\n\n  try {\n    const { token } = JSON.parse(auth)\n    const url = `https://api.github.com/user/${token}`\n\n    const response = await fetch(url)\n\n    if (response.ok) {\n      const js = await response.json()\n      // Need camelcase in the frontend\n      const data = Object.assign({}, { avatarUrl: js.avatar_url }, js)\n      return res.status(200).json({ data })\n    } else {\n      // https://github.com/developit/unfetch#caveats\n      const error = new Error(response.statusText)\n      error.response = response\n      throw error\n    }\n  } catch (error) {\n    const { response } = error\n    return response\n      ? res.status(response.status).json({ message: response.statusText })\n      : res.status(400).json({ message: error.message })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}