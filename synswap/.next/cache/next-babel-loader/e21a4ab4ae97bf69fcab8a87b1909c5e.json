{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { Paper } from '@material-ui/core';\nimport { forwardRef } from 'react';\nimport { AddBox, ArrowUpward, Check, ChevronLeft, ChevronRight, Clear, DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt, Search, ViewColumn } from \"@material-ui/icons\";\n\nvar Table = function Table(props) {\n  var data = props.data;\n  var columns = !data.rows ? pullStuff(data[0], 'keys') : data.columns;\n  var tableIcons = {\n    Add: forwardRef(function (props, ref) {\n      return React.createElement(AddBox, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Check: forwardRef(function (props, ref) {\n      return React.createElement(Check, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Clear: forwardRef(function (props, ref) {\n      return React.createElement(Clear, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Delete: forwardRef(function (props, ref) {\n      return React.createElement(DeleteOutline, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    DetailPanel: forwardRef(function (props, ref) {\n      return React.createElement(ChevronRight, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Edit: forwardRef(function (props, ref) {\n      return React.createElement(Edit, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Export: forwardRef(function (props, ref) {\n      return React.createElement(SaveAlt, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Filter: forwardRef(function (props, ref) {\n      return React.createElement(FilterList, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    FirstPage: forwardRef(function (props, ref) {\n      return React.createElement(FirstPage, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    LastPage: forwardRef(function (props, ref) {\n      return React.createElement(LastPage, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    NextPage: forwardRef(function (props, ref) {\n      return React.createElement(ChevronRight, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    PreviousPage: forwardRef(function (props, ref) {\n      return React.createElement(ChevronLeft, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    ResetSearch: forwardRef(function (props, ref) {\n      return React.createElement(Clear, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    Search: forwardRef(function (props, ref) {\n      return React.createElement(Search, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    SortArrow: forwardRef(function (props, ref) {\n      return React.createElement(ArrowUpward, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    ThirdStateCheck: forwardRef(function (props, ref) {\n      return React.createElement(Remove, _extends({}, props, {\n        ref: ref\n      }));\n    }),\n    ViewColumn: forwardRef(function (props, ref) {\n      return React.createElement(ViewColumn, _extends({}, props, {\n        ref: ref\n      }));\n    })\n  };\n\n  function formatColumns(columns) {\n    if (columns.length === 0 || columns[0].width) {\n      return columns;\n    }\n\n    var doText = function doText(text) {\n      var newText = text.replace(/([A-Z]+)/g, \" $1\");\n      return newText.charAt(0).toUpperCase() + newText.slice(1);\n    };\n\n    var result = [];\n\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[i];\n      var object = {\n        title: doText(column),\n        field: column\n      };\n      result.push(object);\n    }\n\n    return result;\n  }\n\n  function formatRows(rows) {\n    var result = [];\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      var temp = pullStuff(row, 'values');\n      var temp2 = generateObj(columns, temp);\n      result.push(temp2);\n    }\n\n    return result;\n  }\n\n  function generateObj(array, values) {\n    var result = {};\n\n    for (var i = 0; i < array.length; i++) {\n      result = _objectSpread({}, result, _defineProperty({}, array[i], values[i]));\n    }\n\n    return result;\n  }\n\n  function pullStuff(obj, param) {\n    var getKeys = function getKeys(obj) {\n      if (typeof obj !== 'object') {\n        throw new Error('Invalid JSON');\n      }\n\n      var result = [];\n\n      var topKeys = _Object$keys(obj);\n\n      for (var i = 0; i < topKeys.length; i++) {\n        var topKey = topKeys[i];\n        var topEntry = obj[topKey];\n\n        if (typeof topEntry === 'string' || typeof topEntry === 'number') {\n          result.push(topKey);\n        } else if (_Array$isArray(topEntry)) {\n          var arrayEntry = void 0;\n\n          for (arrayEntry in topEntry) {\n            result.push(getKeys(arrayEntry, true));\n          }\n        } else {\n          result.push(getKeys(topEntry));\n        }\n      }\n\n      return result.flat(Infinity);\n    };\n\n    var getValues = function getValues(obj) {\n      if (typeof obj !== 'object') {\n        throw new Error('Invalid JSON');\n      }\n\n      var result = [];\n\n      var topValues = _Object$values(obj);\n\n      for (var i = 0; i < topValues.length; i++) {\n        var topValue = topValues[i];\n\n        if (typeof topValue === 'string' || typeof topValue === 'number') {\n          result.push(topValue);\n        } else if (_Array$isArray(topValue)) {\n          var arrayEntry = void 0;\n\n          for (arrayEntry in topValue) {\n            result.push(getValues(arrayEntry, true));\n          }\n        } else {\n          result.push(getValues(topValue));\n        }\n      }\n\n      return result.flat(Infinity);\n    };\n\n    switch (param) {\n      case 'keys':\n        return getKeys(obj, false);\n\n      case 'values':\n        return getValues(obj, false);\n\n      default:\n        return;\n    }\n  }\n\n  return React.createElement(MaterialTable, {\n    columns: formatColumns(columns),\n    icons: tableIcons,\n    data: formatRows(data),\n    title: \"Blotter\",\n    options: {\n      filtering: true,\n      exportButton: true,\n      headerStyle: {\n        backgroundColor: '#039dfc'\n      },\n      cellStyle: {\n        fontSize: 8\n      }\n    }\n  });\n};\n\nexport default Table;","map":{"version":3,"sources":["C:\\Users\\liams\\synswap-web-react\\synswap\\components\\Table.js"],"names":["React","useState","useEffect","MaterialTable","Paper","forwardRef","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","Table","props","data","columns","rows","pullStuff","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","formatColumns","length","width","doText","text","newText","replace","charAt","toUpperCase","slice","result","i","column","object","title","field","push","formatRows","row","temp","temp2","generateObj","array","values","obj","param","getKeys","Error","topKeys","topKey","topEntry","arrayEntry","flat","Infinity","getValues","topValues","topValue","filtering","exportButton","headerStyle","backgroundColor","cellStyle","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Paper } from '@material-ui/core';\r\nimport { forwardRef } from 'react';\r\n\r\nimport {\r\n    AddBox, ArrowUpward,\r\n    Check, ChevronLeft,\r\n    ChevronRight, Clear,\r\n    DeleteOutline, Edit,\r\n    FilterList, FirstPage,\r\n    LastPage, Remove,\r\n    SaveAlt, Search,\r\n    ViewColumn\r\n} from \"@material-ui/icons\";\r\n\r\nconst Table = props => {\r\n    const { data } = props;\r\n    const columns = (!data.rows) ? pullStuff(data[0], 'keys') : data.columns;\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    function formatColumns(columns) {\r\n        if (columns.length === 0 || columns[0].width) {\r\n            return columns;\r\n        }\r\n        const doText = text => {\r\n            const newText = text.replace(/([A-Z]+)/g, \" $1\");\r\n            return newText.charAt(0).toUpperCase() + newText.slice(1)\r\n        };\r\n        let result = [];\r\n        for (let i = 0; i < columns.length; i++) {\r\n            const column = columns[i];\r\n            const object = {\r\n                title: doText(column),\r\n                field: column,\r\n            };\r\n            result.push(object);\r\n        }\r\n        return result;\r\n    }\r\n    function formatRows(rows) {\r\n        let result = [];\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let temp = pullStuff(row, 'values');\r\n            let temp2 = generateObj(columns, temp);\r\n            result.push(temp2);\r\n        }\r\n        return result;\r\n    }\r\n    function generateObj(array, values) {\r\n        let result = {};\r\n        for (let i = 0; i < array.length; i++) {\r\n            result = {...result, [array[i]]: values[i]};\r\n        }\r\n        return result;\r\n    }\r\n    function pullStuff(obj, param) {\r\n        const getKeys = obj => {\r\n            if (typeof obj !== 'object') {\r\n                throw new Error('Invalid JSON');\r\n            }\r\n            let result = [];\r\n            const topKeys = Object.keys(obj);\r\n            for (let i = 0; i < topKeys.length; i++) {\r\n                let topKey = topKeys[i];\r\n                let topEntry = obj[topKey];\r\n                if (typeof topEntry === 'string' || typeof topEntry === 'number') {\r\n                    result.push(topKey);\r\n                }\r\n                else if (Array.isArray(topEntry)) {\r\n                    let arrayEntry;\r\n                    for (arrayEntry in topEntry) {\r\n                        result.push(getKeys(arrayEntry, true));\r\n                    }\r\n                }\r\n                else {\r\n                    result.push(getKeys(topEntry))\r\n                }\r\n            }\r\n            return result.flat(Infinity);\r\n        };\r\n\r\n        const getValues = obj => {\r\n            if (typeof obj !== 'object') {\r\n                throw new Error('Invalid JSON');\r\n            }\r\n            let result = [];\r\n            let topValues = Object.values(obj);\r\n            for (let i = 0; i < topValues.length; i++) {\r\n                let topValue = topValues[i];\r\n                if (typeof topValue === 'string' || typeof topValue === 'number') {\r\n                    result.push(topValue);\r\n                }\r\n                else if (Array.isArray(topValue)) {\r\n                    let arrayEntry;\r\n                    for (arrayEntry in topValue) {\r\n                        result.push(getValues(arrayEntry, true));\r\n                    }\r\n                }\r\n                else {\r\n                    result.push(getValues(topValue))\r\n                }\r\n            }\r\n            return result.flat(Infinity);\r\n        };\r\n        switch (param) {\r\n            case 'keys':\r\n                return getKeys(obj, false);\r\n            case 'values':\r\n                return getValues(obj, false);\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MaterialTable\r\n            columns={ formatColumns(columns) }\r\n            icons={ tableIcons }\r\n            data={ formatRows(data) }\r\n            title=\"Blotter\"\r\n            options={{\r\n                filtering: true,\r\n                exportButton: true,\r\n                headerStyle: {\r\n                    backgroundColor: '#039dfc'\r\n                },\r\n                cellStyle: {\r\n                    fontSize: 8\r\n                }\r\n            }}\r\n        />\r\n    )\r\n};\r\n\r\nexport default Table;\r\n\r\n"]},"metadata":{},"sourceType":"module"}