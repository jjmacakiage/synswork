{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Button, Card, Grid, IconButton, makeStyles, TextField } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    textField: {\n      marginLeft: theme.spacing(1)\n    },\n    card: {\n      padding: 30\n    }\n  };\n});\nexport default function CustomiseFields(props) {\n  var classes = useStyles();\n\n  var _useState = useState(['Field']),\n      _useState2 = _slicedToArray(_useState, 2),\n      newFields = _useState2[0],\n      fieldConcat = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      field = _useState4[0],\n      fieldName = _useState4[1];\n\n  function handleAdd() {\n    if (field.length !== 0) {\n      var result = _toConsumableArray(newFields);\n\n      result.push(field);\n      fieldConcat(result);\n      fieldName('');\n    }\n  }\n\n  function deleteField(i) {\n    var remainingFields = newFields.filter(function (value, index) {\n      return index !== i;\n    });\n    fieldConcat(remainingFields);\n  }\n\n  var addFields = props.addFields;\n\n  function saveChanges() {\n    var changes = newFields.filter(function (value, index) {\n      return index !== 0;\n    });\n    addFields(changes);\n    fieldConcat([]);\n  }\n\n  function handleChange(e) {\n    fieldName(e.target.value);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(\"div\", {\n    className: classes.card\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(TextField, {\n    id: \"add-field\",\n    label: \"Add Field\",\n    value: field,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    margin: \"normal\",\n    variant: \"outlined\"\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, React.createElement(Button, {\n    onClick: handleAdd,\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"Add Field\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6\n  }, newFields.map(function (newField, index) {\n    return index % 2 === 0 ? React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      key: index\n    }, React.createElement(TextField, {\n      disabled: true,\n      key: index,\n      id: newField.replace(/ /g, \"-\"),\n      label: newField,\n      className: classes.textField,\n      value: newField,\n      margin: \"normal\",\n      variant: \"outlined\"\n    }), index !== 0 ? React.createElement(IconButton, {\n      \"aria-label\": \"Delete\",\n      onClick: function onClick() {\n        return deleteField(index);\n      }\n    }, React.createElement(DeleteIcon, null)) : null) : null;\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6\n  }, newFields.map(function (newField, index) {\n    return index % 2 !== 0 ? React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      key: index\n    }, React.createElement(TextField, {\n      disabled: true,\n      id: newField.replace(/ /g, \"-\"),\n      label: newField,\n      className: classes.textField,\n      value: newField,\n      margin: \"normal\",\n      variant: \"outlined\"\n    }), index !== 0 ? React.createElement(IconButton, {\n      \"aria-label\": \"Delete\",\n      onClick: function onClick() {\n        return deleteField(index);\n      }\n    }, React.createElement(DeleteIcon, null)) : null) : null;\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6\n  }, React.createElement(Button, {\n    onClick: saveChanges,\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"Save\")))))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/components/newtrade/CustomiseFields.js"],"names":["React","useState","Button","Card","Grid","IconButton","makeStyles","TextField","DeleteIcon","useStyles","theme","root","flexGrow","textField","marginLeft","spacing","card","padding","CustomiseFields","props","classes","newFields","fieldConcat","field","fieldName","handleAdd","length","result","push","deleteField","i","remainingFields","filter","value","index","addFields","saveChanges","changes","handleChange","e","target","map","newField","replace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Card, Grid, IconButton, makeStyles, TextField } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    textField: {\n        marginLeft: theme.spacing(1)\n    },\n    card: {\n        padding: 30,\n    },\n}));\n\nexport default function CustomiseFields(props) {\n    const classes = useStyles();\n    const [newFields, fieldConcat] = useState(['Field']);\n    const [field, fieldName] = useState('');\n\n    function handleAdd() {\n        if (field.length !== 0) {\n            const result = [...newFields];\n            result.push(field);\n            fieldConcat(result);\n            fieldName('');\n        }\n    }\n\n    function deleteField(i) {\n        const remainingFields = newFields.filter((value, index) => {\n            return index !== i;\n        });\n        fieldConcat(remainingFields);\n    }\n\n    const { addFields } = props;\n    function saveChanges() {\n        const changes = newFields.filter((value, index) => {\n            return index !== 0;\n        });\n        addFields(changes);\n        fieldConcat([]);\n    }\n    function handleChange(e) {\n        fieldName(e.target.value);\n    }\n    return (\n        <div className={ classes.root }>\n            <div className={ classes.card }>\n                <Grid container spacing={ 2 }>\n                    <Grid item xs={ 12 }>\n                        <Grid container spacing={ 2 }>\n                            <Grid item xs={ 12 }>\n                                <TextField\n                                    id=\"add-field\"\n                                    label=\"Add Field\"\n                                    value={ field }\n                                    onChange={ e => handleChange(e) }\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                            <Grid item xs={ 3 }>\n                                <Button\n                                    onClick={ handleAdd }\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    Add Field\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={ 12 }>\n                        <Grid container spacing={ 2 }>\n                            <Grid item xs={ 6 }>\n                                {\n                                    newFields.map((newField, index) => {\n                                        return (\n                                            (index % 2 === 0) ?\n                                                (\n                                                    <Grid container spacing={ 2 } key={ index }>\n                                                        <TextField\n                                                            disabled\n                                                            key={ index }\n                                                            id={ newField.replace(/ /g,\"-\") }\n                                                            label={ newField }\n                                                            className={ classes.textField }\n                                                            value={ newField }\n                                                            margin=\"normal\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                        {\n                                                            index !== 0 ?\n                                                                (\n                                                                    <IconButton aria-label=\"Delete\" onClick={ () => deleteField(index) }>\n                                                                        <DeleteIcon />\n                                                                    </IconButton>\n                                                                ) : null\n\n                                                        }\n                                                    </Grid>\n                                                ) : null\n                                        )\n                                    })\n                                }\n                            </Grid>\n                            <Grid item xs={ 6 }>\n                                {\n                                    newFields.map((newField, index) => {\n                                        return (\n                                            (index % 2 !== 0) ?\n                                                (\n                                                    <Grid container spacing={ 2 } key={ index }>\n                                                        <TextField\n                                                            disabled\n                                                            id={ newField.replace(/ /g,\"-\") }\n                                                            label={ newField }\n                                                            className={ classes.textField }\n                                                            value={ newField }\n                                                            margin=\"normal\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                        {\n                                                            index !== 0 ?\n                                                                (\n                                                                    <IconButton aria-label=\"Delete\" onClick={ () => deleteField(index) }>\n                                                                        <DeleteIcon />\n                                                                    </IconButton>\n                                                                ) : null\n\n                                                        }\n                                                    </Grid>\n                                            ) : null\n                                        )\n                                    })\n                                }\n                            </Grid>\n                            <Grid item xs={ 6 }>\n                                <Button\n                                    onClick={ saveChanges }\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    Save\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}