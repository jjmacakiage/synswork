{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Grid, makeStyles, Tabs, Tab } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport NewTradeForm from '../components/newtrade/NewTradeForm';\nimport CustomiseFields from '../components/newtrade/CustomiseFields';\nimport { createRows } from \"../utils/tradehelpers\";\nimport { TabContainer } from \"../utils/tradehelpers\";\n/**\n * @constant useStyles\n * hook used for styling\n */\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper\n    },\n    customise: {\n      marginTop: 20\n    }\n  };\n});\n/**\n * @class NewTrade\n * Contains the forms for creating a NewTrade\n * Dependencies used:\n * @material-ui for Grid, makeStyles, Tabs, Tab, Typography\n * Custom Components used:\n * @class NewTradeForm\n * @class CustomiseFields\n */\n\nexport default function NewTrade(props) {\n  var classes = useStyles();\n  var FIELDS = useSelector(function (state) {\n    return state.NewTradeReducer.NEW_TRADE_FIELDS;\n  });\n  var trades_length = useSelector(function (state) {\n    return state.TradeReducer.tradeStates;\n  }).length;\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n  /**\n   * @function handleSubmit\n   * @param fields\n   * takes fields passed in from NewTradeForm and appends to 'tradeStates' piece of state\n   */\n\n\n  function handleSubmit(fields) {\n    var nameRemoved = fields.filter(function (value, index) {\n      return index !== fields.length - 1;\n    });\n    var payload = {\n      id: trades_length,\n      value: nameRemoved\n    };\n    dispatch({\n      type: 'NEW_TRADE',\n      payload: payload\n    });\n    var columns = ['Field', 'Value'];\n    props.addNewTrade(fields[fields.length - 1], columns, createRows(nameRemoved, FIELDS));\n  }\n  /**\n   * @function addFields\n   * @param addFields\n   * takes the custom fields created in CustomiseFields component and appends to NEW_TRADE_FIELDS piece of state\n   */\n\n\n  function addFields(addFields) {\n    dispatch({\n      type: 'APPEND_FIELDS',\n      payload: addFields\n    });\n  }\n  /**\n   * @function tabChange\n   * @param e\n   * @param newValue\n   * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n   */\n\n\n  function tabChange(e, newValue) {\n    setValue(newValue);\n  }\n  /**\n   * @return\n   * @type Grid\n   * @type TabContainer\n   * @type Tab\n   * @type Tabs\n   * @type NewTradeForm\n   * @type CustomiseFields\n   */\n\n\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(\"div\", null, React.createElement(Tabs, {\n    value: value,\n    onChange: tabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true\n  }, React.createElement(Tab, {\n    label: \"Edit\"\n  }), React.createElement(Tab, {\n    label: \"Autofill\"\n  })), value === 0 && React.createElement(TabContainer, null, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6\n  }, React.createElement(NewTradeForm, {\n    fieldList: FIELDS,\n    onSubmit: handleSubmit.bind(this),\n    isDisabled: false\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6\n  }, React.createElement(CustomiseFields, {\n    className: classes.customise,\n    addFields: addFields.bind(this)\n  })))), value === 1 && React.createElement(TabContainer, null, React.createElement(\"h1\", null, \" Stuff \"))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/pages/NewTrade.js"],"names":["React","useState","Grid","makeStyles","Tabs","Tab","useSelector","useDispatch","NewTradeForm","CustomiseFields","createRows","TabContainer","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","customise","marginTop","NewTrade","props","classes","FIELDS","state","NewTradeReducer","NEW_TRADE_FIELDS","trades_length","TradeReducer","tradeStates","length","dispatch","value","setValue","handleSubmit","fields","nameRemoved","filter","index","payload","id","type","columns","addNewTrade","addFields","tabChange","e","newValue","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid, makeStyles, Tabs, Tab } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport NewTradeForm from '../components/newtrade/NewTradeForm';\nimport CustomiseFields from '../components/newtrade/CustomiseFields';\nimport { createRows } from \"../utils/tradehelpers\";\nimport { TabContainer } from \"../utils/tradehelpers\";\n\n/**\n * @constant useStyles\n * hook used for styling\n */\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    customise: {\n        marginTop: 20\n    }\n}));\n\n/**\n * @class NewTrade\n * Contains the forms for creating a NewTrade\n * Dependencies used:\n * @material-ui for Grid, makeStyles, Tabs, Tab, Typography\n * Custom Components used:\n * @class NewTradeForm\n * @class CustomiseFields\n */\n\nexport default function NewTrade(props) {\n    const classes = useStyles();\n    const FIELDS = useSelector(state => state.NewTradeReducer.NEW_TRADE_FIELDS);\n    const trades_length = useSelector(state => state.TradeReducer.tradeStates).length;\n    const dispatch = useDispatch();\n    const [value, setValue] = useState(0);\n\n    /**\n     * @function handleSubmit\n     * @param fields\n     * takes fields passed in from NewTradeForm and appends to 'tradeStates' piece of state\n     */\n    function handleSubmit(fields) {\n        const nameRemoved = fields.filter((value, index) => {\n            return index !== fields.length - 1;\n        });\n        const payload = { id: trades_length, value: nameRemoved };\n        dispatch({ type: 'NEW_TRADE', payload: payload });\n        const columns = ['Field', 'Value'];\n        props.addNewTrade(fields[fields.length - 1], columns, createRows(nameRemoved, FIELDS));\n    }\n\n\n    /**\n     * @function addFields\n     * @param addFields\n     * takes the custom fields created in CustomiseFields component and appends to NEW_TRADE_FIELDS piece of state\n     */\n    function addFields(addFields) {\n        dispatch({ type: 'APPEND_FIELDS', payload: addFields });\n    }\n\n    /**\n     * @function tabChange\n     * @param e\n     * @param newValue\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n     */\n\n    function tabChange(e, newValue) {\n        setValue(newValue);\n    }\n\n    /**\n     * @return\n     * @type Grid\n     * @type TabContainer\n     * @type Tab\n     * @type Tabs\n     * @type NewTradeForm\n     * @type CustomiseFields\n     */\n\n    return (\n        <div className={ classes.root }>\n            <div>\n                <Tabs\n                    value={ value }\n                    onChange={ tabChange }\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab label=\"Edit\" />\n                    <Tab label=\"Autofill\" />\n                </Tabs>\n\n                {\n                    value === 0 &&\n                    <TabContainer>\n                        <Grid container spacing={ 2 }>\n                            <Grid item xs={ 6 }>\n                                <NewTradeForm fieldList={ FIELDS } onSubmit={ handleSubmit.bind(this) } isDisabled={ false }/>\n                            </Grid>\n                            <Grid item xs={ 6 } >\n                                <CustomiseFields className={ classes.customise } addFields={ addFields.bind(this) }/>\n                            </Grid>\n                        </Grid>\n                    </TabContainer>\n                }\n\n                {\n                    value === 1\n                    &&\n                    <TabContainer>\n                        <h1> Stuff </h1>\n                    </TabContainer>\n                }\n            </div>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}