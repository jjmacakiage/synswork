{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid } from '@material-ui/core';\nimport Tabs, { Tab } from \"react-awesome-tabs\";\nimport \"../resources/styles/react-awesome-tabs.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport nextCookie from 'next-cookies';\nimport Router from 'next/router';\nimport Header from \"../components/main/Header\";\nimport Home from './Home';\nimport NewTrade from './NewTrade';\nimport Trade from './Trade';\nimport Blotter from './Blotter';\nimport FileUpload from './FileUpload';\nimport { error } from \"next/dist/build/output/log\";\n/**\r\n * @class Main\r\n * @constructor\r\n * Contains all the navigation functions, including the <Tabs /> and their functions (dispatched to reducers/TabReducer)\r\n * Dependencies used:\r\n * @react-awesome-tabs for the <Tabs> and <Tab> components, react-awesome-tabs.scss for styling (comes with module)\r\n * @material-ui for <Grid />\r\n * @react-redux for useDispatch and useSelector\r\n * Custom Components used:\r\n * @class NewTradeContent - New Trade page\r\n * @class Home - Home page\r\n * @class Trade - Trade page\r\n * @class Header - Header\r\n */\n\nvar Main = function Main() {\n  /**\r\n   * @constant activeTab\r\n   * @type {object}\r\n   * a number that represents the activeTab piece of state\r\n   */\n  var activeTab = useSelector(function (state) {\n    return state.TabReducer.activeTab;\n  });\n  /**\r\n   * @var tabs\r\n   * @type {object}\r\n   * an array of objects representing the tabs, with each object in the format { title, index, component }\r\n   */\n\n  var tabs = useSelector(function (state) {\n    return state.TabReducer.tabs;\n  });\n  /**\r\n   * @constant dispatch\r\n   * @type {function}\r\n   * gives access to dispatch function from Redux store\r\n   */\n\n  var dispatch = useDispatch();\n  /**\r\n   * @constant tradeProps\r\n   * receives data from addNewTrade function and updates the most recent TradeProps\r\n   */\n\n  var _useState = useState({\n    data: {\n      columns: [],\n      rows: []\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      tradeProps = _useState2[0],\n      changeProps = _useState2[1];\n  /**\r\n   * @constant MAIN_TABS\r\n   * @type {array}\r\n   * array of objects that contains a 'key' and a 'component' that is mapped to the 'component' attribute from a tab object in....\r\n   * ....matchLink\r\n   */\n\n\n  var MAIN_TABS = [{\n    key: 'Home',\n    component: Home({\n      onClick: handleClick.bind(_this)\n    })\n  }, {\n    key: 'NewTrade',\n    component: NewTrade({\n      onClick: handleClick\n    })\n  }, {\n    key: 'Trade',\n    component: Trade(tradeProps)\n  }, {\n    key: 'Blotter',\n    component: Blotter()\n  }, {\n    key: 'FileNewTrade',\n    component: FileUpload()\n  }];\n  /**\r\n   * @constant openTabs\r\n   * @type {array}\r\n   * used in handleClick method to redirect to a tab if it is already open\r\n   */\n\n  var _useState3 = useState(['Home']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openTabs = _useState4[0],\n      changeTabs = _useState4[1];\n  /**\r\n   * @function matchLink\r\n   * @type string\r\n   * @param link\r\n   * helper function that receives a link {string} from an option in the <HomePane />'s (child components of <Home />) and\r\n   * matches it to a 'component' in the MAIN_TABS array via the 'key'\r\n   * @return number\r\n   */\n\n\n  function matchLink(link) {\n    for (var i = 0; i < MAIN_TABS.length; i++) {\n      var data = MAIN_TABS[i];\n\n      if (link === data.key) {\n        return i;\n      }\n    }\n\n    return new error('Component Not Found');\n  }\n  /**\r\n   * @function handleTabSwitch\r\n   * @type number\r\n   * @type dispatch\r\n   * @param active\r\n   * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\r\n   */\n\n\n  function handleTabSwitch(active) {\n    dispatch({\n      type: 'SWITCH_TAB',\n      payload: active\n    });\n  }\n  /**\r\n   * @function handleTabPositionChange\r\n   * @type dispatch\r\n   * @param a\r\n   * @param b\r\n   * eventHandler helper function that takes the two tabs to be switched around, switches their indices,...\r\n   * ...and changes the new active tab\r\n   */\n\n\n  function handleTabPositionChange(a, b) {\n    var c = tabs[a];\n    tabs[a] = tabs[b];\n    tabs[b] = c;\n\n    if (activeTab === a) {\n      dispatch({\n        type: 'SWITCH_TAB',\n        activeTab: b\n      });\n    } else if (activeTab === b) {\n      dispatch({\n        type: 'SWITCH_TAB',\n        activeTab: a\n      });\n    }\n  }\n  /**\r\n   * @function handleTabClose\r\n   * @param index\r\n   * eventHandler helper function that takes the closed tab and pops it from 'tabs' piece of state\r\n   */\n\n\n  function handleTabClose(index) {\n    dispatch({\n      type: 'REMOVE_TAB',\n      payload: index\n    });\n    var newTabs = openTabs.filter(function (value, i) {\n      return i !== index;\n    });\n    changeTabs(newTabs);\n  }\n  /**\r\n   * @function handleClick\r\n   * @param link\r\n   * eventHandler helper function that takes the link as a param and returns a component number from matchLink()\r\n   * if the tab is already open (!indexOf(link) === -1) then switch to that tab with handleTabSwitch\r\n   * else dispatch a new tab object containing a title, index, and component keys to be appended to 'tabs'...\r\n   * ...piece of state\r\n   */\n\n\n  function handleClick(link) {\n    var component = matchLink(link);\n\n    if (openTabs.indexOf(link) === -1) {\n      var newTabContent = {\n        title: link.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \"),\n        index: tabs.length,\n        component: component\n      };\n      dispatch({\n        type: 'ADD_TAB',\n        payload: newTabContent\n      });\n\n      var newOpen = _toConsumableArray(openTabs);\n\n      newOpen.push(link);\n      changeTabs(newOpen);\n    } else {\n      handleTabSwitch(openTabs.indexOf(link));\n    }\n  }\n  /**\r\n   * @return\r\n   * @type Grid\r\n   * @type Header\r\n   * @type Tabs\r\n   * @type Tab\r\n   * @type MAIN_TABS[component]\r\n   */\n\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      maxWidth: 'min-content',\n      backgroundColor: '#f5f5f5'\n    }\n  }, React.createElement(Tabs, {\n    active: activeTab,\n    onTabSwitch: handleTabSwitch.bind(_this),\n    onTabPositionChange: handleTabPositionChange.bind(_this),\n    onTabClose: handleTabClose.bind(_this),\n    draggable: true,\n    showAdd: false\n  }, //maps 'tabs' piece of state to a <Tab> component, changes when 'tabs' changes\n  tabs.map(function (value, index) {\n    return React.createElement(Tab, {\n      key: value.title + index,\n      title: value.title,\n      showClose: index !== 0\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 4\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12\n    }, React.createElement(Header, null)), React.createElement(Grid, {\n      item: true,\n      xs: 12\n    }, MAIN_TABS[value.component].component)));\n  }))));\n};\n/**\r\n * @function getInitialProps\r\n * @param ctx\r\n * checks if user is already logged in before Main component is mounted, if not redirected to  Login page\r\n * @return {Promise<boolean|any|Promise<boolean>>}\r\n */\n\n/*Main.getInitialProps = async ctx => {\r\n    const { token } = nextCookie(ctx);\r\n    const apiUrl = getHost(ctx.req) + '/api/profile';\r\n\r\n    const redirectOnError = () =>\r\n        typeof window !== 'undefined'\r\n            ? Router.push('/Login')\r\n            : ctx.res.writeHead(302, { Location: '/Login' }).end();\r\n\r\n    try {\r\n        const response = await fetch(apiUrl, {\r\n            credentials: 'include',\r\n            headers: {\r\n                Authorization: JSON.stringify({ token })\r\n            }\r\n        });\r\n\r\n        if (response.ok) {\r\n            const js = await response.json()\r\n            console.log('js', js)\r\n            return js\r\n        } else {\r\n            // https://github.com/developit/unfetch#caveats\r\n            return await redirectOnError()\r\n        }\r\n    } catch (error) {\r\n        // Implementation or Network error\r\n        return redirectOnError()\r\n    }\r\n};\r\n\r\nexport default withAuthSync(Main);\r\n\r\n */\n\n\nexport default Main;","map":{"version":3,"sources":["C:\\Users\\liams\\synswap-web-react\\synswap\\pages\\Main.js"],"names":["React","useState","useEffect","Grid","Tabs","Tab","useDispatch","useSelector","nextCookie","Router","Header","Home","NewTrade","Trade","Blotter","FileUpload","error","Main","activeTab","state","TabReducer","tabs","dispatch","data","columns","rows","tradeProps","changeProps","MAIN_TABS","key","component","onClick","handleClick","bind","openTabs","changeTabs","matchLink","link","i","length","handleTabSwitch","active","type","payload","handleTabPositionChange","a","b","c","handleTabClose","index","newTabs","filter","value","indexOf","newTabContent","title","match","join","newOpen","push","maxWidth","backgroundColor","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport Tabs, {Tab} from \"react-awesome-tabs\";\r\nimport \"../resources/styles/react-awesome-tabs.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport nextCookie from 'next-cookies';\r\nimport Router from 'next/router';\r\n\r\nimport Header from \"../components/main/Header\";\r\nimport Home from './Home';\r\nimport NewTrade from './NewTrade';\r\nimport Trade from './Trade';\r\nimport Blotter from './Blotter';\r\nimport FileUpload from './FileUpload';\r\nimport {error} from \"next/dist/build/output/log\";\r\n\r\n\r\n/**\r\n * @class Main\r\n * @constructor\r\n * Contains all the navigation functions, including the <Tabs /> and their functions (dispatched to reducers/TabReducer)\r\n * Dependencies used:\r\n * @react-awesome-tabs for the <Tabs> and <Tab> components, react-awesome-tabs.scss for styling (comes with module)\r\n * @material-ui for <Grid />\r\n * @react-redux for useDispatch and useSelector\r\n * Custom Components used:\r\n * @class NewTradeContent - New Trade page\r\n * @class Home - Home page\r\n * @class Trade - Trade page\r\n * @class Header - Header\r\n */\r\nconst Main = () => {\r\n    /**\r\n     * @constant activeTab\r\n     * @type {object}\r\n     * a number that represents the activeTab piece of state\r\n     */\r\n    const activeTab = useSelector(state => state.TabReducer.activeTab);\r\n\r\n    /**\r\n     * @var tabs\r\n     * @type {object}\r\n     * an array of objects representing the tabs, with each object in the format { title, index, component }\r\n     */\r\n    const tabs = useSelector(state => state.TabReducer.tabs);\r\n\r\n    /**\r\n     * @constant dispatch\r\n     * @type {function}\r\n     * gives access to dispatch function from Redux store\r\n     */\r\n    const dispatch = useDispatch();\r\n\r\n    /**\r\n     * @constant tradeProps\r\n     * receives data from addNewTrade function and updates the most recent TradeProps\r\n     */\r\n    const [tradeProps, changeProps] = useState({ data: { columns: [], rows: [] }});\r\n\r\n    /**\r\n     * @constant MAIN_TABS\r\n     * @type {array}\r\n     * array of objects that contains a 'key' and a 'component' that is mapped to the 'component' attribute from a tab object in....\r\n     * ....matchLink\r\n     */\r\n    const MAIN_TABS= [\r\n        { key: 'Home', component: Home({ onClick: handleClick.bind(this) }) },\r\n        { key: 'NewTrade', component: NewTrade({ onClick : handleClick }) },\r\n        { key: 'Trade', component: Trade(tradeProps) },\r\n        { key: 'Blotter', component: Blotter() },\r\n        { key: 'FileNewTrade', component: FileUpload() }\r\n    ];\r\n\r\n    /**\r\n     * @constant openTabs\r\n     * @type {array}\r\n     * used in handleClick method to redirect to a tab if it is already open\r\n     */\r\n    const [openTabs, changeTabs] = useState(['Home']);\r\n\r\n    /**\r\n     * @function matchLink\r\n     * @type string\r\n     * @param link\r\n     * helper function that receives a link {string} from an option in the <HomePane />'s (child components of <Home />) and\r\n     * matches it to a 'component' in the MAIN_TABS array via the 'key'\r\n     * @return number\r\n     */\r\n    function matchLink(link) {\r\n        for (let i = 0; i < MAIN_TABS.length; i++) {\r\n            const data = MAIN_TABS[i];\r\n            if (link === data.key) {\r\n                return i;\r\n            }\r\n        }\r\n        return new error('Component Not Found');\r\n    }\r\n\r\n    /**\r\n     * @function handleTabSwitch\r\n     * @type number\r\n     * @type dispatch\r\n     * @param active\r\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\r\n     */\r\n    function handleTabSwitch(active) {\r\n        dispatch({ type: 'SWITCH_TAB', payload: active});\r\n    }\r\n\r\n    /**\r\n     * @function handleTabPositionChange\r\n     * @type dispatch\r\n     * @param a\r\n     * @param b\r\n     * eventHandler helper function that takes the two tabs to be switched around, switches their indices,...\r\n     * ...and changes the new active tab\r\n     */\r\n    function handleTabPositionChange(a, b) {\r\n        let c = tabs[a];\r\n        tabs[a] = tabs[b];\r\n        tabs[b] = c;\r\n\r\n        if(activeTab === a) {\r\n            dispatch({ type: 'SWITCH_TAB', activeTab: b });\r\n        }else if(activeTab === b) {\r\n            dispatch({ type: 'SWITCH_TAB', activeTab: a });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function handleTabClose\r\n     * @param index\r\n     * eventHandler helper function that takes the closed tab and pops it from 'tabs' piece of state\r\n     */\r\n    function handleTabClose(index) {\r\n        dispatch({ type: 'REMOVE_TAB', payload: index });\r\n        const newTabs = openTabs.filter((value, i) => {\r\n            return i !== index;\r\n        });\r\n        changeTabs(newTabs)\r\n    }\r\n\r\n    /**\r\n     * @function handleClick\r\n     * @param link\r\n     * eventHandler helper function that takes the link as a param and returns a component number from matchLink()\r\n     * if the tab is already open (!indexOf(link) === -1) then switch to that tab with handleTabSwitch\r\n     * else dispatch a new tab object containing a title, index, and component keys to be appended to 'tabs'...\r\n     * ...piece of state\r\n     */\r\n    function handleClick(link) {\r\n        let component = matchLink(link);\r\n        if (openTabs.indexOf(link) === -1) {\r\n            let newTabContent = {\r\n                title: link.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \"),\r\n                index: tabs.length,\r\n                component: component\r\n            };\r\n            dispatch({type: 'ADD_TAB', payload: newTabContent});\r\n            const newOpen = [...openTabs];\r\n            newOpen.push(link);\r\n            changeTabs(newOpen);\r\n        }\r\n        else {\r\n            handleTabSwitch(openTabs.indexOf(link));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return\r\n     * @type Grid\r\n     * @type Header\r\n     * @type Tabs\r\n     * @type Tab\r\n     * @type MAIN_TABS[component]\r\n     */\r\n    return (\r\n        <Grid container spacing={ 2 }>\r\n            <Grid item xs={ 12 } style={{ maxWidth: 'min-content', backgroundColor: '#f5f5f5'}}>\r\n                <Tabs\r\n                    active={ activeTab }\r\n                    onTabSwitch={ handleTabSwitch.bind(this) }\r\n                    onTabPositionChange={ handleTabPositionChange.bind(this) }\r\n                    onTabClose={ handleTabClose.bind(this) }\r\n                    draggable={ true }\r\n                    showAdd={ false }\r\n                >\r\n                    {\r\n                        //maps 'tabs' piece of state to a <Tab> component, changes when 'tabs' changes\r\n                        tabs.map((value, index) => {\r\n                            return (\r\n                                <Tab\r\n                                    key={ value.title + index }\r\n                                    title={value.title}\r\n                                    showClose={ index !== 0 }\r\n                                >\r\n                                    <Grid container spacing={ 4 }>\r\n                                        <Grid item xs={ 12 }>\r\n                                            <Header />\r\n                                        </Grid>\r\n                                        <Grid item xs={ 12 }>\r\n                                            { MAIN_TABS[ value.component ].component }\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Tab>\r\n                            );\r\n                        })\r\n                    }\r\n                </Tabs>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n/**\r\n * @function getInitialProps\r\n * @param ctx\r\n * checks if user is already logged in before Main component is mounted, if not redirected to  Login page\r\n * @return {Promise<boolean|any|Promise<boolean>>}\r\n */\r\n\r\n/*Main.getInitialProps = async ctx => {\r\n    const { token } = nextCookie(ctx);\r\n    const apiUrl = getHost(ctx.req) + '/api/profile';\r\n\r\n    const redirectOnError = () =>\r\n        typeof window !== 'undefined'\r\n            ? Router.push('/Login')\r\n            : ctx.res.writeHead(302, { Location: '/Login' }).end();\r\n\r\n    try {\r\n        const response = await fetch(apiUrl, {\r\n            credentials: 'include',\r\n            headers: {\r\n                Authorization: JSON.stringify({ token })\r\n            }\r\n        });\r\n\r\n        if (response.ok) {\r\n            const js = await response.json()\r\n            console.log('js', js)\r\n            return js\r\n        } else {\r\n            // https://github.com/developit/unfetch#caveats\r\n            return await redirectOnError()\r\n        }\r\n    } catch (error) {\r\n        // Implementation or Network error\r\n        return redirectOnError()\r\n    }\r\n};\r\n\r\nexport default withAuthSync(Main);\r\n\r\n */\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}