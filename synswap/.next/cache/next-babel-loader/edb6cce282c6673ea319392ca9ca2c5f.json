{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nimport React, { useState } from \"react\";\nimport { Grid } from '@material-ui/core';\nimport Tabs, { Tab } from \"react-awesome-tabs\";\nimport \"../resources/styles/react-awesome-tabs.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport nextCookie from 'next-cookies';\nimport Header from \"../components/main/Header\";\nimport Home from './Home';\nimport NewTrade from './NewTrade';\nimport Trade from './Trade';\nimport Blotter from './Blotter';\nimport { error } from \"next/dist/build/output/log\";\nimport { withAuthSync } from \"../utils/Auth/auth\";\nimport getHost from '../utils/Auth/get-host';\n/**\n * @class Main\n * @constructor\n * Contains all the navigation functions, including the <Tabs /> and their functions (dispatched to reducers/TabReducer)\n * Dependencies used:\n * @react-awesome-tabs for the <Tabs> and <Tab> components, react-awesome-tabs.scss for styling (comes with module)\n * @material-ui for <Grid />\n * @react-redux for useDispatch and useSelector\n * Custom Components used:\n * @class NewTrade - New Trade page\n * @class Home - Home page\n * @class Trade - Trade page\n * @class Header - Header\n */\n\nvar Main = function Main() {\n  /**\n   * @constant activeTab\n   * @type {object}\n   * a number that represents the activeTab piece of state\n   */\n  var activeTab = useSelector(function (state) {\n    return state.TabReducer.activeTab;\n  });\n  /**\n   * @var tabs\n   * @type {object}\n   * an array of objects representing the tabs, with each object in the format { title, index, component }\n   */\n\n  var tabs = useSelector(function (state) {\n    return state.TabReducer.tabs;\n  });\n  /**\n   * @constant dispatch\n   * @type {function}\n   * gives access to dispatch function from Redux store\n   */\n\n  var dispatch = useDispatch();\n  /**\n   * @constant tradeProps\n   * receives data from addNewTrade function and updates the most recent TradeProps\n   */\n\n  var _useState = useState({\n    data: {\n      columns: [],\n      rows: []\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      tradeProps = _useState2[0],\n      changeProps = _useState2[1];\n  /**\n   * @constant showTextField\n   * receives data from handleClick function and toggles the Trade ID popup\n   */\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showTradeSearch = _useState4[0],\n      toggleShow = _useState4[1];\n  /**\n   * @constant MAIN_TABS\n   * @type {array}\n   * array of objects that contains a 'key' and a 'component' that is mapped to the 'component' attribute from a tab object in\n   * @function matchLink\n   */\n\n\n  var MAIN_TABS = [{\n    key: 'Home',\n    component: React.createElement(Home, {\n      onClick: handleClick.bind(_this),\n      showTextField: showTradeSearch\n    })\n  }, {\n    key: 'NewTrade',\n    component: React.createElement(NewTrade, {\n      addNewTrade: addNewTrade\n    })\n  }, {\n    key: 'Trade',\n    component: Trade(tradeProps)\n  }, {\n    key: 'Blotter',\n    component: React.createElement(Blotter, null)\n  }];\n  /**\n   * @function matchLink\n   * @type string\n   * @param link\n   * helper function that receives a link {string} from an option in the <HomePane />'s (child components of <Home />) and\n   * matches it to a 'component' in the MAIN_TABS array via the 'key'\n   */\n\n  function matchLink(link) {\n    for (var i = 0; i < MAIN_TABS.length; i++) {\n      var data = MAIN_TABS[i];\n\n      if (link === data.key) {\n        return i;\n      }\n    }\n\n    return new error('Component Not Found');\n  }\n  /**\n   * @function handleTabSwitch\n   * @type dispatch\n   * @param active\n   * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n   */\n\n\n  function handleTabSwitch(active) {\n    dispatch({\n      type: 'SWITCH_TAB',\n      payload: active\n    });\n  }\n  /**\n   * @function handleTabPositionChange\n   * @type dispatch\n   * @param a\n   * @param b\n   * eventHandler helper function that takes the two tabs to be switched around, switches their indices,...\n   * ...and changes the new active tab\n   */\n\n\n  function handleTabPositionChange(a, b) {\n    var c = tabs[a];\n    tabs[a] = tabs[b];\n    tabs[b] = c;\n\n    if (activeTab === a) {\n      dispatch({\n        type: 'SWITCH_TAB',\n        activeTab: b\n      });\n    } else if (activeTab === b) {\n      dispatch({\n        type: 'SWITCH_TAB',\n        activeTab: a\n      });\n    }\n  }\n  /**\n   * @function handleTabClose\n   * @type dispatch\n   * @param index\n   * eventHandler helper function that takes the closed tab and pops it from 'tabs' piece of state\n   */\n\n\n  function handleTabClose(index) {\n    dispatch({\n      type: 'REMOVE_TAB',\n      payload: index\n    });\n  }\n  /**\n   * @function handleClick\n   * @param link\n   * eventHandler helper function that takes the link as a param and returns a component number from matchLink()...\n   * ...then dispatches a new tab object containing a title, index, and component keys to be appended to 'tabs'...\n   * ...piece of state\n   */\n\n\n  function handleClick(link) {\n    if (link !== 'TradeSearch') {\n      var component = matchLink(link);\n      var newTabContent = {\n        title: link,\n        index: tabs.length,\n        component: component\n      };\n      dispatch({\n        type: 'ADD_TAB',\n        payload: newTabContent\n      });\n    } else {\n      toggleShow(true);\n    }\n  }\n\n  function addNewTrade(name, fields, values) {\n    console.log([values]);\n    var newTradeContent = {\n      title: name,\n      index: tabs.length,\n      component: matchLink('Trade'),\n      fields: fields,\n      values: values\n    };\n    dispatch({\n      type: 'ADD_TAB',\n      payload: newTradeContent\n    });\n    changeProps({\n      data: {\n        columns: fields,\n        rows: values\n      }\n    });\n  }\n  /**\n   * @return\n   * @type Grid\n   * @type Header\n   * @type Tabs\n   * @type Tab\n   * @type MAIN_TABS[component]\n   */\n\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 0\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(Header, null)), React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(Tabs, {\n    active: activeTab,\n    onTabSwitch: handleTabSwitch.bind(_this),\n    onTabPositionChange: handleTabPositionChange.bind(_this),\n    onTabClose: handleTabClose.bind(_this),\n    draggable: true,\n    showAdd: false\n  }, //maps 'tabs' piece of state to a <Tab> component, changes when 'tabs' changes\n  tabs.map(function (value, index) {\n    return React.createElement(Tab, {\n      key: value.title + index,\n      title: value.title,\n      showClose: index !== 0\n    }, MAIN_TABS[value.component].component);\n  }))));\n};\n\nMain.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var _nextCookie, token, apiUrl, redirectOnError, response, js;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _nextCookie = nextCookie(ctx), token = _nextCookie.token;\n            apiUrl = getHost(ctx.req) + '/api/profile';\n\n            redirectOnError = function redirectOnError() {\n              return typeof window !== 'undefined' ? Router.push('/Login') : ctx.res.writeHead(302, {\n                Location: '/Login'\n              }).end();\n            };\n\n            _context.prev = 3;\n            _context.next = 6;\n            return fetch(apiUrl, {\n              credentials: 'include',\n              headers: {\n                Authorization: _JSON$stringify({\n                  token: token\n                })\n              }\n            });\n\n          case 6:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            js = _context.sent;\n            console.log('js', js);\n            return _context.abrupt(\"return\", js);\n\n          case 15:\n            _context.next = 17;\n            return redirectOnError();\n\n          case 17:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 18:\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", redirectOnError());\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 20]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default withAuthSync(Main);","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/pages/Main.js"],"names":["React","useState","Grid","Tabs","Tab","useDispatch","useSelector","Router","fetch","nextCookie","Header","Home","NewTrade","Trade","Blotter","error","withAuthSync","getHost","Main","activeTab","state","TabReducer","tabs","dispatch","data","columns","rows","tradeProps","changeProps","showTradeSearch","toggleShow","MAIN_TABS","key","component","handleClick","bind","addNewTrade","matchLink","link","i","length","handleTabSwitch","active","type","payload","handleTabPositionChange","a","b","c","handleTabClose","index","newTabContent","title","name","fields","values","console","log","newTradeContent","map","value","getInitialProps","ctx","token","apiUrl","req","redirectOnError","window","push","res","writeHead","Location","end","credentials","headers","Authorization","response","ok","json","js"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,IAAP,IAAcC,GAAd,QAAwB,oBAAxB;AACA,OAAO,6CAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,KAAR,QAAoB,4BAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA;;;;;;;;;;;;;;;AAcA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf;;;;;AAKA,MAAMC,SAAS,GAAGb,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAN,CAAiBF,SAArB;AAAA,GAAN,CAA7B;AAEA;;;;;;AAKA,MAAMG,IAAI,GAAGhB,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAN,CAAiBC,IAArB;AAAA,GAAN,CAAxB;AAEA;;;;;;AAKA,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA;;;;;AAtBe,kBA0BmBJ,QAAQ,CAAC;AAAEuB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,IAAI,EAAE;AAArB;AAAR,GAAD,CA1B3B;AAAA;AAAA,MA0BRC,UA1BQ;AAAA,MA0BIC,WA1BJ;AA4Bf;;;;;;AA5Be,mBAiCuB3B,QAAQ,CAAC,KAAD,CAjC/B;AAAA;AAAA,MAiCR4B,eAjCQ;AAAA,MAiCSC,UAjCT;AAkCf;;;;;;;;AAMA,MAAMC,SAAS,GAAG,CACd;AAAEC,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,SAAS,EAAE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAGC,WAAW,CAACC,IAAZ,CAAiB,KAAjB,CAAhB;AAAyC,MAAA,aAAa,EAAGN;AAAzD;AAA1B,GADc,EAEd;AAAEG,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,SAAS,EAAE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAGG;AAAxB;AAA9B,GAFc,EAGd;AAAEJ,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,SAAS,EAAEpB,KAAK,CAACc,UAAD;AAAhC,GAHc,EAId;AAAEK,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,SAAS,EAAE,oBAAC,OAAD;AAA7B,GAJc,CAAlB;AAOA;;;;;;;;AAOA,WAASI,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAMf,IAAI,GAAGO,SAAS,CAACQ,CAAD,CAAtB;;AACA,UAAID,IAAI,KAAKd,IAAI,CAACQ,GAAlB,EAAuB;AACnB,eAAOO,CAAP;AACH;AACJ;;AACD,WAAO,IAAIxB,KAAJ,CAAU,qBAAV,CAAP;AACH;AAGD;;;;;;;;AAMA,WAAS0B,eAAT,CAAyBC,MAAzB,EAAiC;AAC7BnB,IAAAA,QAAQ,CAAC;AAAEoB,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAR;AACH;AAED;;;;;;;;;;AAQA,WAASG,uBAAT,CAAiCC,CAAjC,EAAoCC,CAApC,EAAuC;AACnC,QAAIC,CAAC,GAAG1B,IAAI,CAACwB,CAAD,CAAZ;AACAxB,IAAAA,IAAI,CAACwB,CAAD,CAAJ,GAAUxB,IAAI,CAACyB,CAAD,CAAd;AACAzB,IAAAA,IAAI,CAACyB,CAAD,CAAJ,GAAUC,CAAV;;AAEA,QAAG7B,SAAS,KAAK2B,CAAjB,EAAoB;AAChBvB,MAAAA,QAAQ,CAAC;AAAEoB,QAAAA,IAAI,EAAE,YAAR;AAAsBxB,QAAAA,SAAS,EAAE4B;AAAjC,OAAD,CAAR;AACH,KAFD,MAEM,IAAG5B,SAAS,KAAK4B,CAAjB,EAAoB;AACtBxB,MAAAA,QAAQ,CAAC;AAAEoB,QAAAA,IAAI,EAAE,YAAR;AAAsBxB,QAAAA,SAAS,EAAE2B;AAAjC,OAAD,CAAR;AACH;AAEJ;AAED;;;;;;;;AAMA,WAASG,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B3B,IAAAA,QAAQ,CAAC;AAAEoB,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAEM;AAA/B,KAAD,CAAR;AACH;AAGD;;;;;;;;;AAQA,WAAShB,WAAT,CAAqBI,IAArB,EAA2B;AACvB,QAAIA,IAAI,KAAK,aAAb,EAA4B;AACxB,UAAIL,SAAS,GAAGI,SAAS,CAACC,IAAD,CAAzB;AACA,UAAMa,aAAa,GAAG;AAClBC,QAAAA,KAAK,EAAEd,IADW;AAElBY,QAAAA,KAAK,EAAE5B,IAAI,CAACkB,MAFM;AAGlBP,QAAAA,SAAS,EAAEA;AAHO,OAAtB;AAKAV,MAAAA,QAAQ,CAAC;AAACoB,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAEO;AAA3B,OAAD,CAAR;AACH,KARD,MASK;AACDrB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;;AAED,WAASM,WAAT,CAAqBiB,IAArB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,MAAD,CAAZ;AACA,QAAMG,eAAe,GAAG;AACpBN,MAAAA,KAAK,EAAEC,IADa;AAEpBH,MAAAA,KAAK,EAAE5B,IAAI,CAACkB,MAFQ;AAGpBP,MAAAA,SAAS,EAAEI,SAAS,CAAC,OAAD,CAHA;AAIpBiB,MAAAA,MAAM,EAAEA,MAJY;AAKpBC,MAAAA,MAAM,EAAEA;AALY,KAAxB;AAOAhC,IAAAA,QAAQ,CAAC;AAAEoB,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAEc;AAA5B,KAAD,CAAR;AACA9B,IAAAA,WAAW,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAE6B,MAAX;AAAmB5B,QAAAA,IAAI,EAAE6B;AAAzB;AAAR,KAAD,CAAX;AACH;AACD;;;;;;;;;;AASA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAG;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG;AAAhB,KACI,oBAAC,MAAD,OADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG;AAAhB,KACI,oBAAC,IAAD;AACI,IAAA,MAAM,EAAGpC,SADb;AAEI,IAAA,WAAW,EAAGsB,eAAe,CAACN,IAAhB,CAAqB,KAArB,CAFlB;AAGI,IAAA,mBAAmB,EAAGU,uBAAuB,CAACV,IAAxB,CAA6B,KAA7B,CAH1B;AAII,IAAA,UAAU,EAAGc,cAAc,CAACd,IAAf,CAAoB,KAApB,CAJjB;AAKI,IAAA,SAAS,EAAG,IALhB;AAMI,IAAA,OAAO,EAAG;AANd,KASQ;AACAb,EAAAA,IAAI,CAACqC,GAAL,CAAS,UAACC,KAAD,EAAQV,KAAR,EAAkB;AACvB,WACI,oBAAC,GAAD;AACI,MAAA,GAAG,EAAGU,KAAK,CAACR,KAAN,GAAcF,KADxB;AAEI,MAAA,KAAK,EAAGU,KAAK,CAACR,KAFlB;AAGI,MAAA,SAAS,EAAGF,KAAK,KAAK;AAH1B,OAKMnB,SAAS,CAAE6B,KAAK,CAAC3B,SAAR,CAAT,CAA6BA,SALnC,CADJ;AASH,GAVD,CAVR,CADJ,CAJJ,CADJ;AAgCH,CAvLD;;AAyLAf,IAAI,CAAC2C,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACDrD,UAAU,CAACqD,GAAD,CADT,EACXC,KADW,eACXA,KADW;AAEbC,YAAAA,MAFa,GAEJ/C,OAAO,CAAC6C,GAAG,CAACG,GAAL,CAAP,GAAmB,cAFf;;AAIbC,YAAAA,eAJa,GAIK,SAAlBA,eAAkB;AAAA,qBACpB,OAAOC,MAAP,KAAkB,WAAlB,GACM5D,MAAM,CAAC6D,IAAP,CAAY,QAAZ,CADN,GAEMN,GAAG,CAACO,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAvB,EAA+CC,GAA/C,EAHc;AAAA,aAJL;;AAAA;AAAA;AAAA,mBAUQhE,KAAK,CAACwD,MAAD,EAAS;AACjCS,cAAAA,WAAW,EAAE,SADoB;AAEjCC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,EAAE,gBAAe;AAAEZ,kBAAAA,KAAK,EAALA;AAAF,iBAAf;AADV;AAFwB,aAAT,CAVb;;AAAA;AAUTa,YAAAA,QAVS;;AAAA,iBAiBXA,QAAQ,CAACC,EAjBE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkBMD,QAAQ,CAACE,IAAT,EAlBN;;AAAA;AAkBLC,YAAAA,EAlBK;AAmBXvB,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBsB,EAAlB;AAnBW,6CAoBJA,EApBI;;AAAA;AAAA;AAAA,mBAuBEb,eAAe,EAvBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA2BRA,eAAe,EA3BP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AA+BA,eAAelD,YAAY,CAACE,IAAD,CAA3B","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid } from '@material-ui/core';\nimport Tabs, {Tab} from \"react-awesome-tabs\";\nimport \"../resources/styles/react-awesome-tabs.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport nextCookie from 'next-cookies'\n\n\nimport Header from \"../components/main/Header\";\nimport Home from './Home';\nimport NewTrade from './NewTrade';\nimport Trade from './Trade';\nimport Blotter from './Blotter';\nimport {error} from \"next/dist/build/output/log\";\nimport { withAuthSync } from \"../utils/Auth/auth\";\nimport getHost from '../utils/Auth/get-host'\n\n/**\n * @class Main\n * @constructor\n * Contains all the navigation functions, including the <Tabs /> and their functions (dispatched to reducers/TabReducer)\n * Dependencies used:\n * @react-awesome-tabs for the <Tabs> and <Tab> components, react-awesome-tabs.scss for styling (comes with module)\n * @material-ui for <Grid />\n * @react-redux for useDispatch and useSelector\n * Custom Components used:\n * @class NewTrade - New Trade page\n * @class Home - Home page\n * @class Trade - Trade page\n * @class Header - Header\n */\nconst Main = () => {\n    /**\n     * @constant activeTab\n     * @type {object}\n     * a number that represents the activeTab piece of state\n     */\n    const activeTab = useSelector(state => state.TabReducer.activeTab);\n\n    /**\n     * @var tabs\n     * @type {object}\n     * an array of objects representing the tabs, with each object in the format { title, index, component }\n     */\n    const tabs = useSelector(state => state.TabReducer.tabs);\n\n    /**\n     * @constant dispatch\n     * @type {function}\n     * gives access to dispatch function from Redux store\n     */\n    const dispatch = useDispatch();\n\n    /**\n     * @constant tradeProps\n     * receives data from addNewTrade function and updates the most recent TradeProps\n     */\n    const [tradeProps, changeProps] = useState({ data: { columns: [], rows: [] }});\n\n    /**\n     * @constant showTextField\n     * receives data from handleClick function and toggles the Trade ID popup\n     */\n\n    const [showTradeSearch, toggleShow] = useState(false);\n    /**\n     * @constant MAIN_TABS\n     * @type {array}\n     * array of objects that contains a 'key' and a 'component' that is mapped to the 'component' attribute from a tab object in\n     * @function matchLink\n     */\n    const MAIN_TABS = [\n        { key: 'Home', component: <Home onClick={ handleClick.bind(this) } showTextField={ showTradeSearch }/>},\n        { key: 'NewTrade', component: <NewTrade addNewTrade={ addNewTrade } />},\n        { key: 'Trade', component: Trade(tradeProps)},\n        { key: 'Blotter', component: <Blotter />}\n    ];\n\n    /**\n     * @function matchLink\n     * @type string\n     * @param link\n     * helper function that receives a link {string} from an option in the <HomePane />'s (child components of <Home />) and\n     * matches it to a 'component' in the MAIN_TABS array via the 'key'\n     */\n    function matchLink(link) {\n        for (let i = 0; i < MAIN_TABS.length; i++) {\n            const data = MAIN_TABS[i];\n            if (link === data.key) {\n                return i;\n            }\n        }\n        return new error('Component Not Found');\n    }\n\n\n    /**\n     * @function handleTabSwitch\n     * @type dispatch\n     * @param active\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\n     */\n    function handleTabSwitch(active) {\n        dispatch({ type: 'SWITCH_TAB', payload: active});\n    }\n\n    /**\n     * @function handleTabPositionChange\n     * @type dispatch\n     * @param a\n     * @param b\n     * eventHandler helper function that takes the two tabs to be switched around, switches their indices,...\n     * ...and changes the new active tab\n     */\n    function handleTabPositionChange(a, b) {\n        let c = tabs[a];\n        tabs[a] = tabs[b];\n        tabs[b] = c;\n\n        if(activeTab === a) {\n            dispatch({ type: 'SWITCH_TAB', activeTab: b });\n        }else if(activeTab === b) {\n            dispatch({ type: 'SWITCH_TAB', activeTab: a });\n        }\n\n    }\n\n    /**\n     * @function handleTabClose\n     * @type dispatch\n     * @param index\n     * eventHandler helper function that takes the closed tab and pops it from 'tabs' piece of state\n     */\n    function handleTabClose(index) {\n        dispatch({ type: 'REMOVE_TAB', payload: index });\n    }\n\n\n    /**\n     * @function handleClick\n     * @param link\n     * eventHandler helper function that takes the link as a param and returns a component number from matchLink()...\n     * ...then dispatches a new tab object containing a title, index, and component keys to be appended to 'tabs'...\n     * ...piece of state\n     */\n\n    function handleClick(link) {\n        if (link !== 'TradeSearch') {\n            let component = matchLink(link);\n            const newTabContent = {\n                title: link,\n                index: tabs.length,\n                component: component\n            };\n            dispatch({type: 'ADD_TAB', payload: newTabContent});\n        }\n        else {\n            toggleShow(true);\n        }\n    }\n\n    function addNewTrade(name, fields, values) {\n        console.log([values]);\n        const newTradeContent = {\n            title: name,\n            index: tabs.length,\n            component: matchLink('Trade'),\n            fields: fields,\n            values: values\n        };\n        dispatch({ type: 'ADD_TAB', payload: newTradeContent });\n        changeProps({ data: { columns: fields, rows: values } })\n    }\n    /**\n     * @return\n     * @type Grid\n     * @type Header\n     * @type Tabs\n     * @type Tab\n     * @type MAIN_TABS[component]\n     */\n\n    return (\n        <Grid container spacing={ 0 }>\n            <Grid item xs={ 12 }>\n                <Header />\n            </Grid>\n            <Grid item xs={ 12 }>\n                <Tabs\n                    active={ activeTab }\n                    onTabSwitch={ handleTabSwitch.bind(this) }\n                    onTabPositionChange={ handleTabPositionChange.bind(this) }\n                    onTabClose={ handleTabClose.bind(this) }\n                    draggable={ true }\n                    showAdd={ false }\n                >\n                    {\n                        //maps 'tabs' piece of state to a <Tab> component, changes when 'tabs' changes\n                        tabs.map((value, index) => {\n                            return (\n                                <Tab\n                                    key={ value.title + index }\n                                    title={ value.title }\n                                    showClose={ index !== 0 }\n                                >\n                                    { MAIN_TABS[ value.component ].component }\n                                </Tab>\n                            );\n                        })\n                    }\n                </Tabs>\n            </Grid>\n        </Grid>\n    );\n}\n\nMain.getInitialProps = async ctx => {\n    const { token } = nextCookie(ctx);\n    const apiUrl = getHost(ctx.req) + '/api/profile';\n\n    const redirectOnError = () =>\n        typeof window !== 'undefined'\n            ? Router.push('/Login')\n            : ctx.res.writeHead(302, { Location: '/Login' }).end();\n\n    try {\n        const response = await fetch(apiUrl, {\n            credentials: 'include',\n            headers: {\n                Authorization: JSON.stringify({ token })\n            }\n        })\n\n        if (response.ok) {\n            const js = await response.json()\n            console.log('js', js)\n            return js\n        } else {\n            // https://github.com/developit/unfetch#caveats\n            return await redirectOnError()\n        }\n    } catch (error) {\n        // Implementation or Network error\n        return redirectOnError()\n    }\n}\n\nexport default withAuthSync(Main);\n"]},"metadata":{},"sourceType":"module"}