{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport { Button, Card, CardActionArea, ClickAwayListener, Grid, MenuList, MenuItem } from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\nimport TextField from \"@material-ui/core/TextField\";\nexport default function HomePane(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFlipped = _useState2[0],\n      flip = _useState2[1];\n\n  var anchorRef = useRef(null);\n\n  function flipCard(e) {\n    e.preventDefault();\n    flip(!isFlipped);\n  }\n\n  function OptionsList(props) {\n    return React.createElement(Grid, null, React.createElement(ClickAwayListener, {\n      onClickAway: handleClose\n    }, React.createElement(MenuList, null, props.items.map(function (value, index) {\n      var _onClick = props.onClick;\n      return React.createElement(MenuItem, {\n        key: index,\n        value: props.links[index],\n        onClick: function onClick() {\n          return _onClick(props.links[index]);\n        }\n      }, value);\n    }))));\n  }\n\n  function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    flip(false);\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Card, null, React.createElement(CardActionArea, {\n    onClick: function onClick(e) {\n      return flipCard(e);\n    }\n  }, React.createElement(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"horizontal\"\n  }, React.createElement(\"div\", {\n    key: \"front\"\n  }, React.createElement(\"h1\", null, props.title)), React.createElement(\"div\", {\n    key: \"back\"\n  }, React.createElement(OptionsList, {\n    items: props.items,\n    links: props.links,\n    onClick: props.onClick\n  }))))), props.showTextField && isFlipped ? React.createElement(Card, null, React.createElement(\"div\", null, React.createElement(\"div\", {\n    style: {\n      padding: 10\n    }\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    value: props.textFieldValue,\n    label: props.textFieldLabel,\n    onChange: props.onChange\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6\n  }, React.createElement(Button, {\n    onClick: props.textFieldSubmit,\n    color: \"primary\",\n    variant: \"outlined\",\n    style: {\n      margin: 10\n    }\n  }, \" Submit \")))))) : null);\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/components/home/HomePane.js"],"names":["React","useState","useRef","Button","Card","CardActionArea","ClickAwayListener","Grid","MenuList","MenuItem","ReactCardFlip","TextField","HomePane","props","isFlipped","flip","anchorRef","flipCard","e","preventDefault","OptionsList","handleClose","items","map","value","index","onClick","links","event","current","contains","target","title","showTextField","padding","textFieldValue","textFieldLabel","onChange","textFieldSubmit","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,cAHJ,EAIIC,iBAJJ,EAKIC,IALJ,EAMIC,QANJ,EAOIC,QAPJ,QAQO,mBARP;AASA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACVZ,QAAQ,CAAC,KAAD,CADE;AAAA;AAAA,MAC7Ba,SAD6B;AAAA,MAClBC,IADkB;;AAEpC,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAD,CAAxB;;AAEA,WAASe,QAAT,CAAkBC,CAAlB,EAAqB;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,IAAI,CAAC,CAACD,SAAF,CAAJ;AAEH;;AACD,WAASM,WAAT,CAAqBP,KAArB,EAA4B;AACxB,WACI,oBAAC,IAAD,QACI,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAEQ;AAAhC,OACI,oBAAC,QAAD,QACMR,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,UACxBC,QADwB,GACZb,KADY,CACxBa,OADwB;AAEhC,aAAO,oBAAC,QAAD;AACK,QAAA,GAAG,EAAGD,KADX;AAEK,QAAA,KAAK,EAAGZ,KAAK,CAACc,KAAN,CAAYF,KAAZ,CAFb;AAGK,QAAA,OAAO,EAAG;AAAA,iBAAMC,QAAO,CAACb,KAAK,CAACc,KAAN,CAAYF,KAAZ,CAAD,CAAb;AAAA;AAHf,SAKMD,KALN,CAAP;AAOH,KATC,CADN,CADJ,CADJ,CADJ;AAkBH;;AAGD,WAASH,WAAT,CAAqBO,KAArB,EAA4B;AACxB,QAAIZ,SAAS,CAACa,OAAV,IAAqBb,SAAS,CAACa,OAAV,CAAkBC,QAAlB,CAA2BF,KAAK,CAACG,MAAjC,CAAzB,EAAmE;AAC/D;AACH;;AACDhB,IAAAA,IAAI,CAAC,KAAD,CAAJ;AACH;;AAED,SACI,iCACA,oBAAC,IAAD,QACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAG,iBAAAG,CAAC;AAAA,aAAID,QAAQ,CAACC,CAAD,CAAZ;AAAA;AAA3B,KACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAGJ,SAA3B;AAAuC,IAAA,aAAa,EAAC;AAArD,KACI;AAAK,IAAA,GAAG,EAAC;AAAT,KACI,gCAAMD,KAAK,CAACmB,KAAZ,CADJ,CADJ,EAII;AAAK,IAAA,GAAG,EAAC;AAAT,KACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAGnB,KAAK,CAACS,KAA3B;AAAmC,IAAA,KAAK,EAAGT,KAAK,CAACc,KAAjD;AAAyD,IAAA,OAAO,EAAGd,KAAK,CAACa;AAAzE,IADJ,CAJJ,CADJ,CADJ,CADA,EAcSb,KAAK,CAACoB,aAAN,IAAuBnB,SAAxB,GAEQ,oBAAC,IAAD,QACI,iCACI;AAAK,IAAA,KAAK,EAAE;AAACoB,MAAAA,OAAO,EAAE;AAAV;AAAZ,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE;AAAzB,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAErB,KAAK,CAACsB,cAFjB;AAGI,IAAA,KAAK,EAAEtB,KAAK,CAACuB,cAHjB;AAII,IAAA,QAAQ,EAAEvB,KAAK,CAACwB;AAJpB,IADJ,CADJ,EASI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAExB,KAAK,CAACyB,eAAvB;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAwD,IAAA,OAAO,EAAC,UAAhE;AACQ,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT;AADf,gBADJ,CATJ,CADJ,CADJ,CADJ,CAFR,GAsBQ,IApChB,CADJ;AAyCH","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {\n    Button,\n    Card,\n    CardActionArea,\n    ClickAwayListener,\n    Grid,\n    MenuList,\n    MenuItem\n} from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function HomePane(props) {\n    const [isFlipped, flip] = useState(false);\n    const anchorRef = useRef(null);\n\n    function flipCard(e) {\n        e.preventDefault();\n        flip(!isFlipped);\n\n    }\n    function OptionsList(props) {\n        return (\n            <Grid>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList>\n                        { props.items.map((value, index) => {\n                            const { onClick } = props;\n                            return <MenuItem\n                                        key={ index }\n                                        value={ props.links[index] }\n                                        onClick={ () => onClick(props.links[index]) }\n                                    >\n                                        {value}\n                                  </MenuItem>\n                        }) }\n                    </MenuList>\n                </ClickAwayListener>\n            </Grid>\n        );\n    }\n\n\n    function handleClose(event) {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        flip(false);\n    }\n\n    return (\n        <div>\n        <Card>\n            <CardActionArea onClick={ e => flipCard(e) }>\n                <ReactCardFlip isFlipped={ isFlipped } flipDirection=\"horizontal\">\n                    <div key=\"front\">\n                        <h1>{ props.title }</h1>\n                    </div>\n                    <div key=\"back\">\n                        <OptionsList items={ props.items } links={ props.links } onClick={ props.onClick }/>\n                    </div>\n                </ReactCardFlip>\n            </CardActionArea>\n        </Card>\n            {\n                (props.showTextField && isFlipped) ?\n                    (\n                        <Card>\n                            <div>\n                                <div style={{padding: 10}}>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                value={props.textFieldValue}\n                                                label={props.textFieldLabel}\n                                                onChange={props.onChange}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <Button onClick={props.textFieldSubmit} color=\"primary\" variant=\"outlined\"\n                                                    style={{margin: 10}}> Submit </Button>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </div>\n                        </Card>\n                    ) : null\n            }\n        </div>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}