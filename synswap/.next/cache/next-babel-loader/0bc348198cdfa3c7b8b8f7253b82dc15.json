{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport React, { useState } from 'react';\nimport { Tab, Tabs, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport DataTable from '../components/DataTable';\nimport Header from '../components/main/Header';\nimport { TabContainer } from \"../utils/tradehelpers\";\nimport BestMatch from '../components/trade/BestMatch';\nvar columns = [{\n  width: 400,\n  label: 'Dessert',\n  dataKey: 'dessert'\n}, {\n  width: 240,\n  label: \"Calories\\xA0(g)\",\n  dataKey: 'calories',\n  numeric: true\n}, {\n  width: 240,\n  label: \"Fat\\xA0(g)\",\n  dataKey: 'fat',\n  numeric: true\n}, {\n  width: 240,\n  label: \"Carbs\\xA0(g)\",\n  dataKey: 'carbs',\n  numeric: true\n}, {\n  width: 240,\n  label: \"Protein\\xA0(g)\",\n  dataKey: 'protein',\n  numeric: true\n}];\nvar sample = [['Frozen yoghurt', 159, 6.0, 24, 4.0], ['Ice cream sandwich', 237, 9.0, 37, 4.3], ['Eclair', 262, 16.0, 24, 6.0], ['Cupcake', 305, 3.7, 67, 4.3], ['Gingerbread', 356, 16.0, 49, 3.9]];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return {\n    id: id,\n    dessert: dessert,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [];\n\nfor (var i = 0; i < 200; i += 1) {\n  var randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData.apply(void 0, [i].concat(_toConsumableArray(randomSelection))));\n}\n\nexport default function Trade(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState({\n    rows: [],\n    columns: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n  /**\r\n   * @function tabChange\r\n   * @param e\r\n   * @param newValue\r\n   * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\r\n   */\n\n\n  var tabChange = function tabChange(e, newValue) {\n    setValue(newValue);\n  };\n\n  var BEST_MATCH_TITLE = 'Best Match Score: ' + score + '%';\n  return React.createElement(\"div\", null, React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(\"div\", null, React.createElement(Tabs, {\n    value: value,\n    onChange: tabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true\n  }, React.createElement(Tab, {\n    label: \"Fields\"\n  }), React.createElement(Tab, {\n    label: \"Autofill\"\n  }), React.createElement(Tab, {\n    label: \"CashFlow Schedule\"\n  }), React.createElement(Tab, {\n    label: \"Confirmation\"\n  }), React.createElement(Tab, {\n    label: BEST_MATCH_TITLE\n  })), value === 0 && React.createElement(TabContainer, null, React.createElement(DataTable, {\n    data: data,\n    onRowClick: function onRowClick() {\n      return window.alert('row clicked');\n    }\n  })), value === 1 && React.createElement(TabContainer, null, React.createElement(DataTable, {\n    data: {\n      columns: columns,\n      rows: rows\n    },\n    onRowClick: function onRowClick() {\n      return window.alert('row clicked');\n    }\n  })), value === 2 && React.createElement(\"h1\", null, \" CashFlow Schedule \"), value === 3 && React.createElement(\"h1\", null, \" Confirmation \"), value === 4 && React.createElement(BestMatch, {\n    score: score\n  })))));\n}","map":{"version":3,"sources":["C:\\Users\\liams\\synswap-web-react\\synswap\\pages\\Trade.js"],"names":["React","useState","Tab","Tabs","Grid","useSelector","DataTable","Header","TabContainer","BestMatch","columns","width","label","dataKey","numeric","sample","createData","id","dessert","calories","fat","carbs","protein","rows","i","randomSelection","Math","floor","random","length","push","Trade","props","value","setValue","data","setData","score","setScore","tabChange","e","newValue","BEST_MATCH_TITLE","window","alert"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Tab, Tabs, Grid } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport DataTable from '../components/DataTable';\r\nimport Header from '../components/main/Header';\r\nimport { TabContainer } from \"../utils/tradehelpers\";\r\nimport BestMatch from '../components/trade/BestMatch';\r\n\r\nconst columns= [\r\n    {\r\n        width: 400,\r\n        label: 'Dessert',\r\n        dataKey: 'dessert',\r\n    },\r\n    {\r\n        width: 240,\r\n        label: 'Calories\\u00A0(g)',\r\n        dataKey: 'calories',\r\n        numeric: true,\r\n    },\r\n    {\r\n        width: 240,\r\n        label: 'Fat\\u00A0(g)',\r\n        dataKey: 'fat',\r\n        numeric: true,\r\n    },\r\n    {\r\n        width: 240,\r\n        label: 'Carbs\\u00A0(g)',\r\n        dataKey: 'carbs',\r\n        numeric: true,\r\n    },\r\n    {\r\n        width: 240,\r\n        label: 'Protein\\u00A0(g)',\r\n        dataKey: 'protein',\r\n        numeric: true,\r\n    },\r\n];\r\n\r\nconst sample = [\r\n    ['Frozen yoghurt', 159, 6.0, 24, 4.0],\r\n    ['Ice cream sandwich', 237, 9.0, 37, 4.3],\r\n    ['Eclair', 262, 16.0, 24, 6.0],\r\n    ['Cupcake', 305, 3.7, 67, 4.3],\r\n    ['Gingerbread', 356, 16.0, 49, 3.9],\r\n];\r\n\r\nfunction createData(id, dessert, calories, fat, carbs, protein) {\r\n    return { id, dessert, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 200; i += 1) {\r\n    const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n    rows.push(createData(i, ...randomSelection));\r\n}\r\n\r\n\r\nexport default function Trade(props) {\r\n    const [value, setValue] = useState(0);\r\n    const [data, setData] = useState({ rows: [], columns: []});\r\n    const [score, setScore] = useState(0);\r\n\r\n    /**\r\n     * @function tabChange\r\n     * @param e\r\n     * @param newValue\r\n     * eventHandler helper function that takes the desired tab as a parameter and makes it the new active tab\r\n     */\r\n    const tabChange = (e, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const BEST_MATCH_TITLE = 'Best Match Score: ' + score + '%';\r\n    return (\r\n        <div>\r\n            <Grid container spacing={ 2 }>\r\n                <Grid item xs={ 12 }>\r\n                    <div>\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={tabChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            centered\r\n                        >\r\n                            <Tab label=\"Fields\"/>\r\n                            <Tab label=\"Autofill\"/>\r\n                            <Tab label=\"CashFlow Schedule\"/>\r\n                            <Tab label=\"Confirmation\"/>\r\n                            <Tab label={ BEST_MATCH_TITLE } />\r\n                        </Tabs>\r\n                        {\r\n                            value === 0 &&\r\n                            (\r\n                                <TabContainer>\r\n                                    <DataTable data={ data } onRowClick={() => window.alert('row clicked')}/>\r\n                                </TabContainer>\r\n                            )\r\n                        }\r\n                        {\r\n                            value === 1 &&\r\n                            (\r\n                                <TabContainer>\r\n                                    <DataTable data={{columns: columns, rows: rows}} onRowClick={() => window.alert('row clicked')}/>\r\n                                </TabContainer>\r\n                            )\r\n                        }\r\n                        {\r\n                            value === 2 &&\r\n                            (\r\n                                <h1> CashFlow Schedule </h1>\r\n                            )\r\n                        }\r\n                        {\r\n                            value === 3 &&\r\n                            (\r\n                                <h1> Confirmation </h1>\r\n                            )\r\n                        }\r\n                        {\r\n                            value === 4 &&\r\n                            (\r\n                                <BestMatch score={ score }/>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}