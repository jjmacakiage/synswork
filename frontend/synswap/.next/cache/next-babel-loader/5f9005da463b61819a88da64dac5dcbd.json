{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport React from \"react\";\nimport { Component } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\n\nfunction login(_ref) {\n  var token = _ref.token;\n  cookie.set('token', token, {\n    expires: 1\n  });\n  console.log(token);\n  Router.push('/Main');\n}\n\nfunction logout() {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', _Date$now());\n  Router.push('/Login');\n} // Gets the display name of a JSX component for dev tools\n\n\nvar getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n};\n\nfunction withAuthSync(WrappedComponent) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(_class, _Component);\n\n    _createClass(_class, null, [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(ctx) {\n          var token, componentProps;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  token = auth(ctx);\n                  _context.t0 = WrappedComponent.getInitialProps;\n\n                  if (!_context.t0) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  _context.next = 5;\n                  return WrappedComponent.getInitialProps(ctx);\n\n                case 5:\n                  _context.t0 = _context.sent;\n\n                case 6:\n                  componentProps = _context.t0;\n                  return _context.abrupt(\"return\", _objectSpread({}, componentProps, {\n                    token: token\n                  }));\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function getInitialProps(_x) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    function _class(props) {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n      _this.syncLogout = _this.syncLogout.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        window.addEventListener('storage', this.syncLogout);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        window.removeEventListener('storage', this.syncLogout);\n        window.localStorage.removeItem('logout');\n      }\n    }, {\n      key: \"syncLogout\",\n      value: function syncLogout(event) {\n        if (event.key === 'logout') {\n          console.log('logged out from storage!');\n          Router.push('/Login');\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(WrappedComponent, this.props);\n      }\n    }]);\n\n    return _class;\n  }(Component), _defineProperty(_class, \"displayName\", \"withAuthSync(\".concat(getDisplayName(WrappedComponent), \")\")), _temp;\n}\n\nfunction auth(ctx) {\n  var _nextCookie = nextCookie(ctx),\n      token = _nextCookie.token;\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/Login'\n    });\n    ctx.res.end();\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/Login');\n  }\n\n  return token;\n}\n\nexport { login, logout, withAuthSync, auth };","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/utils/Auth/auth.js"],"names":["Component","Router","nextCookie","cookie","login","token","set","expires","console","log","push","logout","remove","window","localStorage","setItem","getDisplayName","displayName","name","withAuthSync","WrappedComponent","ctx","auth","getInitialProps","componentProps","props","syncLogout","bind","addEventListener","removeEventListener","removeItem","event","key","req","res","writeHead","Location","end"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,KAAT,OAA2B;AAAA,MAATC,KAAS,QAATA,KAAS;AACzBF,EAAAA,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBD,KAApB,EAA2B;AAACE,IAAAA,OAAO,EAAE;AAAV,GAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAJ,EAAAA,MAAM,CAACS,IAAP,CAAY,OAAZ;AACD;;AAED,SAASC,MAAT,GAAmB;AACjBR,EAAAA,MAAM,CAACS,MAAP,CAAc,OAAd,EADiB,CAEjB;;AACAC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsC,WAAtC;AACAd,EAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ;AACD,C,CAED;;;AACA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAhB,SAAS;AAAA,SAC9BA,SAAS,CAACiB,WAAV,IAAyBjB,SAAS,CAACkB,IAAnC,IAA2C,WADb;AAAA,CAAhC;;AAGA,SAASC,YAAT,CAAuBC,gBAAvB,EAAyC;AAAA;;AACvC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAGgCC,GAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAIUhB,kBAAAA,KAJV,GAIkBiB,IAAI,CAACD,GAAD,CAJtB;AAAA,gCAOMD,gBAAgB,CAACG,eAPvB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAQaH,gBAAgB,CAACG,eAAjB,CAAiCF,GAAjC,CARb;;AAAA;AAAA;;AAAA;AAMUG,kBAAAA,cANV;AAAA,qEAUgBA,cAVhB;AAUgCnB,oBAAAA,KAAK,EAALA;AAVhC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAaE,oBAAaoB,KAAb,EAAoB;AAAA;;AAAA;;AAClB,kFAAMA,KAAN;AAEA,YAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AAHkB;AAInB;;AAjBH;AAAA;AAAA,0CAmBuB;AACnBd,QAAAA,MAAM,CAACe,gBAAP,CAAwB,SAAxB,EAAmC,KAAKF,UAAxC;AACD;AArBH;AAAA;AAAA,6CAuB0B;AACtBb,QAAAA,MAAM,CAACgB,mBAAP,CAA2B,SAA3B,EAAsC,KAAKH,UAA3C;AACAb,QAAAA,MAAM,CAACC,YAAP,CAAoBgB,UAApB,CAA+B,QAA/B;AACD;AA1BH;AAAA;AAAA,iCA4BcC,KA5Bd,EA4BqB;AACjB,YAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC1BxB,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAR,UAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ;AACD;AACF;AAjCH;AAAA;AAAA,+BAmCY;AACR,eAAO,oBAAC,gBAAD,EAAsB,KAAKe,KAA3B,CAAP;AACD;AArCH;;AAAA;AAAA,IAAqBzB,SAArB,iEACuCgB,cAAc,CAACI,gBAAD,CADrD;AAuCD;;AAED,SAASE,IAAT,CAAeD,GAAf,EAAoB;AAAA,oBACAnB,UAAU,CAACmB,GAAD,CADV;AAAA,MACVhB,KADU,eACVA,KADU;AAGlB;;;;;;AAIA,MAAIgB,GAAG,CAACY,GAAJ,IAAW,CAAC5B,KAAhB,EAAuB;AACrBgB,IAAAA,GAAG,CAACa,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACAf,IAAAA,GAAG,CAACa,GAAJ,CAAQG,GAAR;AACD,GAViB,CAYlB;;;AACA,MAAI,CAAChC,KAAL,EAAY;AACVJ,IAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ;AACD;;AAED,SAAOL,KAAP;AACD;;AAED,SAASD,KAAT,EAAgBO,MAAhB,EAAwBQ,YAAxB,EAAsCG,IAAtC","sourcesContent":["import { Component } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport cookie from 'js-cookie'\n\nfunction login ({ token }) {\n  cookie.set('token', token, {expires: 1});\n  console.log(token);\n  Router.push('/Main');\n}\n\nfunction logout () {\n  cookie.remove('token');\n  // to support logging out from all windows\n  window.localStorage.setItem('logout', Date.now());\n  Router.push('/Login')\n}\n\n// Gets the display name of a JSX component for dev tools\nconst getDisplayName = Component =>\n  Component.displayName || Component.name || 'Component'\n\nfunction withAuthSync (WrappedComponent) {\n  return class extends Component {\n    static displayName = `withAuthSync(${getDisplayName(WrappedComponent)})`\n\n    static async getInitialProps (ctx) {\n      const token = auth(ctx)\n\n      const componentProps =\n        WrappedComponent.getInitialProps &&\n        (await WrappedComponent.getInitialProps(ctx))\n\n      return { ...componentProps, token }\n    }\n\n    constructor (props) {\n      super(props)\n\n      this.syncLogout = this.syncLogout.bind(this)\n    }\n\n    componentDidMount () {\n      window.addEventListener('storage', this.syncLogout)\n    }\n\n    componentWillUnmount () {\n      window.removeEventListener('storage', this.syncLogout)\n      window.localStorage.removeItem('logout')\n    }\n\n    syncLogout (event) {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!')\n        Router.push('/Login')\n      }\n    }\n\n    render () {\n      return <WrappedComponent {...this.props} />\n    }\n  }\n}\n\nfunction auth (ctx) {\n  const { token } = nextCookie(ctx)\n\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, { Location: '/Login' })\n    ctx.res.end()\n  }\n\n  // We already checked for server. This should only happen on client.\n  if (!token) {\n    Router.push('/Login')\n  }\n\n  return token\n}\n\nexport { login, logout, withAuthSync, auth }\n"]},"metadata":{},"sourceType":"module"}