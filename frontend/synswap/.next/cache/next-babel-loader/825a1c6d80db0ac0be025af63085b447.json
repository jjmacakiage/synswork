{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useMemo, useState } from 'react';\nimport { Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { useDropzone } from 'react-dropzone';\nimport FileTypeList from '../components/fileupload/FileTypeList';\nimport Header from '../components/main/Header';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexGrow: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: theme.spacing(10)\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    input: {\n      display: 'none'\n    }\n  };\n});\nvar baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  minWidth: \"max-content\"\n};\nvar activeStyle = {\n  borderColor: '#2196f3'\n};\nvar acceptStyle = {\n  borderColor: '#00e676'\n};\nvar rejectStyle = {\n  borderColor: '#ff1744'\n};\nexport default function FileUpload(props) {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState([['Excel', 'CSV'], ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel', 'text/plain']]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var _useDropzone = useDropzone({\n    accept: function accept() {\n      var result = '';\n\n      for (var i = 0; i < options[0].length; i++) {\n        if (checked.indexOf(options[0][i]) !== -1) {\n          result = result + options[1][i];\n          i !== options[0].length ? result = result + ',' : null;\n        }\n      }\n\n      return result;\n    }\n  }),\n      acceptedFiles = _useDropzone.acceptedFiles,\n      rejectedFiles = _useDropzone.rejectedFiles,\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      isDragAccept = _useDropzone.isDragAccept,\n      isDragReject = _useDropzone.isDragReject;\n\n  var style = useMemo(function () {\n    return _objectSpread({}, baseStyle, isDragActive ? activeStyle : {}, isDragAccept ? acceptStyle : {}, isDragReject ? rejectStyle : {});\n  }, [isDragActive, isDragReject]);\n  var acceptedFilesItems = acceptedFiles.map(function (file) {\n    return React.createElement(\"li\", {\n      key: file.path\n    }, file.path, \" - \", file.size, \" bytes\");\n  });\n  var rejectedFilesItems = rejectedFiles.map(function (file) {\n    return React.createElement(\"li\", {\n      key: file.path\n    }, file.path, \" - \", file.size, \" bytes\");\n  });\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(Typography, {\n    variant: \"overline\",\n    align: \"center\"\n  }, \" UPLOAD NEW TRADE \"), React.createElement(Divider, {\n    dark: true\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(FileTypeList, {\n    options: options[0],\n    handleToggle: handleToggle,\n    checked: checked\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(\"div\", getRootProps({\n    style: style\n  }), React.createElement(\"input\", getInputProps()), React.createElement(Typography, {\n    variant: \"overline\"\n  }, \"Drag 'n' drop some files here, or click to select files\"), React.createElement(Typography, {\n    variant: \"overline\"\n  }, \"(Only *.jpeg and *.png images will be accepted) \"))), React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    }\n  }, React.createElement(Typography, {\n    variant: \"overline\"\n  }, \"Accepted files\"), React.createElement(\"ul\", null, acceptedFilesItems), React.createElement(Typography, {\n    variant: \"overline\"\n  }, \"Rejected files\"), React.createElement(\"ul\", null, rejectedFilesItems))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-rates-platform/frontend/synswap/pages/FileUpload.js"],"names":["React","useMemo","useState","Divider","Grid","makeStyles","Typography","useDropzone","FileTypeList","Header","useStyles","theme","root","display","flexGrow","alignItems","justifyContent","padding","spacing","button","margin","input","baseStyle","flex","flexDirection","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","minWidth","activeStyle","acceptStyle","rejectStyle","FileUpload","props","classes","checked","setChecked","options","setOptions","accept","result","i","length","indexOf","acceptedFiles","rejectedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","acceptedFilesItems","map","file","path","size","rejectedFilesItems","handleToggle","value","currentIndex","newChecked","push","splice"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport {Divider, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport { useDropzone } from 'react-dropzone';\nimport FileTypeList from '../components/fileupload/FileTypeList';\nimport Header from '../components/main/Header';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexGrow: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: theme.spacing(10)\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none'\n    },\n}));\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    minWidth: \"max-content\"\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\n\nexport default function FileUpload(props) {\n    const classes = useStyles();\n    const [checked, setChecked] = useState([]);\n    const [options, setOptions] = useState([\n        ['Excel', 'CSV'],\n        [\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel',\n            'text/plain'\n        ]]);\n    const {\n        acceptedFiles,\n        rejectedFiles,\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept:\n            () => {\n                let result = '';\n                for (let i = 0; i < options[0].length; i++)\n                    if (checked.indexOf(options[0][i]) !== -1) {\n                        result = result + options[1][i];\n                        (i !== options[0].length) ? result = result + ',' : null\n                    }\n                return result;\n            }\n        });\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject\n    ]);\n\n    const acceptedFilesItems = acceptedFiles.map(file => (\n        <li key={file.path}>\n            {file.path} - {file.size} bytes\n        </li>\n    ));\n\n    const rejectedFilesItems = rejectedFiles.map(file => (\n        <li key={file.path}>\n            {file.path} - {file.size} bytes\n        </li>\n    ));\n\n    const handleToggle = value => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n    return (\n        <Grid container spacing={ 2 } className={ classes.root }>\n            <Grid item xs={ 12 }>\n                <Typography variant=\"overline\" align=\"center\"> UPLOAD NEW TRADE </Typography>\n                <Divider dark/>\n            </Grid>\n            <Grid item xs={12}>\n                <FileTypeList options={ options[0] } handleToggle={ handleToggle } checked={ checked }/>\n            </Grid>\n            <Grid item xs={ 12 }>\n                <div {...getRootProps({style})}>\n                    <input {...getInputProps()} />\n                    <Typography variant=\"overline\">Drag 'n' drop some files here, or click to select files</Typography>\n                    <Typography variant=\"overline\">(Only *.jpeg and *.png images will be accepted) </Typography>\n                </div>\n            </Grid>\n            <Grid item xs={ 12 }>\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column'}}>\n                    <Typography variant=\"overline\">Accepted files</Typography>\n                    <ul>\n                        {acceptedFilesItems}\n                    </ul>\n                    <Typography variant=\"overline\">Rejected files</Typography>\n                    <ul>\n                        {rejectedFilesItems}\n                    </ul>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}