{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Collapse, List, ListItem, ListItemIcon, ListItemText, Checkbox, makeStyles } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    nested: {\n      paddingLeft: theme.spacing(4)\n    }\n  };\n});\nexport default function FileTypeList(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var classes = useStyles();\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  return React.createElement(List, null, React.createElement(ListItem, {\n    button: true,\n    onClick: handleClick\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(Typography, {\n      variant: \"overline\"\n    }, \" Type \")\n  }), open ? React.createElement(ExpandLess, null) : React.createElement(ExpandMore, null)), React.createElement(Collapse, {\n    \"in\": open,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, React.createElement(List, {\n    className: classes.root\n  }, props.options.map(function (value) {\n    var labelId = \"checkbox-list-label-\".concat(value);\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: props.handleToggle(value)\n    }, React.createElement(ListItemIcon, null, React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: props.checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      }\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: React.createElement(Typography, {\n        variant: \"overline\"\n      }, \" \", value, \" \")\n    }));\n  }))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-rates-platform/frontend/synswap/components/fileupload/FileTypeList.js"],"names":["React","useState","Collapse","List","ListItem","ListItemIcon","ListItemText","Checkbox","makeStyles","ExpandLess","ExpandMore","Typography","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","FileTypeList","props","open","setOpen","classes","handleClick","options","map","value","labelId","undefined","handleToggle","checked","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,YAAnC,EAAiDC,YAAjD,EAA+DC,QAA/D,EAAyEC,UAAzE,QAA2F,mBAA3F;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAAAK,KAAK;AAAA,SAAK;AACnCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,QAAQ,EAAE,GAFR;AAGFC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHxC,KAD6B;AAMnCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,WAAW,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd;AADT;AAN2B,GAAL;AAAA,CAAN,CAA5B;AAWA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,kBAChBxB,QAAQ,CAAC,KAAD,CADQ;AAAA;AAAA,MACjCyB,IADiC;AAAA,MAC3BC,OAD2B;;AAExC,MAAMC,OAAO,GAAGhB,SAAS,EAAzB;;AAEA,WAASiB,WAAT,GAAuB;AACnBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH;;AAED,SACI,oBAAC,IAAD,QACI,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,EAAEG;AAA1B,KACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAG,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC;AAApB;AAAxB,IADJ,EAEKH,IAAI,GAAG,oBAAC,UAAD,OAAH,GAAoB,oBAAC,UAAD,OAF7B,CADJ,EAKI,oBAAC,QAAD;AAAU,UAAIA,IAAd;AAAoB,IAAA,OAAO,EAAC,MAA5B;AAAmC,IAAA,aAAa;AAAhD,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACd;AAAzB,KACKW,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAkB,UAAAC,KAAK,EAAI;AACpB,QAAMC,OAAO,iCAA0BD,KAA1B,CAAb;AACA,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAEE,SAA5B;AAAuC,MAAA,KAAK,MAA5C;AAA6C,MAAA,MAAM,MAAnD;AAAoD,MAAA,OAAO,EAAGT,KAAK,CAACU,YAAN,CAAmBH,KAAnB;AAA9D,OACI,oBAAC,YAAD,QACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAEP,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBL,KAAtB,MAAiC,CAAC,CAF/C;AAGI,MAAA,QAAQ,EAAE,CAAC,CAHf;AAII,MAAA,aAAa,MAJjB;AAKI,MAAA,UAAU,EAAE;AAAC,2BAAmBC;AAApB;AALhB,MADJ,CADJ,EAUI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,OAAlB;AAA2B,MAAA,OAAO,EAAG,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,cAAiCD,KAAjC;AAArC,MAVJ,CADJ;AAcH,GAhBJ,CADL,CADJ,CALJ,CADJ;AA6BH","sourcesContent":["import React, { useState } from 'react';\nimport { Collapse, List, ListItem, ListItemIcon, ListItemText, Checkbox, makeStyles } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function FileTypeList(props) {\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n\n    function handleClick() {\n        setOpen(!open);\n    }\n\n    return (\n        <List>\n            <ListItem button onClick={handleClick}>\n                <ListItemText primary={ <Typography variant=\"overline\"> Type </Typography> } />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List className={classes.root}>\n                    {props.options.map(value => {\n                            const labelId = `checkbox-list-label-${value}`;\n                            return (\n                                <ListItem key={value} role={undefined} dense button onClick={ props.handleToggle(value) }>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={props.checked.indexOf(value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{'aria-labelledby': labelId}}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={ <Typography variant=\"overline\"> {value} </Typography> }/>\n                                </ListItem>\n                            );\n                        })}\n                </List>\n            </Collapse>\n        </List>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}