{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport { Card, CardActionArea } from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\nimport List from './List';\nimport Typography from \"@material-ui/core/Typography\";\nexport default function HomePane(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFlipped = _useState2[0],\n      flip = _useState2[1];\n\n  var anchorRef = useRef(null);\n\n  function flipCard(e) {\n    e.preventDefault();\n    flip(!isFlipped);\n  }\n\n  function _handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    flip(false);\n  }\n\n  return React.createElement(Card, {\n    square: true\n  }, React.createElement(CardActionArea, {\n    onClick: function onClick(e) {\n      return flipCard(e);\n    }\n  }, React.createElement(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"horizontal\"\n  }, React.createElement(\"div\", {\n    key: \"front\"\n  }, React.createElement(Typography, {\n    variant: \"overline\"\n  }, \" \", props.title)), React.createElement(\"div\", {\n    key: \"back\"\n  }, React.createElement(List, {\n    items: props.items,\n    links: props.links,\n    onClick: props.onClick,\n    handleClose: function handleClose(e) {\n      return _handleClose(e);\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/jjmacakiage/dev/synswap-web-react/synswap/components/home/HomePane.js"],"names":["React","useState","useRef","Card","CardActionArea","ReactCardFlip","List","Typography","HomePane","props","isFlipped","flip","anchorRef","flipCard","e","preventDefault","handleClose","event","current","contains","target","title","items","links","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SACIC,IADJ,EAEIC,cAFJ,QAGO,mBAHP;AAIA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACVR,QAAQ,CAAC,KAAD,CADE;AAAA;AAAA,MAC7BS,SAD6B;AAAA,MAClBC,IADkB;;AAEpC,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;;AAEA,WAASW,QAAT,CAAkBC,CAAlB,EAAqB;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,IAAI,CAAC,CAACD,SAAF,CAAJ;AACH;;AAID,WAASM,YAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAIL,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,QAAlB,CAA2BF,KAAK,CAACG,MAAjC,CAAzB,EAAmE;AAC/D;AACH;;AACDT,IAAAA,IAAI,CAAC,KAAD,CAAJ;AACH;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAG;AAAf,KACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAG,iBAAAG,CAAC;AAAA,aAAID,QAAQ,CAACC,CAAD,CAAZ;AAAA;AAA3B,KACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAGJ,SAA3B;AAAuC,IAAA,aAAa,EAAC;AAArD,KACI;AAAK,IAAA,GAAG,EAAC;AAAT,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,UAAkCD,KAAK,CAACY,KAAxC,CADJ,CADJ,EAII;AAAK,IAAA,GAAG,EAAC;AAAT,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAGZ,KAAK,CAACa,KADlB;AAEI,IAAA,KAAK,EAAGb,KAAK,CAACc,KAFlB;AAGI,IAAA,OAAO,EAAGd,KAAK,CAACe,OAHpB;AAII,IAAA,WAAW,EAAG,qBAAAV,CAAC;AAAA,aAAIE,YAAW,CAACF,CAAD,CAAf;AAAA;AAJnB,IADJ,CAJJ,CADJ,CADJ,CADJ;AAmBH","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {\n    Card,\n    CardActionArea,\n} from '@material-ui/core';\nimport ReactCardFlip from 'react-card-flip';\n\nimport List from './List';\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function HomePane(props) {\n    const [isFlipped, flip] = useState(false);\n    const anchorRef = useRef(null);\n\n    function flipCard(e) {\n        e.preventDefault();\n        flip(!isFlipped);\n    }\n\n\n\n    function handleClose(event) {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        flip(false);\n    }\n\n    return (\n        <Card square={ true }>\n            <CardActionArea onClick={ e => flipCard(e) }>\n                <ReactCardFlip isFlipped={ isFlipped } flipDirection=\"horizontal\">\n                    <div key=\"front\">\n                        <Typography variant=\"overline\"> { props.title }</Typography>\n                    </div>\n                    <div key=\"back\">\n                        <List\n                            items={ props.items }\n                            links={ props.links }\n                            onClick={ props.onClick }\n                            handleClose={ e => handleClose(e)}\n                        />\n                    </div>\n                </ReactCardFlip>\n            </CardActionArea>\n        </Card>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}